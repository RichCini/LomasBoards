            l1rom.lst       LDP	REV 1.0 10/30/85		Sourcer	v7.00   12-Apr-24  12:34 am   Page 1


				PAGE  59,132

				;��������������������������������������������������������������������������
				;��					                                 ��
				;��				L1ROM	                                 ��
				;��					                                 ��
				;��      Created:			                                 ��
				;��      Code type: zero start		                                 ��
				;��      Passes:    5          Analysis	Options on: QRS                  ��
				;��					                                 ��
				;��������������������������������������������������������������������������

				target		EQU   'T1'                      ; Target assembler: TASM-1.0

				include  srmacros.inc


				; The following equates show data references outside the range of the program.

     = 0000			data_1e		equ	0			; (0000:0000=57h) INT 0 /0
     = 0004			data_2e		equ	4			; (0000:0004=0F4h) INT 1 ss
     = 0020			data_3e		equ	20h			; (0000:0020=3Ch) INT 8 timer
     = 0022			data_4e		equ	22h			; (0000:0022=0DBBh)
     = 0024			data_5e		equ	24h			; (0000:0024=45h) INT 9 keyboard irq
     = 0026			data_6e		equ	26h			; (0000:0026=0DBBh)
     = 0040			data_7e		equ	40h			; (0000:0040=110h) INT 10 video
     = 0042			data_8e		equ	42h			; (0000:0042=0C000h)
     = 0044			data_9e		equ	44h			; (0000:0044=6E33h) INT 11 equipment
     = 0046			data_10e	equ	46h			; (0000:0046=0F000h)
     = 0048			data_11e	equ	48h			; (0000:0048=6E3Dh) INT 12 memory size
     = 004A			data_12e	equ	4Ah			; (0000:004A=0F000h)
     = 004C			data_13e	equ	4Ch			; (0000:004C=774h) INT 13 disk
     = 004E			data_14e	equ	4Eh			; (0000:004E=70h)
     = 0050			data_15e	equ	50h			; (0000:0050=0A0E2h) INT 14 serial
     = 0052			data_16e	equ	52h			; (0000:0052=0F000h)
     = 0058			data_17e	equ	58h			; (0000:0058=0A5A5h) INT 16 keyboard
     = 005A			data_18e	equ	5Ah			; (0000:005A=0F000h)
     = 005C			data_19e	equ	5Ch			; (0000:005C=0ABEAh) INT 17 parallel printer
     = 005E			data_20e	equ	5Eh			; (0000:005E=0F000h)
     = 0060			data_21e	equ	60h			; (0000:0060=7370h) INT 18 BASIC
     = 0062			data_22e	equ	62h			; (0000:0062=0F000h)
     = 0064			data_23e	equ	64h			; (0000:0064=7FBh) INT 19 IPL
     = 0066			data_24e	equ	66h			; (0000:0066=70h)
     = 0068			data_25e	equ	68h			; (0000:0068=0AC96h) INT 1A TOD
     = 006A			data_26e	equ	6Ah			; (0000:006A=0F000h)
     = 006C			data_27e	equ	6Ch			; (0000:006C=6EEh) INT 1B kbd break
     = 006E			data_28e	equ	6Eh			; (0000:006E=70h)
     = 0070			data_29e	equ	70h			; (0000:0070=0FF53h) INT 1C user timer
     = 0072			data_30e	equ	72h			; (0000:0072=0F000h)
     = 0074			data_31e	equ	74h			; (0000:0074=6D68h) INT 1D (6845 init tables)
     = 0078			data_33e	equ	78h			; (0000:0078=522h)
     = 007C			data_35e	equ	7Ch			; (0000:007C=1333h) INT 1F char table

				; DOS load area
     = 7C00			data_36e	equ	7C00h			;*(0000:7C00=0E8h)

				; BIOS data area
     = 0000			rs232_port_1	equ	0			; (0040:0000=3F8h)
     = 0008			prn_port_1	equ	8			; (0040:0008=378h)
     = 0010			equip_bits	equ	10h			; (0040:0010=4427h)
     = 0013			main_ram_size	equ	13h			; (0040:0013=27Fh)
     = 0017			keybd_flags_1	equ	17h			; (0040:0017=0)
     = 0018			keybd_flags_2	equ	18h			; (0040:0018=0)
     = 0019			keybd_alt_num	equ	19h			; (0040:0019=0)
     = 001A			keybd_q_head	equ	1Ah			; (0040:001A=26h)
     = 001C			keybd_q_tail	equ	1Ch			; (0040:001C=26h)
     = 003E			dsk_recal_stat	equ	3Eh			; (0040:003E=1)
     = 003F			dsk_motor_stat	equ	3Fh			; (0040:003F=0)
     = 0040			dsk_motor_tmr	equ	40h			; (0040:0040=0DEh)
     = 0041			dsk_ret_code	equ	41h			; (0040:0041=0)
     = 0042			dsk_status_1	equ	42h			; (0040:0042=4)
     = 0045			dsk_status_4	equ	45h			; (0040:0045=0)
     = 0047			dsk_status_6	equ	47h			; (0040:0047=10h)
     = 0049			video_mode	equ	49h			; (0040:0049=3)
     = 004A			video_columns	equ	4Ah			; (0040:004A=50h)
     = 004C			video_buf_siz	equ	4Ch			; (0040:004C=1000h)
     = 004E			video_segment	equ	4Eh			; (0040:004E=0)
     = 0050			vid_curs_pos0	equ	50h			; (0040:0050=184Fh)
     = 0060			vid_curs_mode	equ	60h			; (0040:0060=2000h)
     = 0062			video_page	equ	62h			; (0040:0062=0)
     = 0063			video_port	equ	63h			; (0040:0063=3D4h)
     = 0065			video_mode_reg	equ	65h			; (0040:0065=0)
     = 0066			video_color	equ	66h			; (0040:0066=0)
     = 0067			gen_io_ptr	equ	67h			; (0040:0067=3)
     = 0069			gen_io_seg	equ	69h			; (0040:0069=0C000h)
     = 006B			gen_int_occured	equ	6Bh			; (0040:006B=0)
     = 006C			timer_low	equ	6Ch			; (0040:006C=93C3h)
     = 006E			timer_hi	equ	6Eh			; (0040:006E=0)
     = 0070			timer_rolled	equ	70h			; (0040:0070=0)
     = 0074			hdsk_status_1	equ	74h			; (0040:0074=0)
     = 0078			prn_timeout_1	equ	78h			; (0040:0078=0)
     
     = 0000			data_37e	equ	0			;*(1000:0000=24h)
     = 03FE			data_38e	equ	3FEh			;*(1040:03FE=0C6h)
     = 2000			data_100e	equ	2000h			;*(9672:2000=0)
     = 2001			data_101e	equ	2001h			;*(9672:2001=0)
     = 0049			data_102e	equ	49h			; (C000:0049=61h)
     = 16D9			data_103e	equ	16D9h			; (C000:16D9=18h)

				seg_a		segment	byte public
						assume	cs:seg_a, ds:seg_a


						org	0

				l1rom		proc	far

9672:0000			db	"LDP REV 1.0 10/30/85", 10,13,0
				
				; 0017
				start:
     0017					jmp 	$+2
     0019					cli
9672:001A  BA FFFC				mov	dx,0FFFCh
9672:001D  B0 17				mov	al,17h
9672:001F  EE					out	dx,al			; port 0FFFCh ??I/O Non-standard
9672:0020  BA FFFD				mov	dx,0FFFDh
9672:0023  B0 08				mov	al,8
9672:0025  EE					out	dx,al			; port 0FFFDh ??I/O Non-standard
9672:0026  B0 0F				mov	al,0Fh
9672:0028  EE					out	dx,al			; port 0FFFDh ??I/O Non-standard
9672:0029  B0 FF				mov	al,0FFh
9672:002B  EE					out	dx,al			; port 0FFFDh ??I/O Non-standard
9672:002C  FC					cld				; Clear direction
9672:002D  33 DB				xor	bx,bx			; Zero register
9672:002F  8E DB				mov	ds,bx
9672:0031  8E C3				mov	es,bx
9672:0033  BA FFFD				mov	dx,0FFFDh
9672:0036  B0 FF				mov	al,0FFh
9672:0038  EE					out	dx,al			; port 0FFFDh ??I/O Non-standard
9672:0039  B8 5555				mov	ax,5555h
9672:003C			loc_3:						;  xref 9672:005A
9672:003C �B9 8000				mov	cx,8000h
9672:003F  8B F3				mov	si,bx
9672:0041  8B FB				mov	di,bx
9672:0043  F3/ AB				rep	stosw			; Rep when cx >0 Store ax to es:[di]
9672:0045  B9 8000				mov	cx,8000h
9672:0048  F3/ AF				repe	scasw			; Rep zf=1+cx >0 Scan es:[di] for ax
9672:004A  E3 06				jcxz	loc_4			; Jump if cx=0
9672:004C  BA 0066				mov	dx,66h
9672:004F  E9 04D6				jmp	loc_62			; (0528)
9672:0052			loc_4:						;  xref 9672:004A
9672:0052  3D AAAA				cmp	ax,0AAAAh
9672:0055  74 22				je	loc_5			; Jump if equal
9672:0057  B8 AAAA				mov	ax,0AAAAh
9672:005A  EB E0				jmp	short loc_3		; (003C)
							                        ;* No entry point to code
9672:005C  B8 0000				mov	ax,0
9672:005F  B9 8000				mov	cx,8000h
9672:0062  8B F8				mov	di,ax
9672:0064  F3/ AB				rep	stosw			; Rep when cx >0 Store ax to es:[di]
9672:0066  B8 0527				mov	ax,527h
9672:0069 �BE 0000				mov	si,data_1e		; (0000:0000=57h)
9672:006C  89 04				mov	[si],ax
9672:006E  8C 4C 02				mov	[si+2],cs
9672:0071 �BF 0004				mov	di,data_2e		; (0000:0004=0F4h)
9672:0074  B9 01FE				mov	cx,1FEh
9672:0077  F3/ A5				rep	movsw			; Rep when cx >0 Mov [si] to es:[di]
9672:0079			loc_5:						;  xref 9672:0055
9672:0079  FA					cli				; Disable interrupts
9672:007A  B8 0030				mov	ax,30h
9672:007D  8E D0				mov	ss,ax
9672:007F  BC 0100				mov	sp,100h
9672:0082  E8 0E98				call	sub_37			; (0F1D)
9672:0085  E8 007F				call	sub_3			; (0107)
9672:0088  74 06				jz	loc_6			; Jump if zero
9672:008A �BE 00B5				mov	si,offset data_57	; (9672:00B5='ROM checksum fai')
9672:008D  E8 04E6				call	sub_13			; (0576)
9672:0090			loc_6:						;  xref 9672:0088
9672:0090  E8 0039				call	sub_2			; (00CC)
9672:0093 �BE 0000				mov	si,0			; (9672:0000=4Ch)
9672:0096  E8 04DD				call	sub_13			; (0576)
9672:0099  E8 03C6				call	sub_11			; (0462)
9672:009C  E8 0381				call	sub_10			; (0420)
9672:009F  E8 00E4				call	sub_4			; (0186)
9672:00A2  E8 09AC		;*		call	sub_33			;*(0A51)
9672:00A2  E8 AC 09				db	0E8h,0ACh, 09h
9672:00A5  E8 04DF				call	sub_14			; (0587)
9672:00A8  B4 00				mov	ah,0
9672:00AA  CD 13				int	13h			; Disk  dl=drive ?  ah=func 00h
										;  reset disk, al=return status
9672:00AC  E8 01CD				call	sub_6			; (027C)
9672:00AF  E8 0139				call	sub_5			; (01EB)
9672:00B2  EB 64				jmp	short loc_10		; (0118)
9672:00B4  90					db	90h
9672:00B5  52 4F 4D 20 63 68	data_57		db	'ROM checksum failure', 0Ah, 0Dh, 0
9672:00BB  65 63 6B 73 75 6D
9672:00C1  20 66 61 69 6C 75
9672:00C7  72 65 0A 0D 00

				l1rom		endp

				;��������������������������������������������������������������������������
				;                              SUBROUTINE
				;
				;         Called from:   9672:0090
				;��������������������������������������������������������������������������

9672:00CC			sub_2		proc	near
9672:00CC �BE 00E0				mov	si,offset data_58	; (9672:00E0=81h)
9672:00CF  BA 0000				mov	dx,0
9672:00D2			loc_7:						;  xref 9672:00DD
9672:00D2 �2E: AC				lods	byte ptr cs:[si]	; String [si] to al
9672:00D4  84 C0				test	al,al
9672:00D6  74 07				jz	loc_ret_8		; Jump if zero
9672:00D8  8A D0				mov	dl,al
9672:00DA  2E: AC				lods	byte ptr cs:[si]	; String [si] to al
9672:00DC  EE					out	dx,al			; port 81h, DMA page reg ch 2
9672:00DD  EB F3				jmp	short loc_7		; (00D2)

9672:00DF			loc_ret_8:					;  xref 9672:00D6
9672:00DF  C3					retn
				sub_2		endp

				; INIT table?		;  xref 9672:00CC
9672:00E0  81			data_58		db	81h, 00h, 81h, 00h, 81h, 00h, 81h, 40h
9672:00E8  81 CE 81 37 85			db	81h,0CEh, 81h, 37h, 85h, 00h, 85h, 00h
9672:00F0  85			data_59		db	85h, 00h, 85h, 40h, 85h,0CEh, 85h, 37h
9672:00F8  8B 98 8F 36 8C			db	8Bh, 98h, 8Fh, 36h, 8Ch, 10h, 8Ch, 00h
						db	8Fh, 76h, 8dh, 10h, 8dh, 0, 0

				;��������������������������������������������������������������������������
				;                              SUBROUTINE
				;
				;         Called from:   9672:0085
				;��������������������������������������������������������������������������

9672:0107			sub_3		proc	near
9672:0107 �BB 0000				mov	bx,0			; (9672:0000=4Ch)
9672:010A  B0 00				mov	al,0
9672:010C  B9 2000				mov	cx,2000h

9672:010F			locloop_9:					;  xref 9672:0113
9672:010F  2E: 02 07				add	al,cs:[bx]
9672:0112  43					inc	bx
9672:0113  E2 FA				loop	locloop_9		; Loop if cx > 0

9672:0115  84 C0				test	al,al
9672:0117  C3					retn
				sub_3		endp

9672:0118			loc_10:						;  xref 9672:00B2, 0145
9672:0118 �BE 014C				mov	si,14Ch			; (9672:014C='Attempting to bo')
9672:011B  E8 0458				call	sub_13			; (0576)
9672:011E  33 C0				xor	ax,ax			; Zero register
9672:0120  8E C0				mov	es,ax
9672:0122  B9 0004				mov	cx,4

9672:0125			locloop_11:					;  xref 9672:012D
9672:0125  51					push	cx
9672:0126  B4 00				mov	ah,0
9672:0128  CD 13				int	13h			; Disk  dl=drive a  ah=func 00h
										;  reset disk, al=return status
9672:012A  59					pop	cx
9672:012B  73 02				jnc	loc_12			; Jump if carry=0
9672:012D  E2 F6				loop	locloop_11		; Loop if cx > 0

9672:012F			loc_12:						;  xref 9672:012B
9672:012F �BB 7C00				mov	bx,data_36e		; (0000:7C00=0E8h)
9672:0132  8B D0				mov	dx,ax
9672:0134  B9 0001				mov	cx,1
9672:0137  B0 08				mov	al,8
9672:0139  B4 02				mov	ah,2
9672:013B  CD 13				int	13h			; Disk  dl=drive a  ah=func 02h
										;  read sectors to memory es:bx
										;   al=#,ch=cyl,cl=sectr,dh=head
9672:013D  73 08				jnc	loc_13			; Jump if carry=0
9672:013F  B9 0019				mov	cx,19h
9672:0142  E8 02D1				call	sub_9			; (0416)
9672:0145  EB D1				jmp	short loc_10		; (0118)
9672:0147			loc_13:						;  xref 9672:013D
9672:0147  EA 0000:7C00		;*		jmp	far ptr loc_1		;*(0000:7C00)
9672:0147  EA					db	0EAh
9672:0148  7C00 0000				dw	7C00h, 0

9672:014C  41 74 74 65 6D 70			db	'Attempting to boot from diskette'
9672:016C  2E 0D 0A 00				db	'.', 0Dh, 0Ah, 0

;9672:0170  1E B8 40 00 8E D8			db	 1Eh,0B8h, 40h, 00h, 8Eh,0D8h
;9672:0176  A1 13 00 1F CF 1E			db	0A1h, 13h, 00h, 1Fh,0CFh, 1Eh
;9672:017C  B8 40 00 8E D8 A1			db	0B8h, 40h, 00h, 8Eh,0D8h,0A1h
;9672:0182  10 00 1F CF				db	 10h, 00h, 1Fh,0CFh
						push	ds
						mov	ax,0040
						mov	ds,ax
						mov	ax,[0013]	;main ram size
						pop	ds
						iret 
;9672:017B
						push	ds
						mov	ax,0040
						mov	ds,ax
						mov	ax,[0010]	;equip bits
						pop	ds
						iret 


				;��������������������������������������������������������������������������
				;                              SUBROUTINE
				;
				;         Called from:   9672:009F
				;��������������������������������������������������������������������������

9672:0186			sub_4		proc	near
9672:0186  FC					cld				; Clear direction
9672:0187  1E					push	ds
9672:0188  06					push	es
9672:0189  B8 0040				mov	ax,40h
9672:018C  8E D8				mov	ds,ax
9672:018E  BB 1000				mov	bx,1000h
9672:0191  C7 06 0013 0040			mov	word ptr ds:main_ram_size,40h	; (0040:0013=27Fh)
9672:0197  B8 55AA				mov	ax,55AAh
9672:019A  BA AA55				mov	dx,0AA55h
9672:019D �BF 03FE				mov	di,data_38e		; (1040:03FE=0C6h)
9672:01A0			loc_14:						;  xref 9672:01B9
9672:01A0 �8E C3				mov	es,bx
9672:01A2  26: 89 05				mov	es:[di],ax
9672:01A5  52					push	dx
9672:01A6  5A					pop	dx
9672:01A7  26: 39 05				cmp	es:[di],ax
9672:01AA  75 0F				jne	loc_15			; Jump if not equal
9672:01AC  FF 06 0013				inc	word ptr ds:main_ram_size	; (0040:0013=27Fh)
9672:01B0  83 C3 40				add	bx,40h
9672:01B3  81 FB B7FF				cmp	bx,0B7FFh
9672:01B7  73 02				jae	loc_15			; Jump if above or =
9672:01B9  EB E5				jmp	short loc_14		; (01A0)
9672:01BB			loc_15:						;  xref 9672:01AA, 01B7
9672:01BB  A1 0013				mov	ax,ds:main_ram_size	; (0040:0013=27Fh)
9672:01BE  2D 0040				sub	ax,40h
9672:01C1  8B C8				mov	cx,ax
9672:01C3  BB 1000				mov	bx,1000h
9672:01C6  B8 0000				mov	ax,0

9672:01C9			locloop_16:					;  xref 9672:01D8
9672:01C9 �BF 0000				mov	di,data_37e		; (1000:0000=24h)
9672:01CC  8E C3				mov	es,bx
9672:01CE  51					push	cx
9672:01CF  B9 0200				mov	cx,200h
9672:01D2  F3/ AB				rep	stosw			; Rep when cx >0 Store ax to es:[di]
9672:01D4  59					pop	cx
9672:01D5  83 C3 40				add	bx,40h
9672:01D8  E2 EF				loop	locloop_16		; Loop if cx > 0

9672:01DA  33 C0				xor	ax,ax			; Zero register
9672:01DC  8E D8				mov	ds,ax
9672:01DE  B8 0170				mov	ax,170h
9672:01E1  A3 0048				mov	ds:data_11e,ax		; (0000:0048=6E3Dh)
9672:01E4  8C 0E 004A				mov	ds:data_12e,cs		; (0000:004A=0F000h)
9672:01E8  07					pop	es
9672:01E9  1F					pop	ds
9672:01EA  C3					retn
				sub_4		endp


				;��������������������������������������������������������������������������
				;                              SUBROUTINE
				;
				;         Called from:   9672:00AF
				;��������������������������������������������������������������������������
				; INT17 intercept
9672:01EB			sub_5		proc	near
9672:01EB  1E					push	ds
9672:01EC  33 C0				xor	ax,ax			; Zero register
9672:01EE  8E D8				mov	ds,ax
9672:01F0  B8 020B				mov	ax,20Bh
9672:01F3  A3 005C				mov	ds:data_19e,ax		; (0000:005C=0ABEAh)
9672:01F6  8C 0E 005E				mov	ds:data_20e,cs		; (0000:005E=0F000h)
9672:01FA  B8 0040				mov	ax,40h
9672:01FD  8E D8				mov	ds,ax
9672:01FF  C7 06 0008 0088			mov	word ptr ds:prn_port_1,88h	; (0040:0008=378h)
9672:0205  1F					pop	ds
9672:0206  B4 01				mov	ah,1
9672:0208  CD 17				int	17h			; Printer  dx=prn?, ah=func 01h
										;  initialize, ah=return status
9672:020A  C3					retn
				sub_5		endp

				INT17E			                        ;* No entry point to code
9672:020B  FB					sti				; Enable interrupts
9672:020C  1E					push	ds
9672:020D  52					push	dx
9672:020E  51					push	cx
9672:020F  53					push	bx
9672:0210  56					push	si
9672:0211  BB 0040				mov	bx,40h
9672:0214  8E DB				mov	ds,bx
9672:0216  84 E4				test	ah,ah
9672:0218  74 0E				jz	loc_18			; Jump if zero
9672:021A  FE CC				dec	ah
9672:021C  74 3D				jz	loc_21			; Jump if zero
9672:021E  FE CC				dec	ah
9672:0220  74 49				jz	loc_22			; Jump if zero
9672:0222			loc_17:						;  xref 9672:023E, 027A
9672:0222 �5E					pop	si
9672:0223  5B					pop	bx
9672:0224  59					pop	cx
9672:0225  5A					pop	dx
9672:0226  1F					pop	ds
9672:0227  CF					iret				; Interrupt return
9672:0228			loc_18:						;  xref 9672:0218
9672:0228  50					push	ax
9672:0229  B3 32				mov	bl,32h			; '2'
9672:022B  33 C9				xor	cx,cx			; Zero register
9672:022D  E6 89				out	89h,al			; port 89h, DMA page reg ch 6

9672:022F			locloop_19:					;  xref 9672:0235, 0239
9672:022F  E4 8A				in	al,8Ah			; port 8Ah, DMA page reg ch 7
9672:0231  A8 40				test	al,40h			; '@'
9672:0233  74 0B				jz	loc_20			; Jump if zero
9672:0235  E2 F8				loop	locloop_19		; Loop if cx > 0

9672:0237  FE CB				dec	bl
9672:0239  75 F4				jnz	locloop_19		; Jump if not zero
9672:023B  80 CC 01				or	ah,1
9672:023E  EB E2				jmp	short loc_17		; (0222)
9672:0240			loc_20:						;  xref 9672:0233
9672:0240  E8 01CB				call	sub_8			; (040E)
9672:0243  B0 02				mov	al,2
9672:0245  E6 8B				out	8Bh,al			; port 8Bh, DMA page reg ch 5
9672:0247  E8 01C4				call	sub_8			; (040E)
9672:024A  B0 03				mov	al,3
9672:024C  E6 8B				out	8Bh,al			; port 8Bh, DMA page reg ch 5
9672:024E  E8 01BD				call	sub_8			; (040E)
9672:0251  B0 02				mov	al,2
9672:0253  E6 8B				out	8Bh,al			; port 8Bh, DMA page reg ch 5
9672:0255  E8 01B6				call	sub_8			; (040E)
9672:0258  58					pop	ax
9672:0259  EB 10				jmp	short loc_22		; (026B)
9672:025B			loc_21:						;  xref 9672:021C
9672:025B  50					push	ax
9672:025C  B0 98				mov	al,98h
9672:025E  E6 8B				out	8Bh,al			; port 8Bh, DMA page reg ch 5
9672:0260  E8 01AB				call	sub_8			; (040E)
9672:0263  B0 02				mov	al,2
9672:0265  E6 8B				out	8Bh,al			; port 8Bh, DMA page reg ch 5
9672:0267  E8 01A4				call	sub_8			; (040E)
9672:026A  58					pop	ax
9672:026B			loc_22:						;  xref 9672:0220, 0259
9672:026B  50					push	ax
9672:026C  E4 8A				in	al,8Ah			; port 8Ah, DMA page reg ch 7
9672:026E  B3 10				mov	bl,10h
9672:0270  A8 40				test	al,40h			; '@'
9672:0272  74 03				jz	loc_23			; Jump if zero
9672:0274  80 CB 80				or	bl,80h
9672:0277			loc_23:						;  xref 9672:0272
9672:0277  58					pop	ax
9672:0278  8A E3				mov	ah,bl
9672:027A  EB A6				jmp	short loc_17		; (0222)

				;��������������������������������������������������������������������������
				;                              SUBROUTINE
				;
				;         Called from:   9672:00AC
				;��������������������������������������������������������������������������
				; INT14 intercept
9672:027C			sub_6		proc	near
9672:027C  1E					push	ds
9672:027D  33 C0				xor	ax,ax			; Zero register
9672:027F  8E D8				mov	ds,ax
9672:0281  B8 02A2				mov	ax,2A2h
9672:0284  A3 0050				mov	ds:data_15e,ax		; (0000:0050=0A0E2h)
9672:0287  8C 0E 0052				mov	ds:data_16e,cs		; (0000:0052=0F000h)
9672:028B  B8 0040				mov	ax,40h
9672:028E  8E D8				mov	ds,ax
9672:0290 �BB 0000				mov	bx,rs232_port_1		; (0040:0000=0F8h)
9672:0293  B8 0080				mov	ax,80h
9672:0296  89 07				mov	[bx],ax
9672:0298  B8 0084				mov	ax,84h
9672:029B  83 C3 02				add	bx,2
9672:029E  89 07				mov	[bx],ax
9672:02A0  1F					pop	ds
9672:02A1  C3					retn
				sub_6		endp

				INT14E			                        ;* No entry point to code
9672:02A2  1E					push	ds
9672:02A3  52					push	dx
9672:02A4  56					push	si
9672:02A5  57					push	di
9672:02A6  53					push	bx
9672:02A7  51					push	cx
9672:02A8  8B F2				mov	si,dx
9672:02AA  D1 E6				shl	si,1			; Shift w/zeros fill
9672:02AC  BA 0040				mov	dx,40h
9672:02AF  8E DA				mov	ds,dx
9672:02B1  8B 94 0000				mov	dx,ds:rs232_port_1[si]	; (0040:0000=3F8h)
9672:02B5  0B D2				or	dx,dx			; Zero ?
9672:02B7  74 19				jz	loc_26			; Jump if zero
9672:02B9  0A E4				or	ah,ah			; Zero ?
9672:02BB  74 1C				jz	loc_27			; Jump if zero
9672:02BD  FE CC				dec	ah
9672:02BF  75 03				jnz	loc_24			; Jump if not zero
9672:02C1  E9 008D				jmp	loc_32			; (0351)
9672:02C4			loc_24:						;  xref 9672:02BF
9672:02C4  FE CC				dec	ah
9672:02C6  75 03				jnz	loc_25			; Jump if not zero
9672:02C8  E9 00C1				jmp	loc_37			; (038C)
9672:02CB			loc_25:						;  xref 9672:02C6
9672:02CB  FE CC				dec	ah
9672:02CD  75 03				jnz	loc_26			; Jump if not zero
9672:02CF  E9 0128				jmp	loc_49			; (03FA)
9672:02D2			loc_26:						;  xref 9672:02B7, 02CD, 036B, 0381
										;            0389, 03A8, 03C3, 040B
9672:02D2 �59					pop	cx
9672:02D3  5B					pop	bx
9672:02D4  5F					pop	di
9672:02D5  5E					pop	si
9672:02D6  5A					pop	dx
9672:02D7  1F					pop	ds
9672:02D8  CF					iret				; Interrupt return
9672:02D9			loc_27:						;  xref 9672:02BB
9672:02D9  50					push	ax
9672:02DA  B4 42				mov	ah,42h			; 'B'
9672:02DC  8A D8				mov	bl,al
9672:02DE  F6 C3 04				test	bl,4
9672:02E1  74 03				jz	loc_28			; Jump if zero
9672:02E3  80 CC C0				or	ah,0C0h
9672:02E6			loc_28:						;  xref 9672:02E1
9672:02E6  80 CC 40				or	ah,40h			; '@'
9672:02E9  D0 C3				rol	bl,1			; Rotate
9672:02EB  B0 30				mov	al,30h			; '0'
9672:02ED  22 C3				and	al,bl
9672:02EF  0A E0				or	ah,al
9672:02F1  D0 C3				rol	bl,1			; Rotate
9672:02F3  B0 0C				mov	al,0Ch
9672:02F5  22 C3				and	al,bl
9672:02F7  0A E0				or	ah,al
9672:02F9  83 C2 01				add	dx,1
9672:02FC  B0 00				mov	al,0
9672:02FE  B9 0003				mov	cx,3

9672:0301			locloop_29:					;  xref 9672:0305
9672:0301  EE					out	dx,al			; port 1, DMA-1 bas&cnt ch 0
9672:0302  E8 0109				call	sub_8			; (040E)
9672:0305  E2 FA				loop	locloop_29		; Loop if cx > 0

9672:0307  B0 40				mov	al,40h			; '@'
9672:0309  EE					out	dx,al			; port 1, DMA-1 bas&cnt ch 0
9672:030A  E8 0101				call	sub_8			; (040E)
9672:030D  8A C4				mov	al,ah
9672:030F  EE					out	dx,al			; port 1, DMA-1 bas&cnt ch 0
9672:0310  58					pop	ax
9672:0311  D0 C0				rol	al,1			; Rotate
9672:0313  D0 C0				rol	al,1			; Rotate
9672:0315  D0 C0				rol	al,1			; Rotate
9672:0317  24 07				and	al,7
9672:0319  52					push	dx
9672:031A  81 FA 0084				cmp	dx,84h
9672:031E  77 05				ja	loc_30			; Jump if above
9672:0320  BA 008C				mov	dx,8Ch
9672:0323  EB 03				jmp	short loc_31		; (0328)
9672:0325			loc_30:						;  xref 9672:031E
9672:0325  BA 008D				mov	dx,8Dh
9672:0328			loc_31:						;  xref 9672:0323
9672:0328  B4 00				mov	ah,0
9672:032A  D1 E0				shl	ax,1			; Shift w/zeros fill
9672:032C �BB 0341				mov	bx,offset data_61	; (9672:0341=8Ch)
9672:032F  03 D8				add	bx,ax
9672:0331  2E: 8B 07				mov	ax,cs:[bx]
9672:0334  EE					out	dx,al			; port 8Dh ??I/O Non-standard
9672:0335  50					push	ax
9672:0336  58					pop	ax
9672:0337  8A C4				mov	al,ah
9672:0339  EE					out	dx,al			; port 8Dh ??I/O Non-standard
9672:033A  5A					pop	dx
9672:033B  83 EA 01				sub	dx,1
9672:033E  E9 00B9				jmp	loc_49			; (03FA)
9672:0341  8C			data_61		db	8Ch			;  xref 9672:032C
9672:0342  05 12 04 09 02 04			db	 05h, 12h, 04h, 09h, 02h, 04h
9672:0348  01 82 00 41 00 21			db	 01h, 82h, 00h, 41h, 00h, 21h
9672:034E  00 10 00				db	 00h, 10h, 00h
9672:0351			loc_32:						;  xref 9672:02C1
9672:0351  50					push	ax
9672:0352  83 C2 01				add	dx,1
9672:0355  B0 37				mov	al,37h			; '7'
9672:0357  EE					out	dx,al			; port 1, DMA-1 bas&cnt ch 0
9672:0358  33 C9				xor	cx,cx			; Zero register
9672:035A  B3 04				mov	bl,4

9672:035C			locloop_33:					;  xref 9672:0361, 0365
9672:035C  EC					in	al,dx			; port 1, DMA-1 bas&cnt ch 0
9672:035D  A8 80				test	al,80h
9672:035F  75 0D				jnz	loc_34			; Jump if not zero
9672:0361  E2 F9				loop	locloop_33		; Loop if cx > 0

9672:0363  FE CB				dec	bl
9672:0365  75 F5				jnz	locloop_33		; Jump if not zero
9672:0367  58					pop	ax
9672:0368  80 CC 80				or	ah,80h
9672:036B  E9 FF64				jmp	loc_26			; (02D2)
9672:036E			loc_34:						;  xref 9672:035F
9672:036E  33 C9				xor	cx,cx			; Zero register
9672:0370  B3 02				mov	bl,2

9672:0372			locloop_35:					;  xref 9672:0377, 037B
9672:0372  EC					in	al,dx			; port 1, DMA-1 bas&cnt ch 0
9672:0373  A8 01				test	al,1
9672:0375  75 0D				jnz	loc_36			; Jump if not zero
9672:0377  E2 F9				loop	locloop_35		; Loop if cx > 0

9672:0379  FE CB				dec	bl
9672:037B  75 F5				jnz	locloop_35		; Jump if not zero
9672:037D  58					pop	ax
9672:037E  80 CC 80				or	ah,80h
9672:0381  E9 FF4E				jmp	loc_26			; (02D2)
9672:0384			loc_36:						;  xref 9672:0375
9672:0384  83 EA 01				sub	dx,1
9672:0387  58					pop	ax
9672:0388  EE					out	dx,al			; port 0, DMA-1 bas&add ch 0
9672:0389  E9 FF46				jmp	loc_26			; (02D2)
9672:038C			loc_37:						;  xref 9672:02C8
9672:038C  80 26 0071 7F			and	byte ptr ds:[71h],7Fh	; (9672:0071=0BFh)
9672:0391  83 C2 01				add	dx,1
9672:0394  B0 37				mov	al,37h			; '7'
9672:0396  EE					out	dx,al			; port 1, DMA-1 bas&cnt ch 0
9672:0397  33 C9				xor	cx,cx			; Zero register
9672:0399  B3 04				mov	bl,4

9672:039B			locloop_38:					;  xref 9672:03A0, 03A4
9672:039B  EC					in	al,dx			; port 1, DMA-1 bas&cnt ch 0
9672:039C  A8 80				test	al,80h
9672:039E  75 0B				jnz	loc_40			; Jump if not zero
9672:03A0  E2 F9				loop	locloop_38		; Loop if cx > 0

9672:03A2  FE CB				dec	bl
9672:03A4  75 F5				jnz	locloop_38		; Jump if not zero
9672:03A6			loc_39:						;  xref 9672:03B7
9672:03A6 �B4 80				mov	ah,80h
9672:03A8  E9 FF27				jmp	loc_26			; (02D2)
9672:03AB			loc_40:						;  xref 9672:039E, 03B5
9672:03AB  EC					in	al,dx			; port 1, DMA-1 bas&cnt ch 0
9672:03AC  A8 02				test	al,2
9672:03AE  75 09				jnz	loc_41			; Jump if not zero
9672:03B0  F6 06 0071 80			test	byte ptr ds:[71h],80h	; (9672:0071=0BFh)
9672:03B5  74 F4				jz	loc_40			; Jump if zero
9672:03B7  EB ED				jmp	short loc_39		; (03A6)
9672:03B9			loc_41:						;  xref 9672:03AE
9672:03B9  E8 000A				call	sub_7			; (03C6)
9672:03BC  80 E4 1E				and	ah,1Eh
9672:03BF  83 EA 01				sub	dx,1
9672:03C2  EC					in	al,dx			; port 0, DMA-1 bas&add ch 0
9672:03C3  E9 FF0C				jmp	loc_26			; (02D2)

				;��������������������������������������������������������������������������
				;                              SUBROUTINE
				;
				;         Called from:   9672:03B9, 03FE
				;��������������������������������������������������������������������������

9672:03C6			sub_7		proc	near
9672:03C6  B4 00				mov	ah,0
9672:03C8  A8 01				test	al,1
9672:03CA  74 03				jz	loc_42			; Jump if zero
9672:03CC  80 CC 20				or	ah,20h			; ' '
9672:03CF			loc_42:						;  xref 9672:03CA
9672:03CF  A8 02				test	al,2
9672:03D1  74 03				jz	loc_43			; Jump if zero
9672:03D3  80 CC 01				or	ah,1
9672:03D6			loc_43:						;  xref 9672:03D1
9672:03D6  A8 04				test	al,4
9672:03D8  74 03				jz	loc_44			; Jump if zero
9672:03DA  80 CC 40				or	ah,40h			; '@'
9672:03DD			loc_44:						;  xref 9672:03D8
9672:03DD  A8 08				test	al,8
9672:03DF  74 03				jz	loc_45			; Jump if zero
9672:03E1  80 CC 04				or	ah,4
9672:03E4			loc_45:						;  xref 9672:03DF
9672:03E4  A8 10				test	al,10h
9672:03E6  74 03				jz	loc_46			; Jump if zero
9672:03E8  80 CC 02				or	ah,2
9672:03EB			loc_46:						;  xref 9672:03E6
9672:03EB  A8 20				test	al,20h			; ' '
9672:03ED  74 03				jz	loc_47			; Jump if zero
9672:03EF  80 CC 08				or	ah,8
9672:03F2			loc_47:						;  xref 9672:03ED
9672:03F2  A8 40				test	al,40h			; '@'
9672:03F4  74 03				jz	loc_ret_48		; Jump if zero
9672:03F6  80 CC 10				or	ah,10h

9672:03F9			loc_ret_48:					;  xref 9672:03F4
9672:03F9  C3					retn
				sub_7		endp

9672:03FA			loc_49:						;  xref 9672:02CF, 033E
9672:03FA  83 C2 01				add	dx,1
9672:03FD  EC					in	al,dx			; port 2, DMA-1 bas&add ch 1
9672:03FE  E8 FFC5				call	sub_7			; (03C6)
9672:0401  24 80				and	al,80h
9672:0403  84 C0				test	al,al
9672:0405  B0 F0				mov	al,0F0h
9672:0407  75 02				jnz	loc_50			; Jump if not zero
9672:0409  B0 00				mov	al,0
9672:040B			loc_50:						;  xref 9672:0407
9672:040B  E9 FEC4				jmp	loc_26			; (02D2)

				;��������������������������������������������������������������������������
				;                              SUBROUTINE
				;
				;         Called from:   9672:0240, 0247, 024E, 0255, 0260, 0267, 0302
				;                             030A
				;��������������������������������������������������������������������������
				; delay
9672:040E			sub_8		proc	near
9672:040E  51					push	cx
9672:040F  B9 0064				mov	cx,64h

9672:0412			locloop_51:					;  xref 9672:0412
9672:0412  E2 FE				loop	locloop_51		; Loop if cx > 0

9672:0414  59					pop	cx
9672:0415  C3					retn
				sub_8		endp


				;��������������������������������������������������������������������������
				;                              SUBROUTINE
				;
				;         Called from:   9672:0142
				;��������������������������������������������������������������������������
				; longer delay
9672:0416			sub_9		proc	near
9672:0416			loc_52:						;  xref 9672:041D
9672:0416  51					push	cx
9672:0417  33 C9				xor	cx,cx			; Zero register

9672:0419			locloop_53:					;  xref 9672:0419
9672:0419  E2 FE				loop	locloop_53		; Loop if cx > 0

9672:041B  59					pop	cx
9672:041C  49					dec	cx
9672:041D  75 F7				jnz	loc_52			; Jump if not zero
9672:041F  C3					retn
				sub_9		endp


				;��������������������������������������������������������������������������
				;                              SUBROUTINE
				;
				;         Called from:   9672:009C
				;��������������������������������������������������������������������������
				; set a few default handlers
9672:0420			sub_10		proc	near
9672:0420  1E					push	ds
9672:0421  33 C0				xor	ax,ax			; Zero register
9672:0423  8E D8				mov	ds,ax
9672:0425  B8 0527				mov	ax,527h		; IRETT
9672:0428  A3 0060				mov	ds:data_21e,ax		; (0000:0060=7370h)
9672:042B  A3 0064				mov	ds:data_23e,ax		; (0000:0064=7FBh)
9672:042E  8C 0E 0062				mov	ds:data_22e,cs		; (0000:0062=0F000h)
9672:0432  8C 0E 0066				mov	ds:data_24e,cs		; (0000:0066=70h)
9672:0436  A3 0050				mov	ds:data_15e,ax		; (0000:0050=0A0E2h)
9672:0439  8C 0E 0052				mov	ds:data_16e,cs		; (0000:0052=0F000h)
9672:043D  A3 006C				mov	ds:data_27e,ax		; (0000:006C=6EEh)
9672:0440  8C 0E 006E				mov	ds:data_28e,cs		; (0000:006E=70h)
9672:0444  A3 0070				mov	ds:data_29e,ax		; (0000:0070=0FF53h)
9672:0447  8C 0E 0072				mov	ds:data_30e,cs		; (0000:0072=0F000h)
9672:044B  B8 017B				mov	ax,17Bh		; equip bits
9672:044E  A3 0044				mov	ds:data_9e,ax		; (0000:0044=6E33h)
9672:0451  8C 0E 0046				mov	ds:data_10e,cs		; (0000:0046=0F000h)
9672:0455  B8 0040				mov	ax,40h
9672:0458  8E D8				mov	ds,ax
9672:045A  B8 446D				mov	ax,446Dh
9672:045D  A3 0010				mov	ds:equip_bits,ax	; (0040:0010=4427h)
9672:0460  1F					pop	ds
9672:0461  C3					retn
				sub_10		endp


				;��������������������������������������������������������������������������
				;                              SUBROUTINE
				;
				;         Called from:   9672:0099
				;��������������������������������������������������������������������������

9672:0462			sub_11		proc	near
9672:0462  1E					push	ds
9672:0463  9C					pushf				; Push flags
9672:0464  FA					cli				; Disable interrupts
9672:0465  33 C0				xor	ax,ax			; Zero register
9672:0467  8E D8				mov	ds,ax
9672:0469  B8 04B6				mov	ax,4B6h		; INT8
9672:046C  A3 0020				mov	ds:data_3e,ax		; (0000:0020=3Ch)
9672:046F  8C 0E 0022				mov	ds:data_4e,cs		; (0000:0022=0DBBh)
9672:0473  B8 04F3				mov	ax,4F3h		; INT1A
9672:0476  A3 0068				mov	ds:data_25e,ax		; (0000:0068=0AC96h)
9672:0479  8C 0E 006A				mov	ds:data_26e,cs		; (0000:006A=0F000h)
9672:047D  B8 0040				mov	ax,40h
9672:0480  8E D8				mov	ds,ax
9672:0482  33 C0				xor	ax,ax			; Zero register
9672:0484  A3 006C				mov	ds:timer_low,ax		; (0040:006C=93C3h)
9672:0487  A3 006E				mov	ds:timer_hi,ax		; (0040:006E=0)
9672:048A  A2 0070				mov	ds:timer_rolled,al	; (0040:0070=0)
9672:048D �BE 04AD				mov	si,offset data_62	; (9672:04AD=36h)
9672:0490  B9 0003				mov	cx,3
9672:0493  BA 0040				mov	dx,40h

9672:0496			locloop_55:					;  xref 9672:04A1
9672:0496  2E: AC				lods	byte ptr cs:[si]	; String [si] to al
9672:0498  E6 43				out	43h,al			; port 43h, 8253 timer control
9672:049A  2E: AC				lods	byte ptr cs:[si]	; String [si] to al
9672:049C  EE					out	dx,al			; port 40h, 8253 timer 0 clock
9672:049D  2E: AC				lods	byte ptr cs:[si]	; String [si] to al
9672:049F  EE					out	dx,al			; port 40h, 8253 timer 0 clock
9672:04A0  42					inc	dx
9672:04A1  E2 F3				loop	locloop_55		; Loop if cx > 0

9672:04A3  BA FFFD				mov	dx,0FFFDh
9672:04A6  EC					in	al,dx			; port 0FFFDh ??I/O Non-standard
9672:04A7  24 FE				and	al,0FEh
9672:04A9  EE					out	dx,al			; port 0FFFDh ??I/O Non-standard
9672:04AA  9D					popf				; Pop flags
9672:04AB  1F					pop	ds
9672:04AC  C3					retn
				sub_11		endp

9672:04AD  36			data_62		db	36h			;  xref 9672:048D
9672:04AE  00 00 76 A9 04 B6			db	 00h, 00h, 76h,0A9h, 04h,0B6h
9672:04B4  A9 04 50 1E B8 40			db	0A9h, 04h

				INT08H		
						push	ax
						push	ds
						mov	ax,0040
						mov	ds,ax
						inc	word ptr [timer_low]
						jnz	loc_56		;04c7
						inc	word ptr [timer_hi]
9672:04C7			loc_56:
9672:04C7  83 3E 006E 18			cmp	word ptr ds:[timer_hi],18h	; (9672:006E=4C8Ch)
9672:04CC  75 19				jne	loc_57			; Jump if not equal
9672:04CE  81 3E 006C 00B0			cmp	word ptr ds:[timer_low],0B0h	; (9672:006C=489h)
9672:04D4  75 11				jne	loc_57			; Jump if not equal
9672:04D6  C7 06 006E 0000			mov	word ptr ds:[timer_hi],0	; (9672:006E=4C8Ch)
9672:04DC  C7 06 006C 0000			mov	word ptr ds:[timer_low],0	; (9672:006C=489h)
9672:04E2  C6 06 0070 01			mov	byte ptr ds:[timer_rolled],1	; (9672:0070=2)
9672:04E7			loc_57:						;  xref 9672:04CC, 04D4
9672:04E7  FE 0E 0040				dec	byte ptr ds:[40h]	; (9672:0040=0F3h)
9672:04EB  75 03				jnz	loc_58			; Jump if not zero
9672:04ED  E8 0441				call	sub_24			; (0931)
9672:04F0			loc_58:						;  xref 9672:04EB
9672:04F0  1F					pop	ds
9672:04F1  58					pop	ax
9672:04F2  CF					iret				; Interrupt return

				INT1AH			                        ;* No entry point to code
9672:04F3  1E					push	ds
9672:04F4  FA					cli				; Disable interrupts
9672:04F5  50					push	ax
9672:04F6  B8 0040				mov	ax,40h
9672:04F9  8E D8				mov	ds,ax
9672:04FB  58					pop	ax
9672:04FC  0A E4				or	ah,ah			; Zero ?
9672:04FE  74 06				jz	loc_60			; Jump if zero
9672:0500  FE CC				dec	ah
9672:0502  74 14				jz	loc_61			; Jump if zero
9672:0504			loc_59:						;  xref 9672:0516, 0525
9672:0504 �1F					pop	ds
9672:0505  CF					iret				; Interrupt return
9672:0506			loc_60:						;  xref 9672:04FE
9672:0506  A0 0070				mov	al,byte ptr ds:[70h]	; (9672:0070=2)
9672:0509  C6 06 0070 00			mov	byte ptr ds:[70h],0	; (9672:0070=2)
9672:050E  8B 0E 006E				mov	cx,word ptr ds:[6Eh]	; (9672:006E=4C8Ch)
9672:0512  8B 16 006C				mov	dx,word ptr ds:[6Ch]	; (9672:006C=489h)
9672:0516  EB EC				jmp	short loc_59		; (0504)
9672:0518			loc_61:						;  xref 9672:0502
9672:0518  89 16 006C				mov	word ptr ds:[6Ch],dx	; (9672:006C=489h)
9672:051C  89 0E 006E				mov	word ptr ds:[6Eh],cx	; (9672:006E=4C8Ch)
9672:0520  C6 06 0070 00			mov	byte ptr ds:[70h],0	; (9672:0070=2)
9672:0525  EB DD				jmp	short loc_59		; (0504)

				IRETT:
9672:0527  CF					iret

				HALTT:
9672:0528			loc_62:						;  xref 9672:004F, 0529
9672:0528 �FA					cli				; Disable interrupts
9672:0529  EB FD				jmp	short loc_62		; (0528)


							                        ;* No entry point to code
9672:052B  9C					pushf				; Push flags
9672:052C  FA					cli				; Disable interrupts
9672:052D  1E					push	ds
9672:052E  B8 0040				mov	ax,40h
9672:0531  8E D8				mov	ds,ax
9672:0533  0A F6				or	dh,dh			; Zero ?
9672:0535  74 0B				jz	loc_65			; Jump if zero
9672:0537			loc_63:						;  xref 9672:0540
9672:0537  B3 06				mov	bl,6
9672:0539  E8 0018				call	sub_12			; (0554)

9672:053C			locloop_64:					;  xref 9672:053C
9672:053C  E2 FE				loop	locloop_64		; Loop if cx > 0

9672:053E  FE CE				dec	dh
9672:0540  75 F5				jnz	loc_63			; Jump if not zero
9672:0542			loc_65:						;  xref 9672:0535, 054B
9672:0542  B3 01				mov	bl,1
9672:0544  E8 000D				call	sub_12			; (0554)

9672:0547			locloop_66:					;  xref 9672:0547
9672:0547  E2 FE				loop	locloop_66		; Loop if cx > 0

9672:0549  FE CA				dec	dl
9672:054B  75 F5				jnz	loc_65			; Jump if not zero

9672:054D			locloop_67:					;  xref 9672:054D
9672:054D  E2 FE				loop	locloop_67		; Loop if cx > 0


9672:054F			locloop_68:					;  xref 9672:054F
9672:054F  E2 FE				loop	locloop_68		; Loop if cx > 0

9672:0551  1F					pop	ds
9672:0552  9D					popf				; Pop flags
9672:0553  C3					retn

				;��������������������������������������������������������������������������
				;                              SUBROUTINE
				;
				;         Called from:   9672:0539, 0544, 1634
				;��������������������������������������������������������������������������

9672:0554			sub_12		proc	near
9672:0554  B0 B6				mov	al,0B6h
9672:0556  E6 43				out	43h,al			; port 43h, 8253 timer control
9672:0558  B8 0533				mov	ax,533h
9672:055B  E6 42				out	42h,al			; port 42h, 8253 timer 2 spkr
9672:055D  8A C4				mov	al,ah
9672:055F  E6 42				out	42h,al			; port 42h, 8253 timer 2 spkr
9672:0561  E4 61				in	al,61h			; port 61h, 8255 port B, read
9672:0563  8A E0				mov	ah,al
9672:0565  0C 03				or	al,3
9672:0567  E6 61				out	61h,al			; port 61h, 8255 B - spkr, etc
9672:0569  2B C9				sub	cx,cx

9672:056B			locloop_69:					;  xref 9672:056B, 056F
9672:056B  E2 FE				loop	locloop_69		; Loop if cx > 0

9672:056D  FE CB				dec	bl
9672:056F  75 FA				jnz	locloop_69		; Jump if not zero
9672:0571  8A C4				mov	al,ah
9672:0573  E6 61				out	61h,al			; port 61h, 8255 B - spkr, etc
9672:0575  C3					retn
				sub_12		endp


				;��������������������������������������������������������������������������
				;                              SUBROUTINE
				;
				;         Called from:   9672:008D, 0096, 011B, 0B1B
				;��������������������������������������������������������������������������

9672:0576			sub_13		proc	near
9672:0576			loc_70:						;  xref 9672:0584
9672:0576 �2E: 8A 04				mov	al,cs:[si]
9672:0579  46					inc	si
9672:057A  84 C0				test	al,al
9672:057C  74 08				jz	loc_ret_71		; Jump if zero
9672:057E  B7 00				mov	bh,0
9672:0580  B4 0E				mov	ah,0Eh
9672:0582  CD 10				int	10h			; Video display   ah=functn 0Eh
										;  write char al, teletype mode
9672:0584  EB F0				jmp	short loc_70		; (0576)

9672:0586			loc_ret_71:					;  xref 9672:057C
9672:0586  C3					retn
				sub_13		endp


				;��������������������������������������������������������������������������
				;                              SUBROUTINE
				;
				;         Called from:   9672:00A5
				;��������������������������������������������������������������������������

9672:0587			sub_14		proc	near
9672:0587  1E					push	ds
9672:0588  33 C0				xor	ax,ax			; Zero register
9672:058A  8E D8				mov	ds,ax
9672:058C  B8 05A2				mov	ax,5A2h
9672:058F  A3 004C				mov	ds:data_13e,ax		; (0000:004C=774h)
9672:0592  8C 0E 004E				mov	ds:data_14e,cs		; (0000:004E=70h)
9672:0596  B8 0A46				mov	ax,0A46h
9672:0599  A3 0078				mov	ds:data_33e,ax		; (0000:0078=522h)
9672:059C  8C 0E 007A				mov	word ptr ds:data_33e+2,cs	; (0000:007A=0)
9672:05A0  1F					pop	ds
9672:05A1  C3					retn
				sub_14		endp

							                        ;* No entry point to code
9672:05A2  FB					sti				; Enable interrupts
9672:05A3  53					push	bx
9672:05A4  51					push	cx
9672:05A5  1E					push	ds
9672:05A6  56					push	si
9672:05A7  57					push	di
9672:05A8  55					push	bp
9672:05A9  52					push	dx
9672:05AA  8B EC				mov	bp,sp
9672:05AC  BE 0040				mov	si,40h
9672:05AF  8E DE				mov	ds,si
9672:05B1  E8 001C				call	sub_15			; (05D0)
9672:05B4  BB 0004				mov	bx,4
9672:05B7  E8 01E4				call	sub_17			; (079E)
9672:05BA  88 26 0040				mov	ds:dsk_motor_tmr,ah	; (0040:0040=0DEh)
9672:05BE  8A 26 0041				mov	ah,ds:dsk_ret_code	; (0040:0041=0)
9672:05C2  80 FC 01				cmp	ah,1
9672:05C5  F5					cmc				; Complement carry
9672:05C6  5A					pop	dx
9672:05C7  5D					pop	bp
9672:05C8  5F					pop	di
9672:05C9  5E					pop	si
9672:05CA  1F					pop	ds
9672:05CB  59					pop	cx
9672:05CC  5B					pop	bx
9672:05CD  CA 0002				retf	2			; Return far

				;��������������������������������������������������������������������������
				;                              SUBROUTINE
				;
				;         Called from:   9672:05B1
				;��������������������������������������������������������������������������

9672:05D0			sub_15		proc	near
9672:05D0  8A F0				mov	dh,al
9672:05D2  80 26 003F 3F			and	byte ptr ds:dsk_motor_stat,3Fh	; (0040:003F=0) '?'
9672:05D7  0A E4				or	ah,ah			; Zero ?
9672:05D9  74 27				jz	loc_74			; Jump if zero
9672:05DB  FE CC				dec	ah
9672:05DD  74 5C				jz	loc_75			; Jump if zero
9672:05DF  C6 06 0041 00			mov	byte ptr ds:dsk_ret_code,0	; (0040:0041=0)
9672:05E4  80 FA 04				cmp	dl,4
9672:05E7  73 13				jae	loc_73			; Jump if above or =
9672:05E9  FE CC				dec	ah
9672:05EB  74 52				jz	loc_76			; Jump if zero
9672:05ED  FE CC				dec	ah
9672:05EF  75 03				jnz	loc_72			; Jump if not zero
9672:05F1  E9 009A				jmp	loc_80			; (068E)
9672:05F4			loc_72:						;  xref 9672:05EF
9672:05F4  FE CC				dec	ah
9672:05F6  74 4E				jz	loc_77			; Jump if zero
9672:05F8  FE CC				dec	ah
9672:05FA  74 51				jz	loc_78			; Jump if zero
9672:05FC			loc_73:						;  xref 9672:05E7
9672:05FC  C6 06 0041 01			mov	byte ptr ds:dsk_ret_code,1	; (0040:0041=0)
9672:0601  C3					retn
9672:0602			loc_74:						;  xref 9672:05D9
9672:0602  E8 03C8				call	sub_28			; (09CD)
9672:0605  E8 0413				call	sub_31			; (0A1B)
9672:0608  B4 03				mov	ah,3
9672:060A  E8 0164				call	sub_16			; (0771)
9672:060D  BB 0001				mov	bx,1
9672:0610  E8 018B				call	sub_17			; (079E)
9672:0613  BB 0003				mov	bx,3
9672:0616  E8 0185				call	sub_17			; (079E)
9672:0619  C6 06 006B 88			mov	byte ptr ds:gen_int_occured,88h	; (0040:006B=0)
9672:061E  C6 06 0041 00			mov	byte ptr ds:dsk_ret_code,0	; (0040:0041=0)
9672:0623  C6 06 003E 00			mov	byte ptr ds:dsk_recal_stat,0	; (0040:003E=1)
9672:0628  80 26 003F F0			and	byte ptr ds:dsk_motor_stat,0F0h	; (0040:003F=0)
9672:062D  BA FF10				mov	dx,0FF10h
9672:0630  A0 006B				mov	al,ds:gen_int_occured	; (0040:006B=0)
9672:0633  EE					out	dx,al			; port 0FF10h ??I/O Non-standard
9672:0634  E8 02FA				call	sub_24			; (0931)
9672:0637  E8 03E1				call	sub_31			; (0A1B)
9672:063A  C3					retn
9672:063B			loc_75:						;  xref 9672:05DD
9672:063B  A0 0041				mov	al,ds:dsk_ret_code	; (0040:0041=0)
9672:063E  C3					retn
9672:063F			loc_76:						;  xref 9672:05EB, 064B
9672:063F �E8 01C2				call	sub_19			; (0804)
9672:0642  B4 66				mov	ah,66h			; 'f'
9672:0644  EB 52				jmp	short loc_81		; (0698)
9672:0646			loc_77:						;  xref 9672:05F6
9672:0646  80 0E 003F 40			or	byte ptr ds:dsk_motor_stat,40h	; (0040:003F=0) '@'
9672:064B  EB F2				jmp	short loc_76		; (063F)
9672:064D			loc_78:						;  xref 9672:05FA
9672:064D  80 0E 003F 80			or	byte ptr ds:dsk_motor_stat,80h	; (0040:003F=0)
9672:0652  E8 01AF				call	sub_19			; (0804)
9672:0655  B4 4D				mov	ah,4Dh			; 'M'
9672:0657  EB 3F				jmp	short loc_81		; (0698)
							                        ;* No entry point to code
9672:0659  50					push	ax
9672:065A  53					push	bx
9672:065B  BB 0008				mov	bx,8
9672:065E  E8 013D				call	sub_17			; (079E)
9672:0661  8A C4				mov	al,ah
9672:0663  32 E4				xor	ah,ah			; Zero register
9672:0665  D1 E0				shl	ax,1			; Shift w/zeros fill
9672:0667  D1 E0				shl	ax,1			; Shift w/zeros fill
9672:0669  A3 0074				mov	ds:hdsk_status_1,ax	; (0040:0074=100h)
9672:066C  5B					pop	bx
9672:066D  58					pop	ax
9672:066E  EB 28				jmp	short loc_81		; (0698)
9672:0670			loc_79:						;  xref 9672:06D4
9672:0670 �BB 0007				mov	bx,7
9672:0673  E8 0128				call	sub_17			; (079E)
9672:0676  BB 0009				mov	bx,9
9672:0679  E8 0122				call	sub_17			; (079E)
9672:067C  BB 000F				mov	bx,0Fh
9672:067F  E8 011C				call	sub_17			; (079E)
9672:0682  BB 0011				mov	bx,11h
9672:0685  5E					pop	si
9672:0686  9C					pushf				; Push flags
9672:0687  FA					cli				; Disable interrupts
9672:0688  E8 0113				call	sub_17			; (079E)
9672:068B  EB 7B				jmp	short loc_85		; (0708)
9672:068D  90					db	90h
9672:068E			loc_80:						;  xref 9672:05F1
9672:068E  80 0E 003F 80			or	byte ptr ds:dsk_motor_stat,80h	; (0040:003F=0)
9672:0693  E8 016E				call	sub_19			; (0804)
9672:0696  B4 45				mov	ah,45h			; 'E'
9672:0698			loc_81:						;  xref 9672:0644, 0657, 066E
9672:0698  73 08				jnc	loc_82			; Jump if carry=0
9672:069A  C6 06 0041 09			mov	byte ptr ds:dsk_ret_code,9	; (0040:0041=0)
9672:069F  B0 00				mov	al,0
9672:06A1  C3					retn
9672:06A2			loc_82:						;  xref 9672:0698
9672:06A2  E8 0376				call	sub_31			; (0A1B)
9672:06A5  50					push	ax
9672:06A6  E8 029E				call	sub_25			; (0947)
9672:06A9  E8 032C				call	sub_29			; (09D8)
9672:06AC  72 03				jc	loc_83			; Jump if carry Set
9672:06AE  E8 00FE				call	sub_18			; (07AF)
9672:06B1			loc_83:						;  xref 9672:06AC
9672:06B1  58					pop	ax
9672:06B2  8A FC				mov	bh,ah
9672:06B4  B6 00				mov	dh,0
9672:06B6  72 68				jc	loc_89			; Jump if carry Set
9672:06B8  BE 0720				mov	si,720h
9672:06BB  56					push	si
9672:06BC  E8 00B2				call	sub_16			; (0771)
9672:06BF  8A 66 01				mov	ah,[bp+1]
9672:06C2  D0 E4				shl	ah,1			; Shift w/zeros fill
9672:06C4  D0 E4				shl	ah,1			; Shift w/zeros fill
9672:06C6  80 E4 04				and	ah,4
9672:06C9  0A 66 00				or	ah,[bp]
9672:06CC  E8 00A2				call	sub_16			; (0771)
9672:06CF  80 FF 4D				cmp	bh,4Dh			; 'M'
9672:06D2  75 02				jne	loc_84			; Jump if not equal
9672:06D4  EB 9A				jmp	short loc_79		; (0670)
9672:06D6			loc_84:						;  xref 9672:06D2
9672:06D6  8A E5				mov	ah,ch
9672:06D8  E8 0096				call	sub_16			; (0771)
9672:06DB  8A 66 01				mov	ah,[bp+1]
9672:06DE  E8 0090				call	sub_16			; (0771)
9672:06E1  8A E1				mov	ah,cl
9672:06E3  E8 008B				call	sub_16			; (0771)
9672:06E6  BB 0007				mov	bx,7
9672:06E9  E8 00B2				call	sub_17			; (079E)
9672:06EC  BB 0009				mov	bx,9
9672:06EF  E8 00AC				call	sub_17			; (079E)
9672:06F2  BB 000B				mov	bx,0Bh
9672:06F5  E8 00A6				call	sub_17			; (079E)
9672:06F8  5E					pop	si
9672:06F9  9C					pushf				; Push flags
9672:06FA  FA					cli				; Disable interrupts
9672:06FB  BB 000D				mov	bx,0Dh
9672:06FE  E8 009D				call	sub_17			; (079E)
9672:0701  F6 06 003F 80			test	byte ptr ds:dsk_motor_stat,80h	; (0040:003F=0)
9672:0706  74 05				jz	loc_86			; Jump if zero
9672:0708			loc_85:						;  xref 9672:068B
9672:0708  E8 0120				call	sub_20			; (082B)
9672:070B  EB 0F				jmp	short loc_88		; (071C)
9672:070D			loc_86:						;  xref 9672:0706
9672:070D  F6 06 003F 40			test	byte ptr ds:dsk_motor_stat,40h	; (0040:003F=0) '@'
9672:0712  75 05				jnz	loc_87			; Jump if not zero
9672:0714  E8 0169				call	sub_21			; (0880)
9672:0717  EB 03				jmp	short loc_88		; (071C)
9672:0719			loc_87:						;  xref 9672:0712
9672:0719  E8 01B3				call	sub_22			; (08CF)
9672:071C			loc_88:						;  xref 9672:070B, 0717
9672:071C  9D					popf				; Pop flags
9672:071D  E8 023D				call	sub_26			; (095D)
9672:0720			loc_89:						;  xref 9672:06B6
9672:0720  72 45				jc	loc_93			; Jump if carry Set
9672:0722  E8 0265				call	sub_27			; (098A)
9672:0725  72 3F				jc	loc_ret_92		; Jump if carry Set
9672:0727  FC					cld				; Clear direction
9672:0728 �BE 0042				mov	si,dsk_status_1		; (0040:0042=4)
9672:072B  AC					lodsb				; String [si] to al
9672:072C  24 C0				and	al,0C0h
9672:072E  74 3B				jz	loc_94			; Jump if zero
9672:0730  3C 40				cmp	al,40h			; '@'
9672:0732  75 29				jne	loc_90			; Jump if not equal
9672:0734  AC					lodsb				; String [si] to al
9672:0735  D0 E0				shl	al,1			; Shift w/zeros fill
9672:0737  B4 04				mov	ah,4
9672:0739  72 24				jc	loc_91			; Jump if carry Set
9672:073B  D0 E0				shl	al,1			; Shift w/zeros fill
9672:073D  D0 E0				shl	al,1			; Shift w/zeros fill
9672:073F  B4 10				mov	ah,10h
9672:0741  72 1C				jc	loc_91			; Jump if carry Set
9672:0743  D0 E0				shl	al,1			; Shift w/zeros fill
9672:0745  B4 08				mov	ah,8
9672:0747  72 16				jc	loc_91			; Jump if carry Set
9672:0749  D0 E0				shl	al,1			; Shift w/zeros fill
9672:074B  D0 E0				shl	al,1			; Shift w/zeros fill
9672:074D  B4 04				mov	ah,4
9672:074F  72 0E				jc	loc_91			; Jump if carry Set
9672:0751  D0 E0				shl	al,1			; Shift w/zeros fill
9672:0753  B4 03				mov	ah,3
9672:0755  72 08				jc	loc_91			; Jump if carry Set
9672:0757  D0 E0				shl	al,1			; Shift w/zeros fill
9672:0759  B4 02				mov	ah,2
9672:075B  72 02				jc	loc_91			; Jump if carry Set
9672:075D			loc_90:						;  xref 9672:0732
9672:075D  B4 20				mov	ah,20h			; ' '
9672:075F			loc_91:						;  xref 9672:0739, 0741, 0747, 074F
										;            0755, 075B
9672:075F  08 26 0041				or	ds:dsk_ret_code,ah	; (0040:0041=0)
9672:0763  E8 02C9				call	sub_32			; (0A2F)
9672:0766			loc_ret_92:					;  xref 9672:0725
9672:0766  C3					retn
9672:0767			loc_93:						;  xref 9672:0720
9672:0767  E8 0220				call	sub_27			; (098A)
9672:076A  C3					retn
9672:076B			loc_94:						;  xref 9672:072E
9672:076B  E8 02C1				call	sub_32			; (0A2F)
9672:076E  32 E4				xor	ah,ah			; Zero register
9672:0770  C3					retn
				sub_15		endp


				;��������������������������������������������������������������������������
				;                              SUBROUTINE
				;
				;         Called from:   9672:060A, 06BC, 06CC, 06D8, 06DE, 06E3, 07C4
				;                             07CA, 07D7, 07DD, 07E2, 0917, 09E2, 09E8
				;                             0A1E
				;��������������������������������������������������������������������������

9672:0771			sub_16		proc	near
9672:0771			loc_95:						;  xref 9672:07AC
9672:0771  52					push	dx
9672:0772  51					push	cx
9672:0773  BA FF12				mov	dx,0FF12h
9672:0776  33 C9				xor	cx,cx			; Zero register

9672:0778			locloop_96:					;  xref 9672:077D
9672:0778  EC					in	al,dx			; port 0FF12h ??I/O Non-standard
9672:0779  A8 40				test	al,40h			; '@'
9672:077B  74 0C				jz	loc_98			; Jump if zero
9672:077D  E2 F9				loop	locloop_96		; Loop if cx > 0

9672:077F			loc_97:						;  xref 9672:0792
9672:077F �80 0E 0041 80			or	byte ptr ds:dsk_ret_code,80h	; (0040:0041=0)
9672:0784  59					pop	cx
9672:0785  5A					pop	dx
9672:0786  58					pop	ax
9672:0787  F9					stc				; Set carry flag
9672:0788  C3					retn
9672:0789			loc_98:						;  xref 9672:077B
9672:0789  33 C9				xor	cx,cx			; Zero register

9672:078B			locloop_99:					;  xref 9672:0790
9672:078B  EC					in	al,dx			; port 0, DMA-1 bas&add ch 0
9672:078C  A8 80				test	al,80h
9672:078E  75 04				jnz	loc_100			; Jump if not zero
9672:0790  E2 F9				loop	locloop_99		; Loop if cx > 0

9672:0792  EB EB				jmp	short loc_97		; (077F)
9672:0794			loc_100:					;  xref 9672:078E
9672:0794  8A C4				mov	al,ah
9672:0796  BA FF13				mov	dx,0FF13h
9672:0799  EE					out	dx,al			; port 0FF13h ??I/O Non-standard
9672:079A  59					pop	cx
9672:079B  5A					pop	dx
9672:079C  F8					clc				; Clear carry flag
9672:079D  C3					retn
				sub_16		endp


				;��������������������������������������������������������������������������
				;                              SUBROUTINE
				;
				;         Called from:   9672:05B7, 0610, 0616, 065E, 0673, 0679, 067F
				;                             0688, 06E9, 06EF, 06F5, 06FE, 07EF, 081A
				;                             0A3C
				;��������������������������������������������������������������������������

9672:079E			sub_17		proc	near
9672:079E  1E					push	ds
9672:079F  2B C0				sub	ax,ax
9672:07A1  8E D8				mov	ds,ax
9672:07A3  C5 36 0078				lds	si,dword ptr ds:data_33e	; (0000:0078=522h) Load seg:offset ptr
9672:07A7  D1 EB				shr	bx,1			; Shift w/zeros fill
9672:07A9  8A 20				mov	ah,[bx+si]
9672:07AB  1F					pop	ds
9672:07AC  72 C3				jc	loc_95			; Jump if carry Set
9672:07AE  C3					retn
				sub_17		endp


				;��������������������������������������������������������������������������
				;                              SUBROUTINE
				;
				;         Called from:   9672:06AE
				;��������������������������������������������������������������������������

9672:07AF			sub_18		proc	near
9672:07AF  50					push	ax
9672:07B0  51					push	cx
9672:07B1  B0 01				mov	al,1
9672:07B3  8A CA				mov	cl,dl
9672:07B5  D2 C0				rol	al,cl			; Rotate
9672:07B7  59					pop	cx
9672:07B8  84 06 003E				test	al,ds:dsk_recal_stat	; (0040:003E=1)
9672:07BC  75 17				jnz	loc_101			; Jump if not zero
9672:07BE  08 06 003E				or	ds:dsk_recal_stat,al	; (0040:003E=1)
9672:07C2  B4 07				mov	ah,7
9672:07C4  E8 FFAA				call	sub_16			; (0771)
9672:07C7  8A 66 00				mov	ah,[bp]
9672:07CA  E8 FFA4				call	sub_16			; (0771)
9672:07CD  E8 0140				call	sub_23			; (0910)
9672:07D0  72 30				jc	loc_105			; Jump if carry Set
9672:07D2  E8 0246				call	sub_31			; (0A1B)
9672:07D5			loc_101:					;  xref 9672:07BC
9672:07D5  B4 0F				mov	ah,0Fh
9672:07D7  E8 FF97				call	sub_16			; (0771)
9672:07DA  8A 66 00				mov	ah,[bp]
9672:07DD  E8 FF91				call	sub_16			; (0771)
9672:07E0  8A E5				mov	ah,ch
9672:07E2  E8 FF8C				call	sub_16			; (0771)
9672:07E5  E8 0128				call	sub_23			; (0910)
9672:07E8  9C					pushf				; Push flags
9672:07E9  E8 022F				call	sub_31			; (0A1B)
9672:07EC  BB 0012				mov	bx,12h
9672:07EF  E8 FFAC				call	sub_17			; (079E)
9672:07F2  51					push	cx
9672:07F3			loc_102:					;  xref 9672:07FE
9672:07F3 �B9 044C				mov	cx,44Ch
9672:07F6  0A E4				or	ah,ah			; Zero ?
9672:07F8  74 06				jz	loc_104			; Jump if zero

9672:07FA			locloop_103:					;  xref 9672:07FA
9672:07FA  E2 FE				loop	locloop_103		; Loop if cx > 0

9672:07FC  FE CC				dec	ah
9672:07FE  EB F3				jmp	short loc_102		; (07F3)
9672:0800			loc_104:					;  xref 9672:07F8
9672:0800  59					pop	cx
9672:0801  9D					popf				; Pop flags
9672:0802			loc_105:					;  xref 9672:07D0
9672:0802  58					pop	ax
9672:0803  C3					retn
				sub_18		endp


				;��������������������������������������������������������������������������
				;                              SUBROUTINE
				;
				;         Called from:   9672:063F, 0652, 0693
				;��������������������������������������������������������������������������

9672:0804			sub_19		proc	near
9672:0804  8C 06 0069				mov	ds:gen_io_seg,es	; (0040:0069=0C000h)
9672:0808  89 1E 0067				mov	ds:gen_io_ptr,bx	; (0040:0067=3)
9672:080C  50					push	ax
9672:080D  53					push	bx
9672:080E  51					push	cx
9672:080F  52					push	dx
9672:0810  8A E6				mov	ah,dh
9672:0812  2A C0				sub	al,al
9672:0814  D1 E8				shr	ax,1			; Shift w/zeros fill
9672:0816  50					push	ax
9672:0817  BB 0006				mov	bx,6
9672:081A  E8 FF81				call	sub_17			; (079E)
9672:081D  8A CC				mov	cl,ah
9672:081F  58					pop	ax
9672:0820  D3 E0				shl	ax,cl			; Shift w/zeros fill
9672:0822  A3 0074				mov	ds:hdsk_status_1,ax	; (0040:0074=100h)
9672:0825  F8					clc				; Clear carry flag
9672:0826  5A					pop	dx
9672:0827  59					pop	cx
9672:0828  5B					pop	bx
9672:0829  58					pop	ax
9672:082A  C3					retn
				sub_19		endp


				;��������������������������������������������������������������������������
				;                              SUBROUTINE
				;
				;         Called from:   9672:0708
				;��������������������������������������������������������������������������

9672:082B			sub_20		proc	near
9672:082B  53					push	bx
9672:082C  52					push	dx
9672:082D  56					push	si
9672:082E  51					push	cx
9672:082F  BA FF10				mov	dx,0FF10h
9672:0832  B0 84				mov	al,84h
9672:0834  0A 06 006B				or	al,ds:gen_int_occured	; (0040:006B=0)
9672:0838  EE					out	dx,al			; port 0FF10h ??I/O Non-standard
9672:0839  FC					cld				; Clear direction
9672:083A  8B 36 0067				mov	si,ds:gen_io_ptr	; (0040:0067=3)
9672:083E  8B 0E 0074				mov	cx,ds:hdsk_status_1	; (0040:0074=100h)
9672:0842  D1 E9				shr	cx,1			; Shift w/zeros fill
9672:0844  1E					push	ds
9672:0845  8E 1E 0069				mov	ds,ds:gen_io_seg	; (0040:0069=0C000h)
9672:0849  BB FF11				mov	bx,0FF11h
9672:084C  B4 02				mov	ah,2

9672:084E			locloop_106:					;  xref 9672:0864
9672:084E  EC					in	al,dx			; port 0FF10h ??I/O Non-standard
9672:084F  84 C4				test	al,ah
9672:0851  74 13				jz	loc_107			; Jump if zero
9672:0853  AC					lodsb				; String [si] to al
9672:0854  87 D3				xchg	dx,bx
9672:0856  EE					out	dx,al			; port 0FF11h ??I/O Non-standard
9672:0857  87 D3				xchg	dx,bx
9672:0859  EC					in	al,dx			; port 0FF10h ??I/O Non-standard
9672:085A  84 C4				test	al,ah
9672:085C  74 08				jz	loc_107			; Jump if zero
9672:085E  AC					lodsb				; String [si] to al
9672:085F  87 D3				xchg	dx,bx
9672:0861  EE					out	dx,al			; port 0FF11h ??I/O Non-standard
9672:0862  87 D3				xchg	dx,bx
9672:0864  E2 E8				loop	locloop_106		; Loop if cx > 0

9672:0866			loc_107:					;  xref 9672:0851, 085C
9672:0866  1F					pop	ds
9672:0867  E3 04				jcxz	loc_108			; Jump if cx=0
9672:0869  89 0E 0078				mov	ds:prn_timeout_1,cx	; (0040:0078=0)
9672:086D			loc_108:					;  xref 9672:0867
9672:086D  89 36 0067				mov	ds:gen_io_ptr,si	; (0040:0067=3)
9672:0871  B0 80				mov	al,80h
9672:0873  0A 06 006B				or	al,ds:gen_int_occured	; (0040:006B=0)
9672:0877  EE					out	dx,al			; port 0FF10h ??I/O Non-standard
9672:0878  E8 0152				call	sub_28			; (09CD)
9672:087B  59					pop	cx
9672:087C  5E					pop	si
9672:087D  5A					pop	dx
9672:087E  5B					pop	bx
9672:087F  C3					retn
				sub_20		endp


				;��������������������������������������������������������������������������
				;                              SUBROUTINE
				;
				;         Called from:   9672:0714
				;��������������������������������������������������������������������������

9672:0880			sub_21		proc	near
9672:0880  53					push	bx
9672:0881  52					push	dx
9672:0882  57					push	di
9672:0883  51					push	cx
9672:0884  BA FF10				mov	dx,0FF10h
9672:0887  B0 84				mov	al,84h
9672:0889  0A 06 006B				or	al,ds:gen_int_occured	; (0040:006B=0)
9672:088D  EE					out	dx,al			; port 0FF10h ??I/O Non-standard
9672:088E  FC					cld				; Clear direction
9672:088F  8B 3E 0067				mov	di,ds:gen_io_ptr	; (0040:0067=3)
9672:0893  8B 0E 0074				mov	cx,ds:hdsk_status_1	; (0040:0074=100h)
9672:0897  D1 E9				shr	cx,1			; Shift w/zeros fill
9672:0899  06					push	es
9672:089A  8E 06 0069				mov	es,ds:gen_io_seg	; (0040:0069=0C000h)
9672:089E  BB FF11				mov	bx,0FF11h
9672:08A1  B4 02				mov	ah,2

9672:08A3			locloop_109:					;  xref 9672:08B9
9672:08A3  EC					in	al,dx			; port 0FF10h ??I/O Non-standard
9672:08A4  84 C4				test	al,ah
9672:08A6  74 13				jz	loc_110			; Jump if zero
9672:08A8  87 D3				xchg	dx,bx
9672:08AA  EC					in	al,dx			; port 0FF11h ??I/O Non-standard
9672:08AB  AA					stosb				; Store al to es:[di]
9672:08AC  87 D3				xchg	dx,bx
9672:08AE  EC					in	al,dx			; port 0FF10h ??I/O Non-standard
9672:08AF  84 C4				test	al,ah
9672:08B1  74 08				jz	loc_110			; Jump if zero
9672:08B3  87 D3				xchg	dx,bx
9672:08B5  EC					in	al,dx			; port 0FF11h ??I/O Non-standard
9672:08B6  AA					stosb				; Store al to es:[di]
9672:08B7  87 D3				xchg	dx,bx
9672:08B9  E2 E8				loop	locloop_109		; Loop if cx > 0

9672:08BB			loc_110:					;  xref 9672:08A6, 08B1
9672:08BB  07					pop	es
9672:08BC  89 3E 0067				mov	ds:gen_io_ptr,di	; (0040:0067=3)
9672:08C0  B0 80				mov	al,80h
9672:08C2  0A 06 006B				or	al,ds:gen_int_occured	; (0040:006B=0)
9672:08C6  EE					out	dx,al			; port 0FF10h ??I/O Non-standard
9672:08C7  E8 0103				call	sub_28			; (09CD)
9672:08CA  59					pop	cx
9672:08CB  5F					pop	di
9672:08CC  5A					pop	dx
9672:08CD  5B					pop	bx
9672:08CE  C3					retn
				sub_21		endp


				;��������������������������������������������������������������������������
				;                              SUBROUTINE
				;
				;         Called from:   9672:0719
				;��������������������������������������������������������������������������

9672:08CF			sub_22		proc	near
9672:08CF  52					push	dx
9672:08D0  51					push	cx
9672:08D1  53					push	bx
9672:08D2  BA FF10				mov	dx,0FF10h
9672:08D5  B0 84				mov	al,84h
9672:08D7  0A 06 006B				or	al,ds:gen_int_occured	; (0040:006B=0)
9672:08DB  EE					out	dx,al			; port 0FF10h ??I/O Non-standard
9672:08DC  FC					cld				; Clear direction
9672:08DD  8B 0E 0074				mov	cx,ds:hdsk_status_1	; (0040:0074=100h)
9672:08E1  D1 E9				shr	cx,1			; Shift w/zeros fill
9672:08E3  BB FF11				mov	bx,0FF11h
9672:08E6  B4 02				mov	ah,2

9672:08E8			locloop_111:					;  xref 9672:0900
9672:08E8  EC					in	al,dx			; port 0FF10h ??I/O Non-standard
9672:08E9  84 C4				test	al,ah
9672:08EB  74 15				jz	loc_112			; Jump if zero
9672:08ED  87 D3				xchg	dx,bx
9672:08EF  EC					in	al,dx			; port 0FF11h ??I/O Non-standard
9672:08F0  50					push	ax
9672:08F1  58					pop	ax
9672:08F2  87 D3				xchg	dx,bx
9672:08F4  EC					in	al,dx			; port 0FF10h ??I/O Non-standard
9672:08F5  84 C4				test	al,ah
9672:08F7  74 09				jz	loc_112			; Jump if zero
9672:08F9  87 D3				xchg	dx,bx
9672:08FB  EC					in	al,dx			; port 0FF11h ??I/O Non-standard
9672:08FC  50					push	ax
9672:08FD  58					pop	ax
9672:08FE  87 D3				xchg	dx,bx
9672:0900  E2 E6				loop	locloop_111		; Loop if cx > 0

9672:0902			loc_112:					;  xref 9672:08EB, 08F7
9672:0902  B0 80				mov	al,80h
9672:0904  0A 06 006B				or	al,ds:gen_int_occured	; (0040:006B=0)
9672:0908  EE					out	dx,al			; port 0FF10h ??I/O Non-standard
9672:0909  E8 00C1				call	sub_28			; (09CD)
9672:090C  5B					pop	bx
9672:090D  59					pop	cx
9672:090E  5A					pop	dx
9672:090F  C3					retn
				sub_22		endp


				;��������������������������������������������������������������������������
				;                              SUBROUTINE
				;
				;         Called from:   9672:07CD, 07E5
				;��������������������������������������������������������������������������

9672:0910			sub_23		proc	near
9672:0910  E8 004A				call	sub_26			; (095D)
9672:0913  72 14				jc	loc_ret_113		; Jump if carry Set
9672:0915  B4 08				mov	ah,8
9672:0917  E8 FE57				call	sub_16			; (0771)
9672:091A  E8 006D				call	sub_27			; (098A)
9672:091D  72 0A				jc	loc_ret_113		; Jump if carry Set
9672:091F  A0 0042				mov	al,ds:dsk_status_1	; (0040:0042=4)
9672:0922  24 60				and	al,60h			; '`'
9672:0924  3C 60				cmp	al,60h			; '`'
9672:0926  74 02				je	loc_114			; Jump if equal
9672:0928  F8					clc				; Clear carry flag

9672:0929			loc_ret_113:					;  xref 9672:0913, 091D
9672:0929  C3					retn
9672:092A			loc_114:					;  xref 9672:0926
9672:092A  80 0E 0041 40			or	byte ptr ds:dsk_ret_code,40h	; (0040:0041=0) '@'
9672:092F  F9					stc				; Set carry flag
9672:0930  C3					retn
				sub_23		endp


				;��������������������������������������������������������������������������
				;                              SUBROUTINE
				;
				;         Called from:   9672:04ED, 0634
				;��������������������������������������������������������������������������

9672:0931			sub_24		proc	near
9672:0931  50					push	ax
9672:0932  52					push	dx
9672:0933  80 26 003F F0			and	byte ptr ds:[3Fh],0F0h	; (9672:003F=8Bh)
9672:0938  A0 006B				mov	al,byte ptr ds:[6Bh]	; (9672:006B=0)
9672:093B  24 FC				and	al,0FCh
9672:093D  A2 006B				mov	byte ptr ds:[6Bh],al	; (9672:006B=0)
9672:0940  BA FF10				mov	dx,0FF10h
9672:0943  EE					out	dx,al			; port 0FF10h ??I/O Non-standard
9672:0944  5A					pop	dx
9672:0945  58					pop	ax
9672:0946  C3					retn
				sub_24		endp


				;��������������������������������������������������������������������������
				;                              SUBROUTINE
				;
				;         Called from:   9672:06A6
				;��������������������������������������������������������������������������

9672:0947			sub_25		proc	near
9672:0947  50					push	ax
9672:0948  52					push	dx
9672:0949  80 0E 003F 0F			or	byte ptr ds:dsk_motor_stat,0Fh	; (0040:003F=0)
9672:094E  A0 006B				mov	al,ds:gen_int_occured	; (0040:006B=0)
9672:0951  0C 03				or	al,3
9672:0953  A2 006B				mov	ds:gen_int_occured,al	; (0040:006B=0)
9672:0956  BA FF10				mov	dx,0FF10h
9672:0959  EE					out	dx,al			; port 0FF10h ??I/O Non-standard
9672:095A  5A					pop	dx
9672:095B  58					pop	ax
9672:095C  C3					retn
				sub_25		endp


				;��������������������������������������������������������������������������
				;                              SUBROUTINE
				;
				;         Called from:   9672:071D, 0910
				;��������������������������������������������������������������������������

9672:095D			sub_26		proc	near
9672:095D  50					push	ax
9672:095E  53					push	bx
9672:095F  51					push	cx
9672:0960  B0 80				mov	al,80h
9672:0962  0A 06 006B				or	al,ds:gen_int_occured	; (0040:006B=0)
9672:0966  BA FF10				mov	dx,0FF10h
9672:0969  EE					out	dx,al			; port 0FF10h ??I/O Non-standard
9672:096A  B3 05				mov	bl,5
9672:096C  33 C9				xor	cx,cx			; Zero register

9672:096E			locloop_115:					;  xref 9672:0973, 0977
9672:096E  EC					in	al,dx			; port 0FF10h ??I/O Non-standard
9672:096F  A8 01				test	al,1
9672:0971  75 0C				jnz	loc_116			; Jump if not zero
9672:0973  E2 F9				loop	locloop_115		; Loop if cx > 0

9672:0975  FE CB				dec	bl
9672:0977  75 F5				jnz	locloop_115		; Jump if not zero
9672:0979  80 0E 0041 80			or	byte ptr ds:dsk_ret_code,80h	; (0040:0041=0)
9672:097E  F9					stc				; Set carry flag
9672:097F			loc_116:					;  xref 9672:0971
9672:097F  9C					pushf				; Push flags
9672:0980  80 26 003E 7F			and	byte ptr ds:dsk_recal_stat,7Fh	; (0040:003E=1)
9672:0985  9D					popf				; Pop flags
9672:0986  59					pop	cx
9672:0987  5B					pop	bx
9672:0988  58					pop	ax
9672:0989  C3					retn
				sub_26		endp


				;��������������������������������������������������������������������������
				;                              SUBROUTINE
				;
				;         Called from:   9672:0722, 0767, 091A
				;��������������������������������������������������������������������������

9672:098A			sub_27		proc	near
9672:098A  FC					cld				; Clear direction
9672:098B �BF 0042				mov	di,dsk_status_1		; (0040:0042=4)
9672:098E  50					push	ax
9672:098F  51					push	cx
9672:0990  52					push	dx
9672:0991  53					push	bx
9672:0992  B3 07				mov	bl,7
9672:0994			loc_117:					;  xref 9672:09C4
9672:0994  33 C9				xor	cx,cx			; Zero register
9672:0996  BA FF12				mov	dx,0FF12h

9672:0999			locloop_118:					;  xref 9672:099E
9672:0999  EC					in	al,dx			; port 0FF12h ??I/O Non-standard
9672:099A  A8 80				test	al,80h
9672:099C  75 08				jnz	loc_120			; Jump if not zero
9672:099E  E2 F9				loop	locloop_118		; Loop if cx > 0

9672:09A0			loc_119:					;  xref 9672:09B0
9672:09A0 �F9					stc				; Set carry flag
9672:09A1  5B					pop	bx
9672:09A2  5A					pop	dx
9672:09A3  59					pop	cx
9672:09A4  58					pop	ax
9672:09A5  C3					retn
9672:09A6			loc_120:					;  xref 9672:099C
9672:09A6  EC					in	al,dx			; port 10h ??I/O Non-standard
9672:09A7  A8 40				test	al,40h			; '@'
9672:09A9  75 07				jnz	loc_122			; Jump if not zero
9672:09AB			loc_121:					;  xref 9672:09C6
9672:09AB �80 0E 0041 20			or	byte ptr ds:dsk_ret_code,20h	; (0040:0041=0) ' '
9672:09B0  EB EE				jmp	short loc_119		; (09A0)
9672:09B2			loc_122:					;  xref 9672:09A9
9672:09B2  42					inc	dx
9672:09B3  EC					in	al,dx			; port 11h ??I/O Non-standard
9672:09B4  88 05				mov	[di],al
9672:09B6  47					inc	di
9672:09B7  B9 0028				mov	cx,28h

9672:09BA			locloop_123:					;  xref 9672:09BA
9672:09BA  E2 FE				loop	locloop_123		; Loop if cx > 0

9672:09BC  4A					dec	dx
9672:09BD  EC					in	al,dx			; port 10h ??I/O Non-standard
9672:09BE  A8 10				test	al,10h
9672:09C0  74 06				jz	loc_124			; Jump if zero
9672:09C2  FE CB				dec	bl
9672:09C4  75 CE				jnz	loc_117			; Jump if not zero
9672:09C6  EB E3				jmp	short loc_121		; (09AB)
9672:09C8			loc_124:					;  xref 9672:09C0
9672:09C8  5B					pop	bx
9672:09C9  5A					pop	dx
9672:09CA  59					pop	cx
9672:09CB  58					pop	ax
9672:09CC  C3					retn
				sub_27		endp


				;��������������������������������������������������������������������������
				;                              SUBROUTINE
				;
				;         Called from:   9672:0602, 0878, 08C7, 0909
				;��������������������������������������������������������������������������
           l1rom.lst       LDP	REV 1.0 10/30/85	Sourcer	v7.00   12-Apr-24  12:34 am   Page 31


9672:09CD			sub_28		proc	near
9672:09CD  50					push	ax
9672:09CE  52					push	dx
9672:09CF  B0 10				mov	al,10h
9672:09D1  BA FF10				mov	dx,0FF10h
9672:09D4  EE					out	dx,al			; port 0FF10h ??I/O Non-standard
9672:09D5  5A					pop	dx
9672:09D6  58					pop	ax
9672:09D7  C3					retn
				sub_28		endp


				;��������������������������������������������������������������������������
				;                              SUBROUTINE
				;
				;         Called from:   9672:06A9
				;��������������������������������������������������������������������������

9672:09D8			sub_29		proc	near
9672:09D8  50					push	ax
9672:09D9  53					push	bx
9672:09DA  51					push	cx
9672:09DB  52					push	dx
9672:09DC  B3 02				mov	bl,2
9672:09DE  33 C9				xor	cx,cx			; Zero register

9672:09E0			locloop_125:					;  xref 9672:09F2, 09F6
9672:09E0  B4 04				mov	ah,4
9672:09E2  E8 FD8C				call	sub_16			; (0771)
9672:09E5  8A 66 00				mov	ah,[bp]
9672:09E8  E8 FD86				call	sub_16			; (0771)
9672:09EB  E8 0018				call	sub_30			; (0A06)
9672:09EE  A8 20				test	al,20h			; ' '
9672:09F0  75 0E				jnz	loc_126			; Jump if not zero
9672:09F2  E2 EC				loop	locloop_125		; Loop if cx > 0

9672:09F4  FE CB				dec	bl
9672:09F6  75 E8				jnz	locloop_125		; Jump if not zero
9672:09F8  80 0E 0041 80			or	byte ptr ds:dsk_ret_code,80h	; (0040:0041=0)
9672:09FD  F9					stc				; Set carry flag
9672:09FE  EB 01				jmp	short loc_127		; (0A01)
9672:0A00			loc_126:					;  xref 9672:09F0
9672:0A00  F8					clc				; Clear carry flag
9672:0A01			loc_127:					;  xref 9672:09FE
9672:0A01  5A					pop	dx
9672:0A02  59					pop	cx
9672:0A03  5B					pop	bx
9672:0A04  58					pop	ax
9672:0A05  C3					retn
				sub_29		endp


				;��������������������������������������������������������������������������
				;                              SUBROUTINE
				;
				;         Called from:   9672:09EB, 0A21, 0A28
           l1rom.lst       LDP	REV 1.0 10/30/85	Sourcer	v7.00   12-Apr-24  12:34 am   Page 32

				;��������������������������������������������������������������������������

9672:0A06			sub_30		proc	near
9672:0A06  52					push	dx
9672:0A07  BA FF12				mov	dx,0FF12h
9672:0A0A			loc_128:					;  xref 9672:0A0D
9672:0A0A  EC					in	al,dx			; port 0FF12h ??I/O Non-standard
9672:0A0B  A8 80				test	al,80h
9672:0A0D  74 FB				jz	loc_128			; Jump if zero
9672:0A0F  A8 40				test	al,40h			; '@'
9672:0A11  74 05				jz	loc_129			; Jump if zero
9672:0A13  42					inc	dx
9672:0A14  EC					in	al,dx			; port 0FF13h ??I/O Non-standard
9672:0A15  5A					pop	dx
9672:0A16  F8					clc				; Clear carry flag
9672:0A17  C3					retn
9672:0A18			loc_129:					;  xref 9672:0A11
9672:0A18  5A					pop	dx
9672:0A19  F9					stc				; Set carry flag
9672:0A1A  C3					retn
				sub_30		endp


				;��������������������������������������������������������������������������
				;                              SUBROUTINE
				;
				;         Called from:   9672:0605, 0637, 06A2, 07D2, 07E9
				;��������������������������������������������������������������������������

9672:0A1B			sub_31		proc	near
9672:0A1B  50					push	ax
9672:0A1C			loc_130:					;  xref 9672:0A2B
9672:0A1C �B4 08				mov	ah,8
9672:0A1E  E8 FD50				call	sub_16			; (0771)
9672:0A21  E8 FFE2				call	sub_30			; (0A06)
9672:0A24  3C 80				cmp	al,80h
9672:0A26  74 05				je	loc_131			; Jump if equal
9672:0A28  E8 FFDB				call	sub_30			; (0A06)
9672:0A2B  EB EF				jmp	short loc_130		; (0A1C)
9672:0A2D			loc_131:					;  xref 9672:0A26
9672:0A2D  58					pop	ax
9672:0A2E  C3					retn
				sub_31		endp


				;��������������������������������������������������������������������������
				;                              SUBROUTINE
				;
				;         Called from:   9672:0763, 076B
				;��������������������������������������������������������������������������

9672:0A2F			sub_32		proc	near
9672:0A2F  A0 0045				mov	al,ds:dsk_status_4	; (0040:0045=0)
9672:0A32  3A C5				cmp	al,ch
9672:0A34  A0 0047				mov	al,ds:dsk_status_6	; (0040:0047=10h)
9672:0A37  74 0A				jz	loc_132			; Jump if zero
9672:0A39  BB 0008				mov	bx,8
           l1rom.lst       LDP	REV 1.0 10/30/85	Sourcer	v7.00   12-Apr-24  12:34 am   Page 33

9672:0A3C  E8 FD5F				call	sub_17			; (079E)
9672:0A3F  8A C4				mov	al,ah
9672:0A41  FE C0				inc	al
9672:0A43			loc_132:					;  xref 9672:0A37
9672:0A43  2A C1				sub	al,cl
9672:0A45  C3					retn
				sub_32		endp

							                        ;* No entry point to code
9672:0A46  CF					iret				; Interrupt return
							                        ;* No entry point to code
9672:0A47  02 80 0802				add	al,byte ptr ds:[802h][bx+si]	; (9672:0802=58h)
9672:0A4B  2A FF				sub	bh,bh
9672:0A4D  50					push	ax
9672:0A4E  F6 19				neg	byte ptr [bx+di]
9672:0A50  04 1E				add	al,1Eh
9672:0A52  9C					pushf				; Push flags
9672:0A53  FA					cli				; Disable interrupts
9672:0A54  33 C0				xor	ax,ax			; Zero register
9672:0A56  8E D8				mov	ds,ax
9672:0A58  B8 0A9A				mov	ax,0A9Ah
9672:0A5B  A3 0058				mov	ds:data_17e,ax		; (0000:0058=0A5A5h)
9672:0A5E  8C 0E 005A				mov	ds:data_18e,cs		; (0000:005A=0F000h)
9672:0A62  B8 0C56				mov	ax,0C56h
9672:0A65  A3 0024				mov	ds:data_5e,ax		; (0000:0024=45h)
9672:0A68  8C 0E 0026				mov	ds:data_6e,cs		; (0000:0026=0DBBh)
9672:0A6C  B8 0040				mov	ax,40h
9672:0A6F  8E D8				mov	ds,ax
9672:0A71  B8 001E				mov	ax,1Eh
9672:0A74  A3 001A				mov	ds:keybd_q_head,ax	; (0040:001A=26h)
9672:0A77  A3 001C				mov	ds:keybd_q_tail,ax	; (0040:001C=26h)
9672:0A7A  33 C0				xor	ax,ax			; Zero register
9672:0A7C  A2 0017				mov	ds:keybd_flags_1,al	; (0040:0017=0)
9672:0A7F  A2 0018				mov	ds:keybd_flags_2,al	; (0040:0018=0)
9672:0A82  A2 0019				mov	ds:keybd_alt_num,al	; (0040:0019=0)
9672:0A85  BA FFFD				mov	dx,0FFFDh
9672:0A88  EC					in	al,dx			; port 0FFFDh ??I/O Non-standard
9672:0A89  24 FD				and	al,0FDh
9672:0A8B  EE					out	dx,al			; port 0FFFDh ??I/O Non-standard
9672:0A8C  B0 98				mov	al,98h
9672:0A8E  E6 63				out	63h,al			; port 63h, 8255 mode reg
9672:0A90  B0 C0				mov	al,0C0h
9672:0A92  E6 61				out	61h,al			; port 61h, 8255 B - spkr, etc
9672:0A94  E8 0049				call	sub_34			; (0AE0)
9672:0A97  9D					popf				; Pop flags
9672:0A98  1F					pop	ds
9672:0A99  C3					retn
							                        ;* No entry point to code
9672:0A9A  1E					push	ds
9672:0A9B  53					push	bx
9672:0A9C  BB 0040				mov	bx,40h
9672:0A9F  8E DB				mov	ds,bx
9672:0AA1  0A E4				or	ah,ah			; Zero ?
9672:0AA3  74 0B				jz	loc_133			; Jump if zero
9672:0AA5  FE CC				dec	ah
9672:0AA7  74 20				jz	loc_134			; Jump if zero
9672:0AA9  FE CC				dec	ah
           l1rom.lst       LDP	REV 1.0 10/30/85	Sourcer	v7.00   12-Apr-24  12:34 am   Page 34

9672:0AAB  74 2D				jz	loc_135			; Jump if zero
9672:0AAD  5B					pop	bx
9672:0AAE  1F					pop	ds
9672:0AAF  CF					iret				; Interrupt return
9672:0AB0			loc_133:					;  xref 9672:0AA3, 0ABB
9672:0AB0  FB					sti				; Enable interrupts
9672:0AB1  90					nop
9672:0AB2  FA					cli				; Disable interrupts
9672:0AB3  8B 1E 001A				mov	bx,word ptr ds:[1Ah]	; (9672:001A=0FCBAh)
9672:0AB7  3B 1E 001C				cmp	bx,word ptr ds:[1Ch]	; (9672:001C=0B0FFh)
9672:0ABB  74 F3				je	loc_133			; Jump if equal
9672:0ABD  8B 07				mov	ax,[bx]
9672:0ABF  E8 0083				call	sub_35			; (0B45)
9672:0AC2  89 1E 001A				mov	word ptr ds:[1Ah],bx	; (9672:001A=0FCBAh)
9672:0AC6  5B					pop	bx
9672:0AC7  1F					pop	ds
9672:0AC8  CF					iret				; Interrupt return
9672:0AC9			loc_134:					;  xref 9672:0AA7
9672:0AC9  FA					cli				; Disable interrupts
9672:0ACA  8B 1E 001A				mov	bx,word ptr ds:[1Ah]	; (9672:001A=0FCBAh)
9672:0ACE  3B 1E 001C				cmp	bx,word ptr ds:[1Ch]	; (9672:001C=0B0FFh)
9672:0AD2  8B 07				mov	ax,[bx]
9672:0AD4  FB					sti				; Enable interrupts
9672:0AD5  5B					pop	bx
9672:0AD6  1F					pop	ds
9672:0AD7  CA 0002				retf	2			; Return far
9672:0ADA			loc_135:					;  xref 9672:0AAB
9672:0ADA  A0 0017				mov	al,byte ptr ds:[17h]	; (9672:0017=0EBh)
9672:0ADD  5B					pop	bx
9672:0ADE  1F					pop	ds
9672:0ADF  CF					iret				; Interrupt return

				;��������������������������������������������������������������������������
				;                              SUBROUTINE
				;
				;         Called from:   9672:0A94
				;��������������������������������������������������������������������������

9672:0AE0			sub_34		proc	near
9672:0AE0  FA					cli				; Disable interrupts
9672:0AE1  E4 61				in	al,61h			; port 61h, 8255 port B, read
9672:0AE3  24 3F				and	al,3Fh			; '?'
9672:0AE5  E6 61				out	61h,al			; port 61h, 8255 B - spkr, etc
										;  al = 0, speaker off
9672:0AE7  B9 A558				mov	cx,0A558h

9672:0AEA			locloop_136:					;  xref 9672:0AEA
9672:0AEA  E2 FE				loop	locloop_136		; Loop if cx > 0

9672:0AEC  E4 61				in	al,61h			; port 61h, 8255 port B, read
9672:0AEE  0C C0				or	al,0C0h
9672:0AF0  E6 61				out	61h,al			; port 61h, 8255 B - spkr, etc
9672:0AF2  24 3F				and	al,3Fh			; '?'
9672:0AF4  0C 40				or	al,40h			; '@'
9672:0AF6  E6 61				out	61h,al			; port 61h, 8255 B - spkr, etc
9672:0AF8  33 C9				xor	cx,cx			; Zero register
9672:0AFA  FA					cli				; Disable interrupts
           l1rom.lst       LDP	REV 1.0 10/30/85	Sourcer	v7.00   12-Apr-24  12:34 am   Page 35


9672:0AFB			locloop_137:					;  xref 9672:0AFF
9672:0AFB  E4 62				in	al,62h			; port 62h, 8255 C - sw2, etc.
9672:0AFD  A8 10				test	al,10h
9672:0AFF  E1 FA				loopz	locloop_137		; Loop if zf=1, cx>0

9672:0B01  E3 15				jcxz	loc_138			; Jump if cx=0
9672:0B03  E4 60				in	al,60h			; port 60h, keybd scan or sw1
9672:0B05  50					push	ax
9672:0B06  E4 61				in	al,61h			; port 61h, 8255 port B, read
9672:0B08  8A E0				mov	ah,al
9672:0B0A  0C 80				or	al,80h
9672:0B0C  E6 61				out	61h,al			; port 61h, 8255 B - spkr, etc
9672:0B0E  8A C4				mov	al,ah
9672:0B10  E6 61				out	61h,al			; port 61h, 8255 B - spkr, etc
9672:0B12  58					pop	ax
9672:0B13  3C AA				cmp	al,0AAh
9672:0B15  75 01				jne	loc_138			; Jump if not equal
9672:0B17  C3					retn
9672:0B18			loc_138:					;  xref 9672:0B01, 0B15
9672:0B18 �BE 0B2C				mov	si,offset data_64	; (9672:0B2C='Keyboard reset f')
9672:0B1B  E8 FA58				call	sub_13			; (0576)
9672:0B1E  E4 61				in	al,61h			; port 61h, 8255 port B, read
9672:0B20  8A E0				mov	ah,al
9672:0B22  0C 80				or	al,80h
9672:0B24  E6 61				out	61h,al			; port 61h, 8255 B - spkr, etc
9672:0B26  8A C4				mov	al,ah
9672:0B28  E6 61				out	61h,al			; port 61h, 8255 B - spkr, etc
9672:0B2A  F9					stc				; Set carry flag
9672:0B2B  C3					retn
				sub_34		endp

9672:0B2C  4B 65 79 62 6F 61	data_64		db	'Keyboard reset failure', 0Ah, 0Dh	;  xref 9672:0B18
9672:0B32  72 64 20 72 65 73
9672:0B38  65 74 20 66 61 69
9672:0B3E  6C 75 72 65 0A 0D
9672:0B44  00					db	0

				;��������������������������������������������������������������������������
				;                              SUBROUTINE
				;
				;         Called from:   9672:0ABF, 0ED6
				;��������������������������������������������������������������������������

9672:0B45			sub_35		proc	near
9672:0B45  83 C3 02				add	bx,2
9672:0B48  81 FB 003E				cmp	bx,3Eh
9672:0B4C  75 03				jne	loc_ret_139		; Jump if not equal
9672:0B4E  BB 001E				mov	bx,1Eh

9672:0B51			loc_ret_139:					;  xref 9672:0B4C
9672:0B51  C3					retn
				sub_35		endp

9672:0B52  52			data_65		db	52h			;  xref 9672:0C85
9672:0B53  3A 45 46 38 1D 2A			db	 3Ah, 45h, 46h, 38h, 1Dh, 2Ah
9672:0B59  36					db	 36h
           l1rom.lst       LDP	REV 1.0 10/30/85	Sourcer	v7.00   12-Apr-24  12:34 am   Page 36

9672:0B5A  80			data_66		db	80h			; Data table (indexed access)
										;  xref 9672:0C98
9672:0B5B  40 20 10 08 04 02			db	 40h, 20h, 10h, 08h, 04h, 02h
9672:0B61  01 1B FF 00 FF FF			db	 01h, 1Bh,0FFh, 00h,0FFh,0FFh
9672:0B67  FF 1E FF FF FF FF			db	0FFh, 1Eh,0FFh,0FFh,0FFh,0FFh
9672:0B6D  1F FF 7F FF 11 17			db	 1Fh,0FFh, 7Fh,0FFh, 11h, 17h
9672:0B73  05 12 14 19 15 09			db	 05h, 12h, 14h, 19h, 15h, 09h
9672:0B79  0F 10 1B 1D 0A FF			db	 0Fh, 10h, 1Bh, 1Dh, 0Ah,0FFh
9672:0B7F  01 13 04 06 07 08			db	 01h, 13h, 04h, 06h, 07h, 08h
9672:0B85  0A 0B 0C FF FF FF			db	 0Ah, 0Bh, 0Ch,0FFh,0FFh,0FFh
9672:0B8B  FF 1C 1A 18 03 16			db	0FFh, 1Ch, 1Ah, 18h, 03h, 16h
9672:0B91  02 0E 0D FF FF FF			db	 02h, 0Eh, 0Dh,0FFh,0FFh,0FFh
9672:0B97  FF FF FF 20 FF			db	0FFh,0FFh,0FFh, 20h,0FFh
9672:0B9C  5E 5F 60 61 62 63			db	'^_`abcdefg'
9672:0BA2  64 65 66 67
9672:0BA6  FF FF 77 FF 84 FF			db	0FFh,0FFh, 77h,0FFh, 84h,0FFh
9672:0BAC  73 FF 74 FF 75 FF			db	 73h,0FFh, 74h,0FFh, 75h,0FFh
9672:0BB2  76 FF FF				db	 76h,0FFh,0FFh
9672:0BB5  1B 31 32 33 34 35	data_67		db	1Bh, '1234567890-=', 8, 9, 'qwert'	;  xref 9672:0E99
9672:0BBB  36 37 38 39 30 2D
9672:0BC1  3D 08 09 71 77 65
9672:0BC7  72 74
9672:0BC9  79 75 69 6F 70 5B			db	'yuiop[]', 0Dh
9672:0BCF  5D 0D
9672:0BD1  FF					db	0FFh
9672:0BD2  61 73 64 66 67 68			db	'asdfghjkl;', 27h, '`'
9672:0BD8  6A 6B 6C 3B 27 60
9672:0BDE  FF					db	0FFh
9672:0BDF  5C 7A 78 63 76 62			db	'\zxcvbnm,./'
9672:0BE5  6E 6D 2C 2E 2F
9672:0BEA  FF 2A FF 20 FF			db	0FFh, 2Ah,0FFh, 20h,0FFh
9672:0BEF  1B 21 40 23 24			db	1Bh, '!@#$'
9672:0BF4  25 5E 26 2A 28 29			db	'%^&*()_+', 8
9672:0BFA  5F 2B 08
9672:0BFD  00					db	0
9672:0BFE  51 57 45 52 54 59			db	'QWERTYUIOP{}', 0Dh
9672:0C04  55 49 4F 50 7B 7D
9672:0C0A  0D
9672:0C0B  FF					db	0FFh
9672:0C0C  41 53 44 46 47 48			db	'ASDFGHJKL:"~'
9672:0C12  4A 4B 4C 3A 22 7E
9672:0C18  FF					db	0FFh
9672:0C19  7C 5A 58 43 56 42			db	'|ZXCVBNM<>?'
9672:0C1F  4E 4D 3C 3E 3F
9672:0C24  FF 00 FF 20 FF 54			db	0FFh, 00h,0FFh, 20h,0FFh, 54h
9672:0C2A  55					db	 55h
9672:0C2B  56 57 58 59 5A 5B			db	'VWXYZ[\]hiklmn'
9672:0C31  5C 5D 68 69 6B 6C
9672:0C37  6D 6E
9672:0C39  6F 70 71 37 38 39			db	'opq789-456+1230.GHI'
9672:0C3F  2D 34 35 36 2B 31
9672:0C45  32 33 30 2E 47 48
9672:0C4B  49
9672:0C4C  FF 4B FF 4D FF 4F			db	0FFh, 4Bh,0FFh, 4Dh,0FFh, 4Fh
9672:0C52  50 51 52 53 FB 50			db	 50h, 51h, 52h, 53h,0FBh, 50h
9672:0C58  53 51 52 56 57 1E			db	 53h, 51h, 52h, 56h, 57h, 1Eh
9672:0C5E  06 FC B8 40 00 8E			db	 06h,0FCh,0B8h, 40h, 00h, 8Eh
           l1rom.lst       LDP	REV 1.0 10/30/85	Sourcer	v7.00   12-Apr-24  12:34 am   Page 37

9672:0C64  D8 E4 60 A2 7B 00			db	0D8h,0E4h, 60h,0A2h, 7Bh, 00h
9672:0C6A  50 E4 61 8A E0 0C			db	 50h,0E4h, 61h, 8Ah,0E0h, 0Ch
9672:0C70  80 E6 61 86 E0 E6			db	 80h,0E6h, 61h, 86h,0E0h,0E6h
9672:0C76  61 58 8A E0 3C FF			db	 61h, 58h, 8Ah,0E0h, 3Ch,0FFh
9672:0C7C  75 03 E9 67 02			db	 75h, 03h,0E9h, 67h, 02h
9672:0C81			loc_140:
9672:0C81  24 7F				and	al,7Fh
9672:0C83  0E					push	cs
9672:0C84  07					pop	es
9672:0C85 �BF 0B52				mov	di,offset data_65	; (9672:0B52=52h)
9672:0C88  B9 0008				mov	cx,8
9672:0C8B  F2/ AE				repne	scasb			; Rep zf=0+cx >0 Scan es:[di] for al
9672:0C8D  8A C4				mov	al,ah
9672:0C8F  74 03				jz	loc_141			; Jump if zero
9672:0C91  E9 0088				jmp	loc_149			; (0D1C)
9672:0C94			loc_141:					;  xref 9672:0C8F
9672:0C94  81 EF 0B53				sub	di,0B53h
9672:0C98  2E: 8A A5 0B5A			mov	ah,cs:data_66[di]	; (9672:0B5A=80h)
9672:0C9D  A8 80				test	al,80h
9672:0C9F  75 54				jnz	loc_147			; Jump if not zero
9672:0CA1  80 FC 10				cmp	ah,10h
9672:0CA4  73 07				jae	loc_142			; Jump if above or =
9672:0CA6  08 26 0017				or	byte ptr ds:[17h],ah	; (9672:0017=0EBh)
9672:0CAA  E9 0083				jmp	loc_150			; (0D30)
9672:0CAD			loc_142:					;  xref 9672:0CA4
9672:0CAD  F6 06 0017 04			test	byte ptr ds:[17h],4	; (9672:0017=0EBh)
9672:0CB2  75 68				jnz	loc_149			; Jump if not zero
9672:0CB4  3C 52				cmp	al,52h			; 'R'
9672:0CB6  75 25				jne	loc_146			; Jump if not equal
9672:0CB8  F6 06 0017 08			test	byte ptr ds:[17h],8	; (9672:0017=0EBh)
9672:0CBD  74 03				jz	loc_143			; Jump if zero
9672:0CBF  EB 5B				jmp	short loc_149		; (0D1C)
9672:0CC1  90					db	90h
9672:0CC2			loc_143:					;  xref 9672:0CBD
9672:0CC2  F6 06 0017 20			test	byte ptr ds:[17h],20h	; (9672:0017=0EBh) ' '
9672:0CC7  75 0D				jnz	loc_145			; Jump if not zero
9672:0CC9  F6 06 0017 03			test	byte ptr ds:[17h],3	; (9672:0017=0EBh)
9672:0CCE  74 0D				jz	loc_146			; Jump if zero
9672:0CD0			loc_144:					;  xref 9672:0CDB
9672:0CD0  B8 5230				mov	ax,5230h
9672:0CD3  E9 01CA				jmp	loc_179			; (0EA0)
9672:0CD6			loc_145:					;  xref 9672:0CC7
9672:0CD6  F6 06 0017 03			test	byte ptr ds:[17h],3	; (9672:0017=0EBh)
9672:0CDB  74 F3				jz	loc_144			; Jump if zero
9672:0CDD			loc_146:					;  xref 9672:0CB6, 0CCE
9672:0CDD  84 26 0018				test	ah,byte ptr ds:[18h]	; (9672:0018=0)
9672:0CE1  75 4D				jnz	loc_150			; Jump if not zero
9672:0CE3  08 26 0018				or	byte ptr ds:[18h],ah	; (9672:0018=0)
9672:0CE7  30 26 0017				xor	byte ptr ds:[17h],ah	; (9672:0017=0EBh)
9672:0CEB  3C 52				cmp	al,52h			; 'R'
9672:0CED  75 41				jne	loc_150			; Jump if not equal
9672:0CEF  B8 5200				mov	ax,5200h
9672:0CF2  E9 01AB				jmp	loc_179			; (0EA0)
9672:0CF5			loc_147:					;  xref 9672:0C9F
9672:0CF5  80 FC 10				cmp	ah,10h
9672:0CF8  73 1A				jae	loc_148			; Jump if above or =
9672:0CFA  F6 D4				not	ah
           l1rom.lst       LDP	REV 1.0 10/30/85	Sourcer	v7.00   12-Apr-24  12:34 am   Page 38

9672:0CFC  20 26 0017				and	byte ptr ds:[17h],ah	; (9672:0017=0EBh)
9672:0D00  3C B8				cmp	al,0B8h
9672:0D02  75 2C				jne	loc_150			; Jump if not equal
9672:0D04  A0 0019				mov	al,byte ptr ds:[19h]	; (9672:0019=0FAh)
9672:0D07  B4 00				mov	ah,0
9672:0D09  88 26 0019				mov	byte ptr ds:[19h],ah	; (9672:0019=0FAh)
9672:0D0D  3C 00				cmp	al,0
9672:0D0F  74 1F				je	loc_150			; Jump if equal
9672:0D11  E9 0195				jmp	loc_180			; (0EA9)
9672:0D14			loc_148:					;  xref 9672:0CF8
9672:0D14  F6 D4				not	ah
9672:0D16  20 26 0018				and	byte ptr ds:[18h],ah	; (9672:0018=0)
9672:0D1A  EB 14				jmp	short loc_150		; (0D30)
9672:0D1C			loc_149:					;  xref 9672:0C91, 0CB2, 0CBF
9672:0D1C  3C 80				cmp	al,80h
9672:0D1E  73 10				jae	loc_150			; Jump if above or =
9672:0D20  F6 06 0018 08			test	byte ptr ds:[18h],8	; (9672:0018=0)
9672:0D25  74 12				jz	loc_151			; Jump if zero
9672:0D27  3C 45				cmp	al,45h			; 'E'
9672:0D29  74 05				je	loc_150			; Jump if equal
9672:0D2B  80 26 0018 F7			and	byte ptr ds:[18h],0F7h	; (9672:0018=0)
9672:0D30			loc_150:					;  xref 9672:0CAA, 0CE1, 0CED, 0D02
										;            0D0F, 0D1A, 0D1E, 0D29
										;            0D9E, 0DC5, 0E14, 0E4A
										;            0EC3, 0EE5, 0EEB
9672:0D30 �07					pop	es
9672:0D31  1F					pop	ds
9672:0D32  5F					pop	di
9672:0D33  5E					pop	si
9672:0D34  5A					pop	dx
9672:0D35  59					pop	cx
9672:0D36  5B					pop	bx
9672:0D37  58					pop	ax
9672:0D38  CF					iret				; Interrupt return
9672:0D39			loc_151:					;  xref 9672:0D25
9672:0D39  F6 06 0017 08			test	byte ptr ds:[17h],8	; (9672:0017=0EBh)
9672:0D3E  75 03				jnz	loc_152			; Jump if not zero
9672:0D40  E9 008F				jmp	loc_160			; (0DD2)
9672:0D43			loc_152:					;  xref 9672:0D3E
9672:0D43  F6 06 0017 04			test	byte ptr ds:[17h],4	; (9672:0017=0EBh)
9672:0D48  74 31				jz	loc_153			; Jump if zero
9672:0D4A  3C 53				cmp	al,53h			; 'S'
9672:0D4C  75 2D				jne	loc_153			; Jump if not equal
9672:0D4E  C7 06 0072 1234			mov	word ptr ds:[72h],1234h	; (9672:0072=4)
9672:0D54  E9 F2C2		;*		jmp	loc_2			;*(0019)
9672:0D54  E9 C2 F2				db	0E9h,0C2h,0F2h
9672:0D57  52 4F 50 51 4B 4C	data_69		db	'ROPQKLMGHI'		;  xref 9672:0D84
9672:0D5D  4D 47 48 49
9672:0D61  10 11 12 13 14 15			db	 10h, 11h, 12h, 13h, 14h, 15h
9672:0D67  16 17 18 19 1E 1F			db	 16h, 17h, 18h, 19h, 1Eh, 1Fh
9672:0D6D  20 21 22 23 24			db	' !"#$'
9672:0D72  25 26 2C 2D 2E 2F			db	'%&,-./012'
9672:0D78  30 31 32
9672:0D7B			loc_153:					;  xref 9672:0D48, 0D4C
9672:0D7B  3C 39				cmp	al,39h			; '9'
9672:0D7D  75 05				jne	loc_154			; Jump if not equal
9672:0D7F  B0 20				mov	al,20h			; ' '
           l1rom.lst       LDP	REV 1.0 10/30/85	Sourcer	v7.00   12-Apr-24  12:34 am   Page 39

9672:0D81  E9 011C				jmp	loc_179			; (0EA0)
9672:0D84			loc_154:					;  xref 9672:0D7D
9672:0D84 �BF 0D57				mov	di,offset data_69	; (9672:0D57='ROPQKLMGHI')
9672:0D87  B9 000A				mov	cx,0Ah
9672:0D8A  F2/ AE				repne	scasb			; Rep zf=0+cx >0 Scan es:[di] for al
9672:0D8C  75 12				jnz	loc_155			; Jump if not zero
9672:0D8E  81 EF 0D58				sub	di,0D58h
9672:0D92  A0 0019				mov	al,byte ptr ds:[19h]	; (9672:0019=0FAh)
9672:0D95  B4 0A				mov	ah,0Ah
9672:0D97  F6 E4				mul	ah			; ax = reg * al
9672:0D99  03 C7				add	ax,di
9672:0D9B  A2 0019				mov	byte ptr ds:[19h],al	; (9672:0019=0FAh)
9672:0D9E  EB 90				jmp	short loc_150		; (0D30)
9672:0DA0			loc_155:					;  xref 9672:0D8C
9672:0DA0  C6 06 0019 00			mov	byte ptr ds:[19h],0	; (9672:0019=0FAh)
9672:0DA5  B9 001A				mov	cx,1Ah
9672:0DA8  F2/ AE				repne	scasb			; Rep zf=0+cx >0 Scan es:[di] for al
9672:0DAA  75 05				jnz	loc_156			; Jump if not zero
9672:0DAC  B0 00				mov	al,0
9672:0DAE  E9 00EF				jmp	loc_179			; (0EA0)
9672:0DB1			loc_156:					;  xref 9672:0DAA
9672:0DB1  3C 02				cmp	al,2
9672:0DB3  72 0C				jb	loc_157			; Jump if below
9672:0DB5  3C 0E				cmp	al,0Eh
9672:0DB7  73 08				jae	loc_157			; Jump if above or =
9672:0DB9  80 C4 76				add	ah,76h			; 'v'
9672:0DBC  B0 00				mov	al,0
9672:0DBE  E9 00DF				jmp	loc_179			; (0EA0)
9672:0DC1			loc_157:					;  xref 9672:0DB3, 0DB7
9672:0DC1  3C 3B				cmp	al,3Bh			; ';'
9672:0DC3  73 03				jae	loc_159			; Jump if above or =
9672:0DC5			loc_158:					;  xref 9672:0DCA
9672:0DC5  E9 FF68				jmp	loc_150			; (0D30)
9672:0DC8			loc_159:					;  xref 9672:0DC3
9672:0DC8  3C 47				cmp	al,47h			; 'G'
9672:0DCA  73 F9				jae	loc_158			; Jump if above or =
9672:0DCC  BB 0C33				mov	bx,0C33h
9672:0DCF  E9 011C				jmp	loc_185			; (0EEE)
9672:0DD2			loc_160:					;  xref 9672:0D40
9672:0DD2  F6 06 0017 04			test	byte ptr ds:[17h],4	; (9672:0017=0EBh)
9672:0DD7  74 58				jz	loc_166			; Jump if zero
9672:0DD9  3C 46				cmp	al,46h			; 'F'
9672:0DDB  75 18				jne	loc_161			; Jump if not equal
9672:0DDD  BB 001E				mov	bx,1Eh
9672:0DE0  89 1E 001A				mov	word ptr ds:[1Ah],bx	; (9672:001A=0FCBAh)
9672:0DE4  89 1E 001C				mov	word ptr ds:[1Ch],bx	; (9672:001C=0B0FFh)
9672:0DE8  C6 06 0071 80			mov	byte ptr ds:[71h],80h	; (9672:0071=0BFh)
9672:0DED  CD 1B				int	1Bh			; Keyboard break (cntrl-break)
9672:0DEF  B8 0000				mov	ax,0
9672:0DF2  E9 00AB				jmp	loc_179			; (0EA0)
9672:0DF5			loc_161:					;  xref 9672:0DDB
9672:0DF5  3C 45				cmp	al,45h			; 'E'
9672:0DF7  75 1E				jne	loc_163			; Jump if not equal
9672:0DF9  80 0E 0018 08			or	byte ptr ds:[18h],8	; (9672:0018=0)
9672:0DFE  80 3E 0049 07			cmp	byte ptr ds:[49h],7	; (9672:0049=0AFh)
9672:0E03  74 08				je	loc_162			; Jump if equal
9672:0E05  BA 03D8				mov	dx,3D8h
           l1rom.lst       LDP	REV 1.0 10/30/85	Sourcer	v7.00   12-Apr-24  12:34 am   Page 40

9672:0E08  A0 0065				mov	al,byte ptr ds:[65h]	; (9672:0065=0ABh)
9672:0E0B  EE					out	dx,al			; port 3D8h, CGA video control
9672:0E0C  FB					sti				; Enable interrupts
9672:0E0D			loc_162:					;  xref 9672:0E03, 0E12
9672:0E0D  F6 06 0018 08			test	byte ptr ds:[18h],8	; (9672:0018=0)
9672:0E12  75 F9				jnz	loc_162			; Jump if not zero
9672:0E14  E9 FF19				jmp	loc_150			; (0D30)
9672:0E17			loc_163:					;  xref 9672:0DF7
9672:0E17  3C 37				cmp	al,37h			; '7'
9672:0E19  75 06				jne	loc_164			; Jump if not equal
9672:0E1B  B8 7200				mov	ax,7200h
9672:0E1E  E9 007F				jmp	loc_179			; (0EA0)
9672:0E21			loc_164:					;  xref 9672:0E19
9672:0E21  BB 0B62				mov	bx,0B62h
9672:0E24  3C 3B				cmp	al,3Bh			; ';'
9672:0E26  73 03				jae	loc_165			; Jump if above or =
9672:0E28  EB 72				jmp	short loc_178		; (0E9C)
9672:0E2A  90					db	90h
9672:0E2B			loc_165:					;  xref 9672:0E26
9672:0E2B  BB 0B9C				mov	bx,0B9Ch
9672:0E2E  E9 00BD				jmp	loc_185			; (0EEE)
9672:0E31			loc_166:					;  xref 9672:0DD7
9672:0E31  3C 47				cmp	al,47h			; 'G'
9672:0E33  73 27				jae	loc_170			; Jump if above or =
9672:0E35  F6 06 0017 03			test	byte ptr ds:[17h],3	; (9672:0017=0EBh)
9672:0E3A  74 55				jz	loc_176			; Jump if zero
9672:0E3C  3C 0F				cmp	al,0Fh
9672:0E3E  75 06				jne	loc_167			; Jump if not equal
9672:0E40  B8 0F00				mov	ax,0F00h
9672:0E43  EB 5B				jmp	short loc_179		; (0EA0)
9672:0E45  90					db	90h
9672:0E46			loc_167:					;  xref 9672:0E3E
9672:0E46  3C 37				cmp	al,37h			; '7'
9672:0E48  75 03				jne	loc_168			; Jump if not equal
9672:0E4A  E9 FEE3				jmp	loc_150			; (0D30)
9672:0E4D			loc_168:					;  xref 9672:0E48
9672:0E4D  3C 3B				cmp	al,3Bh			; ';'
9672:0E4F  72 06				jb	loc_169			; Jump if below
9672:0E51  BB 0C29				mov	bx,0C29h
9672:0E54  E9 0097				jmp	loc_185			; (0EEE)
9672:0E57			loc_169:					;  xref 9672:0E4F
9672:0E57  BB 0BEF				mov	bx,0BEFh
9672:0E5A  EB 40				jmp	short loc_178		; (0E9C)
9672:0E5C			loc_170:					;  xref 9672:0E33
9672:0E5C  F6 06 0017 20			test	byte ptr ds:[17h],20h	; (9672:0017=0EBh) ' '
9672:0E61  75 20				jnz	loc_174			; Jump if not zero
9672:0E63  F6 06 0017 03			test	byte ptr ds:[17h],3	; (9672:0017=0EBh)
9672:0E68  75 20				jnz	loc_175			; Jump if not zero
9672:0E6A			loc_171:					;  xref 9672:0E88
9672:0E6A  3C 4A				cmp	al,4Ah			; 'J'
9672:0E6C  74 0B				je	loc_172			; Jump if equal
9672:0E6E  3C 4E				cmp	al,4Eh			; 'N'
9672:0E70  74 0C				je	loc_173			; Jump if equal
9672:0E72  2C 47				sub	al,47h			; 'G'
9672:0E74  BB 0C49				mov	bx,0C49h
9672:0E77  EB 77				jmp	short loc_186		; (0EF0)
9672:0E79			loc_172:					;  xref 9672:0E6C
           l1rom.lst       LDP	REV 1.0 10/30/85	Sourcer	v7.00   12-Apr-24  12:34 am   Page 41

9672:0E79  B8 4A2D				mov	ax,4A2Dh
9672:0E7C  EB 22				jmp	short loc_179		; (0EA0)
9672:0E7E			loc_173:					;  xref 9672:0E70
9672:0E7E  B8 4E2B				mov	ax,4E2Bh
9672:0E81  EB 1D				jmp	short loc_179		; (0EA0)
9672:0E83			loc_174:					;  xref 9672:0E61
9672:0E83  F6 06 0017 03			test	byte ptr ds:[17h],3	; (9672:0017=0EBh)
9672:0E88  75 E0				jnz	loc_171			; Jump if not zero
9672:0E8A			loc_175:					;  xref 9672:0E68
9672:0E8A  2C 46				sub	al,46h			; 'F'
9672:0E8C  BB 0C3C				mov	bx,0C3Ch
9672:0E8F  EB 0B				jmp	short loc_178		; (0E9C)
9672:0E91			loc_176:					;  xref 9672:0E3A
9672:0E91  3C 3B				cmp	al,3Bh			; ';'
9672:0E93  72 04				jb	loc_177			; Jump if below
9672:0E95  B0 00				mov	al,0
9672:0E97  EB 07				jmp	short loc_179		; (0EA0)
9672:0E99			loc_177:					;  xref 9672:0E93
9672:0E99 �BB 0BB5				mov	bx,offset data_67	; (9672:0BB5=' 1234567890-=  q')
9672:0E9C			loc_178:					;  xref 9672:0E28, 0E5A, 0E8F
9672:0E9C  FE C8				dec	al
9672:0E9E  2E: D7				xlat	cs:[bx]			; al=[al+[bx]] table
9672:0EA0			loc_179:					;  xref 9672:0CD3, 0CF2, 0D81, 0DAE
										;            0DBE, 0DF2, 0E1E, 0E43
										;            0E7C, 0E81, 0E97, 0EF6
9672:0EA0 �3C FF				cmp	al,0FFh
9672:0EA2  74 1F				je	loc_181			; Jump if equal
9672:0EA4  80 FC FF				cmp	ah,0FFh
9672:0EA7  74 1A				je	loc_181			; Jump if equal
9672:0EA9			loc_180:					;  xref 9672:0D11
9672:0EA9  F6 06 0017 40			test	byte ptr ds:[17h],40h	; (9672:0017=0EBh) '@'
9672:0EAE  74 20				jz	loc_183			; Jump if zero
9672:0EB0  F6 06 0017 03			test	byte ptr ds:[17h],3	; (9672:0017=0EBh)
9672:0EB5  74 0F				jz	loc_182			; Jump if zero
9672:0EB7  3C 41				cmp	al,41h			; 'A'
9672:0EB9  72 15				jb	loc_183			; Jump if below
9672:0EBB  3C 5A				cmp	al,5Ah			; 'Z'
9672:0EBD  77 11				ja	loc_183			; Jump if above
9672:0EBF  04 20				add	al,20h			; ' '
9672:0EC1  EB 0D				jmp	short loc_183		; (0ED0) Register jump
9672:0EC3			loc_181:					;  xref 9672:0EA2, 0EA7
9672:0EC3  E9 FE6A				jmp	loc_150			; (0D30)
9672:0EC6			loc_182:					;  xref 9672:0EB5
9672:0EC6  3C 61				cmp	al,61h			; 'a'
9672:0EC8  72 06				jb	loc_183			; Jump if below
9672:0ECA  3C 7A				cmp	al,7Ah			; 'z'
9672:0ECC  77 02				ja	loc_183			; Jump if above
9672:0ECE  2C 20				sub	al,20h			; ' '
9672:0ED0			loc_183:					;  xref 9672:0EAE, 0EB9, 0EBD, 0EC1
										;            0EC8, 0ECC
9672:0ED0  8B 1E 001C				mov	bx,word ptr ds:[1Ch]	; (9672:001C=0B0FFh)
9672:0ED4  8B F3				mov	si,bx
9672:0ED6  E8 FC6C				call	sub_35			; (0B45)
9672:0ED9  3B 1E 001A				cmp	bx,word ptr ds:[1Ah]	; (9672:001A=0FCBAh)
9672:0EDD  74 09				je	loc_184			; Jump if equal
9672:0EDF  89 04				mov	[si],ax
9672:0EE1  89 1E 001C				mov	word ptr ds:[1Ch],bx	; (9672:001C=0B0FFh)
           l1rom.lst       LDP	REV 1.0 10/30/85	Sourcer	v7.00   12-Apr-24  12:34 am   Page 42

9672:0EE5  E9 FE48				jmp	loc_150			; (0D30)
9672:0EE8			loc_184:					;  xref 9672:0EDD
9672:0EE8  E8 000D				call	sub_36			; (0EF8)
9672:0EEB  E9 FE42				jmp	loc_150			; (0D30)
9672:0EEE			loc_185:					;  xref 9672:0DCF, 0E2E, 0E54
9672:0EEE  2C 3B				sub	al,3Bh			; ';'
9672:0EF0			loc_186:					;  xref 9672:0E77
9672:0EF0  2E: D7				xlat	cs:[bx]			; al=[al+[bx]] table
9672:0EF2  8A E0				mov	ah,al
9672:0EF4  B0 00				mov	al,0
9672:0EF6  EB A8				jmp	short loc_179		; (0EA0)

				;��������������������������������������������������������������������������
				;                              SUBROUTINE
				;
				;         Called from:   9672:0EE8
				;��������������������������������������������������������������������������

9672:0EF8			sub_36		proc	near
9672:0EF8  50					push	ax
9672:0EF9  53					push	bx
9672:0EFA  51					push	cx
9672:0EFB  BB 00C0				mov	bx,0C0h
9672:0EFE  E4 61				in	al,61h			; port 61h, 8255 port B, read
9672:0F00  50					push	ax
9672:0F01			loc_187:					;  xref 9672:0F14
9672:0F01  24 FC				and	al,0FCh
9672:0F03  E6 61				out	61h,al			; port 61h, 8255 B - spkr, etc
										;  al = 0, speaker off
9672:0F05  B9 0048				mov	cx,48h

9672:0F08			locloop_188:					;  xref 9672:0F08
9672:0F08  E2 FE				loop	locloop_188		; Loop if cx > 0

9672:0F0A  0C 02				or	al,2
9672:0F0C  E6 61				out	61h,al			; port 61h, 8255 B - spkr, etc
9672:0F0E  B9 0048				mov	cx,48h

9672:0F11			locloop_189:					;  xref 9672:0F11
9672:0F11  E2 FE				loop	locloop_189		; Loop if cx > 0

9672:0F13  4B					dec	bx
9672:0F14  75 EB				jnz	loc_187			; Jump if not zero
9672:0F16  58					pop	ax
9672:0F17  E6 61				out	61h,al			; port 61h, 8255 B - spkr, etc
										;  al = 0, speaker off
9672:0F19  59					pop	cx
9672:0F1A  5B					pop	bx
9672:0F1B  58					pop	ax
9672:0F1C  C3					retn
				sub_36		endp


				;��������������������������������������������������������������������������
				;                              SUBROUTINE
				;
				;         Called from:   9672:0082
				;��������������������������������������������������������������������������
				; grabs INT10 and INT1D vectors
9672:0F1D			sub_37		proc	near
9672:0F1D  1E					push	ds
9672:0F1E  33 C0				xor	ax,ax			; Zero register
9672:0F20  8E D8				mov	ds,ax
9672:0F22  B8 0F5D				mov	ax,int10_trap		;0F5Dh
9672:0F25  A3 0040				mov	ds:data_7e,ax		; (0000:0040=110h) INT10
9672:0F28  8C 0E 0042				mov	ds:data_8e,cs		; (0000:0042=0C000h)
9672:0F2C  B8 0F8C				mov	ax,0F8Ch
9672:0F2F  A3 0074				mov	ds:data_31e,ax		; (0000:0074=6D68h) INT1D init
9672:0F32  8C 0E 0076				mov	word ptr ds:data_31e+2,cs	; (0000:0076=0F000h)
9672:0F36  1F					pop	ds
9672:0F37  B8 0003				mov	ax,3
9672:0F3A  CD 10				int	10h			; Video display   ah=functn 00h
										;  set display mode in al
9672:0F3C  C3					retn
				sub_37		endp


				; INT10 handled functions
				M1	label	word
9672:0F3D  0FE4			data_70		dw	offset INT10_setmode	;  0 set_mode Data table ;  xref 9672:0F87
9672:0F3F  10AA			data_71		dw	offset INT10_settype	;  1 set_cursor_type xref 9672:0F87
9672:0F41  10CB			data_72		dw	offset INT10_setpos	;  2 set_cursor_pos  xref 9672:0F87
9672:0F43  10F5			data_73		dw	offset INT10_readpos	;  3 read_cursor_pos  xref 9672:0F87
9672:0F45  1641			data_74		dw	offset INT10_readpen	;  4 read_light_pen_pos  xref 9672:0F87
9672:0F47  110B			data_75		dw	offset INT10_setpage	;  5 set_active_page  xref 9672:0F87
9672:0F49  1177			data_76		dw	offset INT10_scrollup	;  6 scroll_act_pg_up xref 9672:0F87
9672:0F4B  11FC			data_77		dw	offset INT10_scrolldn	;  7 scroll_act_pg_dn xref 9672:0F87
9672:0F4D  1238			data_78		dw	offset INT10_readattr	;  8 read_attribute  xref 9672:0F87
9672:0F4F  127E			data_79		dw	offset INT10_wrtattr	;  9 write_attribute xref 9672:0F87
9672:0F51  12A0			data_80		dw	offset INT10_wrtchar	; 10 write_char xref 9672:0F87
9672:0F53  112F			data_81		dw	offset INT10_setpal	; 11 set_palette xref 9672:0F87
9672:0F55  12D0			data_82		dw	offset INT10_wrtdot	; 12 write_dot xref 9672:0F87
9672:0F57  12BF			data_83		dw	offset INT10_readdot	; 13 read_dot xref 9672:0F87
9672:0F59  15BA			data_84		dw	offset INT10_wrttty	; 14 write_tty xref 9672:0F87
9672:0F5B  1155			data_85		dw	offset INT10_getstate	; 15 get_vid_state xref 9672:0F87
				M1L	equ	$-M1

				int10_trap:
;9672:0F5D  FB FC 06 1E 52 51			db	0FBh,0FCh, 06h, 1Eh, 52h, 51h
;9672:0F63  53 56 57 50 8A C4			db	 53h, 56h, 57h, 50h, 8Ah,0C4h
;9672:0F69  32 E4 D1 E0 8B F0			db	 32h,0E4h,0D1h,0E0h, 8Bh,0F0h
;9672:0F6F  3D 20 00 72 04 58			db	 3Dh, 20h, 00h, 72h, 04h, 58h
;9672:0F75  E9 2A 01				db	0E9h, 2Ah, 01h
						sti
						cld
						push	es
						push	ds
						push	dx
						push	cx
						push	bx
						push	si
						push	di
						push	ax
						mov	al,ah
						xor	ah,ah
						shl	ax,1
						cmp	ax,0020		; 16 functions 0-15
						jb	INT10_dispatch
						pop	ax
						jmp	INT10_exit		;10a2
9672:0F78			INT10_dispatch:
9672:0F78  B8 0040				mov	ax,40h
9672:0F7B  8E D8				mov	ds,ax
9672:0F7D  B8 B800				mov	ax,0B800h
9672:0F80  8E C0				mov	es,ax
9672:0F82  58					pop	ax
9672:0F83  8A 26 0049				mov	ah,ds:video_mode	; (0040:0049=3)
9672:0F87  2E: FF A4 0F3D			jmp	word ptr cs:data_70[si]	;*(9672:0F3D=0FE4h)  16 entries


				; this is the 6845 init tables for the video modes and is pointed
				; to by the INT 1D vector.
				;Offset  Size    Description     (Table 01263)
				;00h 16 BYTEs   6845 register values for modes 00h and 01h
				;10h 16 BYTEs   6845 register values for modes 02h and 03h
				;20h 16 BYTEs   6845 register values for modes 04h and 05h
				;30h 16 BYTEs   6845 register values for modes 06h and 07h
				;40h    WORD    bytes in video buffer for modes 00h and 01h (0800h)
				;42h    WORD    bytes in video buffer for modes 02h and 03h (1000h)
				;44h    WORD    bytes in video buffer for modes 04h and 05h (4000h)
				;46h    WORD    bytes in video buffer for mode 06h (4000h)
				;48h  8 BYTEs   columns on screen for each of modes 00h through 07h
				;50h  8 BYTEs   CRT controller mode bytes for each of modes 00h through 07h
				6845init:
					; modes 0 and 1
9672:0F8C  38 28 2D 0A 1F 06			db	38h, 28h, 2Dh, 0Ah, 1Fh, 06h, 19h, 1Ch
						db	02h, 07h, 06h, 07h, 00h, 00h, 00h, 00h
					; modes 2 and 3
						db	71h, 50h, 5Ah, 0Ah, 1Fh, 06h, 19h, 1Ch
9672:0FA4  02 07 06 07 00 00			db	02h, 07h, 06h, 07h, 00h, 00h, 00h, 00h
					; modes 4 and 5
						db	38h, 28h, 2Dh, 0Ah, 7Fh, 06h, 64h, 70h
						db	02h, 01h, 06h, 07h, 00h, 00h, 00h, 00h
					; modes 6 and 7
9672:0FBC  61 50 52 0F 19 06			db	61h, 50h, 52h, 0Fh, 19h, 06h, 19h, 19h
						db	02h, 0Dh, 0Bh, 0Ch, 00h, 00h, 00h, 00h

					; video buffer sizes			; xref 9672:107D indexed
9672:0FCC  0800			dwVidBufSize	dw	800h			; video buffer size mode 0 and 1
9672:0FCE  00 10 00 40 00 40			dw	1000h			; video buffer size mode 2 and 3
						dw	4000h			; video buffer size mode 4 and 5
						dw	4000h			; video buffer size mode 6
						
					;# of columns for each mode 0-7		;  xref 9672:106F
9672:0FD4			dbModeCols	db	28h, 28h, 50h, 50h, 28h, 28h, 50h, 50h

					; CRT controller mode bytes for each mode 0-7	;  xref 9672:1066
9672:0FDC  2C			dbCRTCmodeB	db	2Ch, 28h, 2Dh, 29h, 2Ah, 2Eh, 1Eh, 29h


				;����� Indexed Entry Point ������������������������������������������������
9672:0FE4			INT10_setmode:					;  xref 9672:0F3D, 0F87
9672:0FE4  BA 03D4				mov	dx,3D4h
9672:0FE7  B3 00				mov	bl,0
9672:0FE9  3C 07				cmp	al,7
9672:0FEB  72 03				jb	loc_192			; Jump if below
9672:0FED  E9 00B2				jmp	INT10_exit			; (10A2)
9672:0FF0			loc_192:					;  xref 9672:0FEB
9672:0FF0  8A E0				mov	ah,al
9672:0FF2  A2 0049				mov	ds:video_mode,al	; (0040:0049=3)
9672:0FF5  89 16 0063				mov	ds:video_port,dx	; (0040:0063=3D4h)
9672:0FF9  1E					push	ds
9672:0FFA  50					push	ax
9672:0FFB  52					push	dx
9672:0FFC  83 C2 04				add	dx,4
9672:0FFF  8A C3				mov	al,bl
9672:1001  EE					out	dx,al			; port 3D8h, CGA video control
9672:1002  5A					pop	dx
9672:1003  2B C0				sub	ax,ax
9672:1005  8E D8				mov	ds,ax
9672:1007  C5 1E 0074				lds	bx,dword ptr ds:data_31e	; (0000:0074=6D68h) init table INT 1D
9672:100B  58					pop	ax
9672:100C  B9 0010				mov	cx,10h
9672:100F  80 FC 02				cmp	ah,2
9672:1012  72 10				jb	loc_193			; Jump if below
9672:1014  03 D9				add	bx,cx
9672:1016  80 FC 04				cmp	ah,4
9672:1019  72 09				jb	loc_193			; Jump if below
9672:101B  03 D9				add	bx,cx
9672:101D  80 FC 07				cmp	ah,7
9672:1020  72 02				jb	loc_193			; Jump if below
9672:1022  03 D9				add	bx,cx
9672:1024			loc_193:					;  xref 9672:1012, 1019, 1020
9672:1024  50					push	ax
9672:1025  32 E4				xor	ah,ah			; Zero register

9672:1027			locloop_194:					;  xref 9672:1032
9672:1027  8A C4				mov	al,ah
9672:1029  EE					out	dx,al			; port 3D4h, CGA/EGA reg index
										;  al = 0, horiz char total
9672:102A  42					inc	dx
9672:102B  FE C4				inc	ah
9672:102D  8A 07				mov	al,[bx]
9672:102F  EE					out	dx,al			; port 3D5h, CGA/EGA indxd data
9672:1030  43					inc	bx
9672:1031  4A					dec	dx
9672:1032  E2 F3				loop	locloop_194		; Loop if cx > 0

9672:1034  58					pop	ax
9672:1035  1F					pop	ds
9672:1036  33 FF				xor	di,di			; Zero register
9672:1038  89 3E 004E				mov	ds:video_segment,di	; (0040:004E=0)
9672:103C  C6 06 0062 00			mov	byte ptr ds:video_page,0	; (0040:0062=0)
9672:1041  B9 2000				mov	cx,2000h
9672:1044  80 FC 04				cmp	ah,4
9672:1047  72 04				jb	loc_195			; Jump if below
9672:1049  33 C0				xor	ax,ax			; Zero register
9672:104B  EB 03				jmp	short loc_196		; (1050)
9672:104D			loc_195:					;  xref 9672:1047
9672:104D  B8 0720				mov	ax,720h
9672:1050			loc_196:					;  xref 9672:104B
9672:1050  F3/ AB				rep	stosw			; Rep when cx >0 Store ax to es:[di]
9672:1052  C7 06 0060 0067			mov	word ptr ds:vid_curs_mode,67h	; (0040:0060=2000h)
9672:1058  A0 0049				mov	al,ds:video_mode	; (0040:0049=3)
9672:105B  32 E4				xor	ah,ah			; Zero register
9672:105D  8B F0				mov	si,ax
9672:105F  8B 16 0063				mov	dx,ds:video_port	; (0040:0063=3D4h)
9672:1063  83 C2 04				add	dx,4
9672:1066  2E: 8A 84 0FDC			mov	al,cs:dbCRTCmodeB[si]	; (9672:0FDC=2Ch)
9672:106B  EE					out	dx,al			; port 3D8h, CGA video control
9672:106C  A2 0065				mov	ds:video_mode_reg,al	; (0040:0065=0)
9672:106F  2E: 8A 84 0FD4			mov	al,byte ptr cs:dbModeCols[si]	; (9672:0FD4='((PP((PP')
9672:1074  32 E4				xor	ah,ah			; Zero register
9672:1076  A3 004A				mov	ds:video_columns,ax	; (0040:004A=50h)
9672:1079  81 E6 000E				and	si,0Eh
9672:107D  2E: 8B 8C 0FCC			mov	cx,cs:dwVidBufSize[si]	; (9672:0FCC=800h)
9672:1082  89 0E 004C				mov	ds:video_buf_siz,cx	; (0040:004C=1000h)
9672:1086  B9 0008				mov	cx,8
9672:1089 �BF 0050				mov	di,vid_curs_pos0	; (0040:0050=4Fh)
9672:108C  1E					push	ds
9672:108D  07					pop	es
9672:108E  33 C0				xor	ax,ax			; Zero register
9672:1090  F3/ AB				rep	stosw			; Rep when cx >0 Store ax to es:[di]
9672:1092  42					inc	dx
9672:1093  B0 30				mov	al,30h			; '0'
9672:1095  80 3E 0049 06			cmp	byte ptr ds:video_mode,6	; (0040:0049=3)
9672:109A  75 02				jne	loc_197			; Jump if not equal
9672:109C  B0 3F				mov	al,3Fh			; '?'
9672:109E			loc_197:					;  xref 9672:109A
9672:109E  EE					out	dx,al			; port 3D9h, CGA color control
9672:109F  A2 0066				mov	ds:video_color,al	; (0040:0066=0)
9672:10A2			INT10_exit:					;  xref 9672:0FED, 10B3, 10E2, 112C
										;            1148, 11BE, 125F, 129D
										;            12BC, 12CD, 12EC, 1388
										;            13E8, 1468, 14C8, 154C
										;            1615
9672:10A2 �5F					pop	di
9672:10A3  5E					pop	si
9672:10A4  5B					pop	bx
9672:10A5			loc_199:					;  xref 9672:1163
9672:10A5 �59					pop	cx
9672:10A6  5A					pop	dx
9672:10A7  1F					pop	ds
9672:10A8  07					pop	es
9672:10A9  CF					iret				; Interrupt return

				;����� Indexed Entry Point ������������������������������������������������

9672:10AA			INT10_settype:					;  xref 9672:0F3F, 0F87
9672:10AA  B4 0A				mov	ah,0Ah
9672:10AC  89 0E 0060				mov	ds:vid_curs_mode,cx	; (0040:0060=2000h)
9672:10B0  E8 0002				call	sub_38			; (10B5)
9672:10B3  EB ED				jmp	short INT10_exit		; (10A2)

				;��������������������������������������������������������������������������
				;                              SUBROUTINE
				;
				;         Called from:   9672:10B0, 10F1, 111F
				;��������������������������������������������������������������������������

9672:10B5			sub_38		proc	near
9672:10B5  8B 16 0063				mov	dx,ds:video_port	; (0040:0063=3D4h)
9672:10B9  8A C4				mov	al,ah
9672:10BB  EE					out	dx,al			; port 3D4h, CGA/EGA reg index
										;  al = 0Ah, cursor start, mode
9672:10BC  42					inc	dx
9672:10BD  8A C5				mov	al,ch
9672:10BF  EE					out	dx,al			; port 3D5h, CGA/EGA indxd data
9672:10C0  4A					dec	dx
9672:10C1  8A C4				mov	al,ah
9672:10C3  FE C0				inc	al
9672:10C5  EE					out	dx,al			; port 3D4h, CGA/EGA reg index
										;  al = 0Bh, cursor end
9672:10C6  42					inc	dx
9672:10C7  8A C1				mov	al,cl
9672:10C9  EE					out	dx,al			; port 3D5h, CGA/EGA indxd data
9672:10CA  C3					retn
				sub_38		endp


				;����� Indexed Entry Point ������������������������������������������������

9672:10CB			INT10_setpos:					;  xref 9672:0F41, 0F87
9672:10CB  8A CF				mov	cl,bh
9672:10CD  32 ED				xor	ch,ch			; Zero register
9672:10CF  D1 E1				shl	cx,1			; Shift w/zeros fill
9672:10D1  8B F1				mov	si,cx
9672:10D3  89 94 0050				mov	ds:vid_curs_pos0[si],dx	; (0040:0050=184Fh)
9672:10D7  38 3E 0062				cmp	ds:video_page,bh	; (0040:0062=0)
9672:10DB  75 05				jne	loc_202			; Jump if not equal
9672:10DD  8B C2				mov	ax,dx
9672:10DF  E8 0002				call	sub_39			; (10E4)
9672:10E2			loc_202:					;  xref 9672:10DB
9672:10E2  EB BE				jmp	short INT10_exit		; (10A2)

				;��������������������������������������������������������������������������
           l1rom.lst       LDP	REV 1.0 10/30/85	Sourcer	v7.00   12-Apr-24  12:34 am   Page 47

				;                              SUBROUTINE
				;
				;         Called from:   9672:10DF, 1129
				;��������������������������������������������������������������������������

9672:10E4			sub_39		proc	near
9672:10E4  E8 007F				call	sub_40			; (1166)
9672:10E7  8B C8				mov	cx,ax
9672:10E9  03 0E 004E				add	cx,ds:video_segment	; (0040:004E=0)
9672:10ED  D1 F9				sar	cx,1			; Shift w/sign fill
9672:10EF  B4 0E				mov	ah,0Eh
9672:10F1  E8 FFC1				call	sub_38			; (10B5)
9672:10F4  C3					retn
				sub_39		endp


				;����� Indexed Entry Point ������������������������������������������������

9672:10F5			INT10_readpos:					;  xref 9672:0F43, 0F87
9672:10F5  8A DF				mov	bl,bh
9672:10F7  32 FF				xor	bh,bh			; Zero register
9672:10F9  D1 E3				shl	bx,1			; Shift w/zeros fill
9672:10FB  8B 97 0050				mov	dx,ds:vid_curs_pos0[bx]	; (0040:0050=184Fh)
9672:10FF  8B 0E 0060				mov	cx,ds:vid_curs_mode	; (0040:0060=2000h)
9672:1103  5F					pop	di
9672:1104  5E					pop	si
9672:1105  5B					pop	bx
9672:1106  58					pop	ax
9672:1107  58					pop	ax
9672:1108  1F					pop	ds
9672:1109  07					pop	es
9672:110A  CF					iret				; Interrupt return

				;����� Indexed Entry Point ������������������������������������������������

9672:110B			INT10_setpage:					;  xref 9672:0F47, 0F87
9672:110B  A2 0062				mov	ds:video_page,al	; (0040:0062=0)
9672:110E  8B 0E 004C				mov	cx,ds:video_buf_siz	; (0040:004C=1000h)
9672:1112  98					cbw				; Convrt byte to word
9672:1113  50					push	ax
9672:1114  F7 E1				mul	cx			; dx:ax = reg * ax
9672:1116  A3 004E				mov	ds:video_segment,ax	; (0040:004E=0)
9672:1119  8B C8				mov	cx,ax
9672:111B  D1 F9				sar	cx,1			; Shift w/sign fill
9672:111D  B4 0C				mov	ah,0Ch
9672:111F  E8 FF93				call	sub_38			; (10B5)
9672:1122  5B					pop	bx
9672:1123  D1 E3				shl	bx,1			; Shift w/zeros fill
9672:1125  8B 87 0050				mov	ax,ds:vid_curs_pos0[bx]	; (0040:0050=184Fh)
9672:1129  E8 FFB8				call	sub_39			; (10E4)
9672:112C  E9 FF73				jmp	INT10_exit			; (10A2)

				;����� Indexed Entry Point ������������������������������������������������

9672:112F			INT10_setpal:					;  xref 9672:0F53, 0F87
9672:112F  8B 16 0063				mov	dx,ds:video_port	; (0040:0063=3D4h)
9672:1133  83 C2 05				add	dx,5
9672:1136  A0 0066				mov	al,ds:video_color	; (0040:0066=0)
9672:1139  0A FF				or	bh,bh			; Zero ?
9672:113B  75 0E				jnz	loc_207			; Jump if not zero
9672:113D  24 E0				and	al,0E0h
9672:113F  80 E3 1F				and	bl,1Fh
9672:1142  0A C3				or	al,bl
9672:1144			loc_206:					;  xref 9672:114F, 1153
9672:1144 �EE					out	dx,al			; port 3D9h, CGA color control
9672:1145  A2 0066				mov	ds:video_color,al	; (0040:0066=0)
9672:1148  E9 FF57				jmp	INT10_exit			; (10A2)
9672:114B			loc_207:					;  xref 9672:113B
9672:114B  24 DF				and	al,0DFh
9672:114D  D0 EB				shr	bl,1			; Shift w/zeros fill
9672:114F  73 F3				jnc	loc_206			; Jump if carry=0
9672:1151  0C 20				or	al,20h			; ' '
9672:1153  EB EF				jmp	short loc_206		; (1144)

				;����� Indexed Entry Point ������������������������������������������������

9672:1155			INT10_getstate:					;  xref 9672:0F5B, 0F87
9672:1155  8A 26 004A				mov	ah,ds:video_columns	; (0040:004A=50h)
9672:1159  A0 0049				mov	al,ds:video_mode	; (0040:0049=3)
9672:115C  8A 3E 0062				mov	bh,ds:video_page	; (0040:0062=0)
9672:1160  5F					pop	di
9672:1161  5E					pop	si
9672:1162  59					pop	cx
9672:1163  E9 FF3F				jmp	loc_199			; (10A5)

				;��������������������������������������������������������������������������
				;                              SUBROUTINE
				;
				;         Called from:   9672:10E4, 11C5, 1278
				;��������������������������������������������������������������������������

9672:1166			sub_40		proc	near
9672:1166  53					push	bx
9672:1167  8B D8				mov	bx,ax
9672:1169  8A C4				mov	al,ah
9672:116B  F6 26 004A				mul	byte ptr ds:video_columns	; (0040:004A=50h) ax = data * al
9672:116F  32 FF				xor	bh,bh			; Zero register
9672:1171  03 C3				add	ax,bx
9672:1173  D1 E0				shl	ax,1			; Shift w/zeros fill
9672:1175  5B					pop	bx
9672:1176  C3					retn
				sub_40		endp


				;����� Indexed Entry Point ������������������������������������������������

9672:1177			INT10_scrollup:					;  xref 9672:0F49, 0F87
9672:1177  8A D8				mov	bl,al
9672:1179  80 FC 04				cmp	ah,4
9672:117C  72 08				jb	loc_210			; Jump if below
9672:117E  80 FC 07				cmp	ah,7
9672:1181  74 03				je	loc_210			; Jump if equal
9672:1183  E9 01B0				jmp	loc_242			; (1336)
9672:1186			loc_210:					;  xref 9672:117C, 1181
           l1rom.lst       LDP	REV 1.0 10/30/85	Sourcer	v7.00   12-Apr-24  12:34 am   Page 49

9672:1186  53					push	bx
9672:1187  8B C1				mov	ax,cx
9672:1189  E8 0039				call	sub_41			; (11C5)
9672:118C  74 33				jz	loc_216			; Jump if zero
9672:118E  03 F0				add	si,ax
9672:1190  8A E6				mov	ah,dh
9672:1192  2A E3				sub	ah,bl
9672:1194			loc_211:					;  xref 9672:119D
9672:1194  E8 0055				call	sub_42			; (11EC)
9672:1197  03 F5				add	si,bp
9672:1199  03 FD				add	di,bp
9672:119B  FE CC				dec	ah
9672:119D  75 F5				jnz	loc_211			; Jump if not zero
9672:119F			loc_212:					;  xref 9672:11C3
9672:119F �58					pop	ax
9672:11A0  B0 20				mov	al,20h			; ' '
9672:11A2			loc_213:					;  xref 9672:11A9
9672:11A2  E8 0050				call	sub_43			; (11F5)
9672:11A5  03 FD				add	di,bp
9672:11A7  FE CB				dec	bl
9672:11A9  75 F7				jnz	loc_213			; Jump if not zero
9672:11AB			loc_214:					;  xref 9672:1231
9672:11AB �B8 0040				mov	ax,40h
9672:11AE  8E D8				mov	ds,ax
9672:11B0  80 3E 0049 07			cmp	byte ptr ds:video_mode,7	; (0040:0049=3)
9672:11B5  74 07				je	loc_215			; Jump if equal
9672:11B7  A0 0065				mov	al,ds:video_mode_reg	; (0040:0065=0)
9672:11BA  BA 03D8				mov	dx,3D8h
9672:11BD  EE					out	dx,al			; port 3D8h, CGA video control
9672:11BE			loc_215:					;  xref 9672:11B5
9672:11BE  E9 FEE1				jmp	INT10_exit			; (10A2)
9672:11C1			loc_216:					;  xref 9672:118C
9672:11C1  8A DE				mov	bl,dh
9672:11C3  EB DA				jmp	short loc_212		; (119F)

				;��������������������������������������������������������������������������
				;                              SUBROUTINE
				;
				;         Called from:   9672:1189, 120F
				;��������������������������������������������������������������������������

9672:11C5			sub_41		proc	near
9672:11C5  E8 FF9E				call	sub_40			; (1166)
9672:11C8  03 06 004E				add	ax,ds:video_segment	; (0040:004E=0)
9672:11CC  8B F8				mov	di,ax
9672:11CE  8B F0				mov	si,ax
9672:11D0  2B D1				sub	dx,cx
9672:11D2  FE C6				inc	dh
9672:11D4  FE C2				inc	dl
9672:11D6  32 ED				xor	ch,ch			; Zero register
9672:11D8  8B 2E 004A				mov	bp,ds:video_columns	; (0040:004A=50h)
9672:11DC  03 ED				add	bp,bp
9672:11DE  8A C3				mov	al,bl
9672:11E0  F6 26 004A				mul	byte ptr ds:video_columns	; (0040:004A=50h) ax = data * al
9672:11E4  03 C0				add	ax,ax
9672:11E6  06					push	es
9672:11E7  1F					pop	ds
           l1rom.lst       LDP	REV 1.0 10/30/85	Sourcer	v7.00   12-Apr-24  12:34 am   Page 50

9672:11E8  80 FB 00				cmp	bl,0
9672:11EB  C3					retn
				sub_41		endp


				;��������������������������������������������������������������������������
				;                              SUBROUTINE
				;
				;         Called from:   9672:1194, 121A
				;��������������������������������������������������������������������������

9672:11EC			sub_42		proc	near
9672:11EC  8A CA				mov	cl,dl
9672:11EE  56					push	si
9672:11EF  57					push	di
9672:11F0  F3/ A5				rep	movsw			; Rep when cx >0 Mov [si] to es:[di]
9672:11F2  5F					pop	di
9672:11F3  5E					pop	si
9672:11F4  C3					retn
				sub_42		endp


				;��������������������������������������������������������������������������
				;                              SUBROUTINE
				;
				;         Called from:   9672:11A2, 1228
				;��������������������������������������������������������������������������

9672:11F5			sub_43		proc	near
9672:11F5  8A CA				mov	cl,dl
9672:11F7  57					push	di
9672:11F8  F3/ AB				rep	stosw			; Rep when cx >0 Store ax to es:[di]
9672:11FA  5F					pop	di
9672:11FB  C3					retn
				sub_43		endp


				;����� Indexed Entry Point ������������������������������������������������

9672:11FC			INT10_scrolldn:					;  xref 9672:0F4B, 0F87
9672:11FC  FD					std				; Set direction flag
9672:11FD  8A D8				mov	bl,al
9672:11FF  80 FC 04				cmp	ah,4
9672:1202  72 08				jb	loc_218			; Jump if below
9672:1204  80 FC 07				cmp	ah,7
9672:1207  74 03				je	loc_218			; Jump if equal
9672:1209  E9 0183				jmp	loc_248			; (138F)
9672:120C			loc_218:					;  xref 9672:1202, 1207
9672:120C  53					push	bx
9672:120D  8B C2				mov	ax,dx
9672:120F  E8 FFB3				call	sub_41			; (11C5)
9672:1212  74 20				jz	loc_222			; Jump if zero
9672:1214  2B F0				sub	si,ax
9672:1216  8A E6				mov	ah,dh
9672:1218  2A E3				sub	ah,bl
9672:121A			loc_219:					;  xref 9672:1223
9672:121A  E8 FFCF				call	sub_42			; (11EC)
           l1rom.lst       LDP	REV 1.0 10/30/85	Sourcer	v7.00   12-Apr-24  12:34 am   Page 51

9672:121D  2B F5				sub	si,bp
9672:121F  2B FD				sub	di,bp
9672:1221  FE CC				dec	ah
9672:1223  75 F5				jnz	loc_219			; Jump if not zero
9672:1225			loc_220:					;  xref 9672:1236
9672:1225 �58					pop	ax
9672:1226  B0 20				mov	al,20h			; ' '
9672:1228			loc_221:					;  xref 9672:122F
9672:1228  E8 FFCA				call	sub_43			; (11F5)
9672:122B  2B FD				sub	di,bp
9672:122D  FE CB				dec	bl
9672:122F  75 F7				jnz	loc_221			; Jump if not zero
9672:1231  E9 FF77				jmp	loc_214			; (11AB)
9672:1234			loc_222:					;  xref 9672:1212
9672:1234  8A DE				mov	bl,dh
9672:1236  EB ED				jmp	short loc_220		; (1225)

				;����� Indexed Entry Point ������������������������������������������������

9672:1238			INT10_readattr:					;  xref 9672:0F4D, 0F87
9672:1238  80 FC 04				cmp	ah,4
9672:123B  72 08				jb	loc_224			; Jump if below
9672:123D  80 FC 07				cmp	ah,7
9672:1240  74 03				je	loc_224			; Jump if equal
9672:1242  E9 0286				jmp	loc_266			; (14CB)
9672:1245			loc_224:					;  xref 9672:123B, 1240
9672:1245  E8 001A				call	sub_44			; (1262)
9672:1248  8B F3				mov	si,bx
9672:124A  8B 16 0063				mov	dx,ds:video_port	; (0040:0063=3D4h)
9672:124E  83 C2 06				add	dx,6
9672:1251  06					push	es
9672:1252  1F					pop	ds
9672:1253			loc_225:					;  xref 9672:1256
9672:1253  EC					in	al,dx			; port 3DAh, CGA/EGA vid status
9672:1254  A8 01				test	al,1
9672:1256  75 FB				jnz	loc_225			; Jump if not zero
9672:1258  FA					cli				; Disable interrupts
9672:1259			loc_226:					;  xref 9672:125C
9672:1259  EC					in	al,dx			; port 3DAh, CGA/EGA vid status
9672:125A  A8 01				test	al,1
9672:125C  74 FB				jz	loc_226			; Jump if zero
9672:125E  AD					lodsw				; String [si] to ax
9672:125F  E9 FE40				jmp	INT10_exit			; (10A2)

				;��������������������������������������������������������������������������
				;                              SUBROUTINE
				;
				;         Called from:   9672:1245, 128F, 12AF
				;��������������������������������������������������������������������������

9672:1262			sub_44		proc	near
9672:1262  8A CF				mov	cl,bh
9672:1264  32 ED				xor	ch,ch			; Zero register
9672:1266  8B F1				mov	si,cx
9672:1268  D1 E6				shl	si,1			; Shift w/zeros fill
9672:126A  8B 84 0050				mov	ax,ds:vid_curs_pos0[si]	; (0040:0050=184Fh)
9672:126E  33 DB				xor	bx,bx			; Zero register
           l1rom.lst       LDP	REV 1.0 10/30/85	Sourcer	v7.00   12-Apr-24  12:34 am   Page 52

9672:1270  E3 06				jcxz	loc_228			; Jump if cx=0

9672:1272			locloop_227:					;  xref 9672:1276
9672:1272  03 1E 004C				add	bx,ds:video_buf_siz	; (0040:004C=1000h)
9672:1276  E2 FA				loop	locloop_227		; Loop if cx > 0

9672:1278			loc_228:					;  xref 9672:1270
9672:1278  E8 FEEB				call	sub_40			; (1166)
9672:127B  03 D8				add	bx,ax
9672:127D  C3					retn
				sub_44		endp


				;����� Indexed Entry Point ������������������������������������������������

9672:127E			INT10_wrtattr:					;  xref 9672:0F4F, 0F87
9672:127E  80 FC 04				cmp	ah,4
9672:1281  72 08				jb	loc_230			; Jump if below
9672:1283  80 FC 07				cmp	ah,7
9672:1286  74 03				je	loc_230			; Jump if equal
9672:1288  E9 018E				jmp	loc_254			; (1419)
9672:128B			loc_230:					;  xref 9672:1281, 1286
9672:128B  8A E3				mov	ah,bl
9672:128D  50					push	ax
9672:128E  51					push	cx
9672:128F  E8 FFD0				call	sub_44			; (1262)
9672:1292  8B FB				mov	di,bx
9672:1294  59					pop	cx
9672:1295  5B					pop	bx

9672:1296			locloop_231:					;  xref 9672:129B
9672:1296  FA					cli				; Disable interrupts
9672:1297  8B C3				mov	ax,bx
9672:1299  AB					stosw				; Store ax to es:[di]
9672:129A  FB					sti				; Enable interrupts
9672:129B  E2 F9				loop	locloop_231		; Loop if cx > 0

9672:129D  E9 FE02				jmp	INT10_exit			; (10A2)

				;����� Indexed Entry Point ������������������������������������������������

9672:12A0			INT10_wrtchar:					;  xref 9672:0F51, 0F87
9672:12A0  80 FC 04				cmp	ah,4
9672:12A3  72 08				jb	loc_233			; Jump if below
9672:12A5  80 FC 07				cmp	ah,7
9672:12A8  74 03				je	loc_233			; Jump if equal
9672:12AA  E9 016C				jmp	loc_254			; (1419)
9672:12AD			loc_233:					;  xref 9672:12A3, 12A8
9672:12AD  50					push	ax
9672:12AE  51					push	cx
9672:12AF  E8 FFB0				call	sub_44			; (1262)
9672:12B2  8B FB				mov	di,bx
9672:12B4  59					pop	cx
9672:12B5  5B					pop	bx

9672:12B6			locloop_234:					;  xref 9672:12BA
9672:12B6  8A C3				mov	al,bl
           l1rom.lst       LDP	REV 1.0 10/30/85	Sourcer	v7.00   12-Apr-24  12:34 am   Page 53

9672:12B8  AA					stosb				; Store al to es:[di]
9672:12B9  47					inc	di
9672:12BA  E2 FA				loop	locloop_234		; Loop if cx > 0

9672:12BC  E9 FDE3				jmp	INT10_exit			; (10A2)

				;����� Indexed Entry Point ������������������������������������������������

9672:12BF			INT10_readdot:					;  xref 9672:0F57, 0F87
9672:12BF  E8 0031				call	sub_45			; (12F3)
9672:12C2  26: 8A 04				mov	al,es:[si]
9672:12C5  22 C4				and	al,ah
9672:12C7  D2 E0				shl	al,cl			; Shift w/zeros fill
9672:12C9  8A CE				mov	cl,dh
9672:12CB  D2 C0				rol	al,cl			; Rotate
9672:12CD  E9 FDD2				jmp	INT10_exit			; (10A2)

				;����� Indexed Entry Point ������������������������������������������������

9672:12D0			INT10_wrtdot:					;  xref 9672:0F55, 0F87
9672:12D0  50					push	ax
9672:12D1  50					push	ax
9672:12D2  E8 001E				call	sub_45			; (12F3)
9672:12D5  D2 E8				shr	al,cl			; Shift w/zeros fill
9672:12D7  22 C4				and	al,ah
9672:12D9  26: 8A 0C				mov	cl,es:[si]
9672:12DC  5B					pop	bx
9672:12DD  F6 C3 80				test	bl,80h
9672:12E0  75 0D				jnz	loc_238			; Jump if not zero
9672:12E2  F6 D4				not	ah
9672:12E4  22 CC				and	cl,ah
9672:12E6  0A C1				or	al,cl
9672:12E8			loc_237:					;  xref 9672:12F1
9672:12E8 �26: 88 04				mov	es:[si],al
9672:12EB  58					pop	ax
9672:12EC  E9 FDB3				jmp	INT10_exit			; (10A2)
9672:12EF			loc_238:					;  xref 9672:12E0
9672:12EF  32 C1				xor	al,cl
9672:12F1  EB F5				jmp	short loc_237		; (12E8)

				;��������������������������������������������������������������������������
				;                              SUBROUTINE
				;
				;         Called from:   9672:12BF, 12D2
				;��������������������������������������������������������������������������

9672:12F3			sub_45		proc	near
9672:12F3  53					push	bx
9672:12F4  50					push	ax
9672:12F5  B0 28				mov	al,28h			; '('
9672:12F7  52					push	dx
9672:12F8  80 E2 FE				and	dl,0FEh
9672:12FB  F6 E2				mul	dl			; ax = reg * al
9672:12FD  5A					pop	dx
9672:12FE  F6 C2 01				test	dl,1
9672:1301  74 03				jz	loc_239			; Jump if zero
9672:1303  05 2000				add	ax,2000h
           l1rom.lst       LDP	REV 1.0 10/30/85	Sourcer	v7.00   12-Apr-24  12:34 am   Page 54

9672:1306			loc_239:					;  xref 9672:1301
9672:1306  8B F0				mov	si,ax
9672:1308  58					pop	ax
9672:1309  8B D1				mov	dx,cx
9672:130B  BB 02C0				mov	bx,2C0h
9672:130E  B9 0302				mov	cx,302h
9672:1311  80 3E 0049 06			cmp	byte ptr ds:video_mode,6	; (0040:0049=3)
9672:1316  72 06				jb	loc_240			; Jump if below
9672:1318  BB 0180				mov	bx,180h
9672:131B  B9 0703				mov	cx,703h
9672:131E			loc_240:					;  xref 9672:1316
9672:131E  22 EA				and	ch,dl
9672:1320  D3 EA				shr	dx,cl			; Shift w/zeros fill
9672:1322  03 F2				add	si,dx
9672:1324  8A F7				mov	dh,bh
9672:1326  2A C9				sub	cl,cl
9672:1328			loc_241:					;  xref 9672:132E
9672:1328  D0 C8				ror	al,1			; Rotate
9672:132A  02 CD				add	cl,ch
9672:132C  FE CF				dec	bh
9672:132E  75 F8				jnz	loc_241			; Jump if not zero
9672:1330  8A E3				mov	ah,bl
9672:1332  D2 EC				shr	ah,cl			; Shift w/zeros fill
9672:1334  5B					pop	bx
9672:1335  C3					retn
				sub_45		endp

9672:1336			loc_242:					;  xref 9672:1183
9672:1336  8A D8				mov	bl,al
9672:1338  8B C1				mov	ax,cx
9672:133A  E8 026A				call	sub_52			; (15A7)
9672:133D  8B F8				mov	di,ax
9672:133F  2B D1				sub	dx,cx
9672:1341  81 C2 0101				add	dx,101h
9672:1345  D0 E6				shl	dh,1			; Shift w/zeros fill
9672:1347  D0 E6				shl	dh,1			; Shift w/zeros fill
9672:1349  80 3E 0049 06			cmp	byte ptr ds:[49h],6	; (9672:0049=0AFh)
9672:134E  73 04				jae	loc_243			; Jump if above or =
9672:1350  D0 E2				shl	dl,1			; Shift w/zeros fill
9672:1352  D1 E7				shl	di,1			; Shift w/zeros fill
9672:1354			loc_243:					;  xref 9672:134E
9672:1354  06					push	es
9672:1355  1F					pop	ds
9672:1356  2A ED				sub	ch,ch
9672:1358  D0 E3				shl	bl,1			; Shift w/zeros fill
9672:135A  D0 E3				shl	bl,1			; Shift w/zeros fill
9672:135C  74 2D				jz	loc_247			; Jump if zero
9672:135E  8A C3				mov	al,bl
9672:1360  B4 50				mov	ah,50h			; 'P'
9672:1362  F6 E4				mul	ah			; ax = reg * al
9672:1364  8B F7				mov	si,di
9672:1366  03 F0				add	si,ax
9672:1368  8A E6				mov	ah,dh
9672:136A  2A E3				sub	ah,bl
9672:136C			loc_244:					;  xref 9672:1379
9672:136C  E8 0080				call	sub_46			; (13EF)
9672:136F  81 EE 1FB0				sub	si,1FB0h
           l1rom.lst       LDP	REV 1.0 10/30/85	Sourcer	v7.00   12-Apr-24  12:34 am   Page 55

9672:1373  81 EF 1FB0				sub	di,1FB0h
9672:1377  FE CC				dec	ah
9672:1379  75 F1				jnz	loc_244			; Jump if not zero
9672:137B			loc_245:					;  xref 9672:138D
9672:137B �8A C7				mov	al,bh
9672:137D			loc_246:					;  xref 9672:1386
9672:137D  E8 0088				call	sub_47			; (1408)
9672:1380  81 EF 1FB0				sub	di,1FB0h
9672:1384  FE CB				dec	bl
9672:1386  75 F5				jnz	loc_246			; Jump if not zero
9672:1388  E9 FD17				jmp	INT10_exit			; (10A2)
9672:138B			loc_247:					;  xref 9672:135C
9672:138B  8A DE				mov	bl,dh
9672:138D  EB EC				jmp	short loc_245		; (137B)
9672:138F			loc_248:					;  xref 9672:1209
9672:138F  FD					std				; Set direction flag
9672:1390  8A D8				mov	bl,al
9672:1392  8B C2				mov	ax,dx
9672:1394  E8 0210				call	sub_52			; (15A7)
9672:1397  8B F8				mov	di,ax
9672:1399  2B D1				sub	dx,cx
9672:139B  81 C2 0101				add	dx,101h
9672:139F  D0 E6				shl	dh,1			; Shift w/zeros fill
9672:13A1  D0 E6				shl	dh,1			; Shift w/zeros fill
9672:13A3  80 3E 0049 06			cmp	byte ptr ds:[49h],6	; (9672:0049=0AFh)
9672:13A8  73 05				jae	loc_249			; Jump if above or =
9672:13AA  D0 E2				shl	dl,1			; Shift w/zeros fill
9672:13AC  D1 E7				shl	di,1			; Shift w/zeros fill
9672:13AE  47					inc	di
9672:13AF			loc_249:					;  xref 9672:13A8
9672:13AF  06					push	es
9672:13B0  1F					pop	ds
9672:13B1  2A ED				sub	ch,ch
9672:13B3 �81 C7 00F0				add	di,offset data_59	; (9672:00F0=85h)
9672:13B7  D0 E3				shl	bl,1			; Shift w/zeros fill
9672:13B9  D0 E3				shl	bl,1			; Shift w/zeros fill
9672:13BB  74 2E				jz	loc_253			; Jump if zero
9672:13BD  8A C3				mov	al,bl
9672:13BF  B4 50				mov	ah,50h			; 'P'
9672:13C1  F6 E4				mul	ah			; ax = reg * al
9672:13C3  8B F7				mov	si,di
9672:13C5  2B F0				sub	si,ax
9672:13C7  8A E6				mov	ah,dh
9672:13C9  2A E3				sub	ah,bl
9672:13CB			loc_250:					;  xref 9672:13D8
9672:13CB  E8 0021				call	sub_46			; (13EF)
9672:13CE  81 EE 2050				sub	si,2050h
9672:13D2  81 EF 2050				sub	di,2050h
9672:13D6  FE CC				dec	ah
9672:13D8  75 F1				jnz	loc_250			; Jump if not zero
9672:13DA			loc_251:					;  xref 9672:13ED
9672:13DA �8A C7				mov	al,bh
9672:13DC			loc_252:					;  xref 9672:13E5
9672:13DC  E8 0029				call	sub_47			; (1408)
9672:13DF  81 EF 2050				sub	di,2050h
9672:13E3  FE CB				dec	bl
9672:13E5  75 F5				jnz	loc_252			; Jump if not zero
           l1rom.lst       LDP	REV 1.0 10/30/85	Sourcer	v7.00   12-Apr-24  12:34 am   Page 56

9672:13E7  FC					cld				; Clear direction
9672:13E8  E9 FCB7				jmp	INT10_exit			; (10A2)
9672:13EB			loc_253:					;  xref 9672:13BB
9672:13EB  8A DE				mov	bl,dh
9672:13ED  EB EB				jmp	short loc_251		; (13DA)

				;��������������������������������������������������������������������������
				;                              SUBROUTINE
				;
				;         Called from:   9672:136C, 13CB
				;��������������������������������������������������������������������������

9672:13EF			sub_46		proc	near
9672:13EF  8A CA				mov	cl,dl
9672:13F1  56					push	si
9672:13F2  57					push	di
9672:13F3  F3/ A4				rep	movsb			; Rep when cx >0 Mov [si] to es:[di]
9672:13F5  5F					pop	di
9672:13F6  5E					pop	si
9672:13F7 �81 C6 2000				add	si,data_100e		; (9672:2000=0)
9672:13FB �81 C7 2000				add	di,data_100e		; (9672:2000=0)
9672:13FF  56					push	si
9672:1400  57					push	di
9672:1401  8A CA				mov	cl,dl
9672:1403  F3/ A4				rep	movsb			; Rep when cx >0 Mov [si] to es:[di]
9672:1405  5F					pop	di
9672:1406  5E					pop	si
9672:1407  C3					retn
				sub_46		endp


				;��������������������������������������������������������������������������
				;                              SUBROUTINE
				;
				;         Called from:   9672:137D, 13DC
				;��������������������������������������������������������������������������

9672:1408			sub_47		proc	near
9672:1408  8A CA				mov	cl,dl
9672:140A  57					push	di
9672:140B  F3/ AA				rep	stosb			; Rep when cx >0 Store al to es:[di]
9672:140D  5F					pop	di
9672:140E �81 C7 2000				add	di,data_100e		; (9672:2000=0)
9672:1412  57					push	di
9672:1413  8A CA				mov	cl,dl
9672:1415  F3/ AA				rep	stosb			; Rep when cx >0 Store al to es:[di]
9672:1417  5F					pop	di
9672:1418  C3					retn
				sub_47		endp

9672:1419			loc_254:					;  xref 9672:1288, 12AA
9672:1419  B4 00				mov	ah,0
9672:141B  50					push	ax
9672:141C  E8 0185				call	sub_51			; (15A4)
9672:141F  8B F8				mov	di,ax
9672:1421  58					pop	ax
9672:1422  3C 80				cmp	al,80h
           l1rom.lst       LDP	REV 1.0 10/30/85	Sourcer	v7.00   12-Apr-24  12:34 am   Page 57

9672:1424  73 06				jae	loc_255			; Jump if above or =
9672:1426 �BE 16D9				mov	si,data_103e		; (C000:16D9=18h)
9672:1429  0E					push	cs
9672:142A  EB 0F				jmp	short loc_256		; (143B)
9672:142C			loc_255:					;  xref 9672:1424
9672:142C  2C 80				sub	al,80h
9672:142E  1E					push	ds
9672:142F  2B F6				sub	si,si
9672:1431  8E DE				mov	ds,si
9672:1433  C5 36 007C				lds	si,dword ptr ds:data_35e	; (0000:007C=1333h) Load seg:offset pt
9672:1437  8C DA				mov	dx,ds
9672:1439  1F					pop	ds
9672:143A  52					push	dx
9672:143B			loc_256:					;  xref 9672:142A
9672:143B  D1 E0				shl	ax,1			; Shift w/zeros fill
9672:143D  D1 E0				shl	ax,1			; Shift w/zeros fill
9672:143F  D1 E0				shl	ax,1			; Shift w/zeros fill
9672:1441  03 F0				add	si,ax
9672:1443  80 3E 0049 06			cmp	byte ptr ds:[49h],6	; (9672:0049=0AFh)
9672:1448  1F					pop	ds
9672:1449  72 2C				jc	loc_261			; Jump if carry Set

9672:144B			locloop_257:					;  xref 9672:1466
9672:144B  57					push	di
9672:144C  56					push	si
9672:144D  B6 04				mov	dh,4
9672:144F			loc_258:					;  xref 9672:1461
9672:144F  AC					lodsb				; String [si] to al
9672:1450  F6 C3 80				test	bl,80h
9672:1453  75 16				jnz	loc_260			; Jump if not zero
9672:1455  AA					stosb				; Store al to es:[di]
9672:1456  AC					lodsb				; String [si] to al
9672:1457			loc_259:					;  xref 9672:1475
9672:1457 �26: 88 85 1FFF			mov	es:data_99[di],al	; (9672:1FFF=14h)
9672:145C  83 C7 4F				add	di,4Fh
9672:145F  FE CE				dec	dh
9672:1461  75 EC				jnz	loc_258			; Jump if not zero
9672:1463  5E					pop	si
9672:1464  5F					pop	di
9672:1465  47					inc	di
9672:1466  E2 E3				loop	locloop_257		; Loop if cx > 0

9672:1468  E9 FC37				jmp	INT10_exit			; (10A2)
9672:146B			loc_260:					;  xref 9672:1453
9672:146B  26: 32 05				xor	al,es:[di]
9672:146E  AA					stosb				; Store al to es:[di]
9672:146F  AC					lodsb				; String [si] to al
9672:1470  26: 32 85 1FFF			xor	al,es:data_99[di]	; (9672:1FFF=14h)
9672:1475  EB E0				jmp	short loc_259		; (1457)
9672:1477			loc_261:					;  xref 9672:1449
9672:1477  8A D3				mov	dl,bl
9672:1479  D1 E7				shl	di,1			; Shift w/zeros fill
9672:147B  E8 00D1				call	sub_48			; (154F)

9672:147E			locloop_262:					;  xref 9672:14C6
9672:147E  57					push	di
9672:147F  56					push	si
           l1rom.lst       LDP	REV 1.0 10/30/85	Sourcer	v7.00   12-Apr-24  12:34 am   Page 58

9672:1480  B6 04				mov	dh,4
9672:1482			loc_263:					;  xref 9672:14BF
9672:1482  AC					lodsb				; String [si] to al
9672:1483  E8 00DE				call	sub_49			; (1564)
9672:1486  23 C3				and	ax,bx
9672:1488  F6 C2 80				test	dl,80h
9672:148B  74 07				jz	loc_264			; Jump if zero
9672:148D  26: 32 25				xor	ah,es:[di]
9672:1490  26: 32 45 01				xor	al,es:[di+1]
9672:1494			loc_264:					;  xref 9672:148B
9672:1494  26: 88 25				mov	es:[di],ah
9672:1497  26: 88 45 01				mov	es:[di+1],al
9672:149B  AC					lodsb				; String [si] to al
9672:149C  E8 00C5				call	sub_49			; (1564)
9672:149F  23 C3				and	ax,bx
9672:14A1  F6 C2 80				test	dl,80h
9672:14A4  74 0A				jz	loc_265			; Jump if zero
9672:14A6  26: 32 A5 2000			xor	ah,es:data_100e[di]	; (9672:2000=0)
9672:14AB  26: 32 85 2001			xor	al,es:data_101e[di]	; (9672:2001=0)
9672:14B0			loc_265:					;  xref 9672:14A4
9672:14B0  26: 88 A5 2000			mov	es:data_100e[di],ah	; (9672:2000=0)
9672:14B5  26: 88 85 2001			mov	es:data_101e[di],al	; (9672:2001=0)
9672:14BA  83 C7 50				add	di,50h
9672:14BD  FE CE				dec	dh
9672:14BF  75 C1				jnz	loc_263			; Jump if not zero
9672:14C1  5E					pop	si
9672:14C2  5F					pop	di
9672:14C3  83 C7 02				add	di,2
9672:14C6  E2 B6				loop	locloop_262		; Loop if cx > 0

9672:14C8  E9 FBD7				jmp	INT10_exit			; (10A2)
9672:14CB			loc_266:					;  xref 9672:1242
9672:14CB  E8 00D6				call	sub_51			; (15A4)
9672:14CE  8B F0				mov	si,ax
9672:14D0  83 EC 08				sub	sp,8
9672:14D3  8B EC				mov	bp,sp
9672:14D5  80 3E 0049 06			cmp	byte ptr ds:data_102e,6	; (C000:0049=61h)
9672:14DA  06					push	es
9672:14DB  1F					pop	ds
9672:14DC  72 1A				jc	loc_268			; Jump if carry Set
9672:14DE  B6 04				mov	dh,4
9672:14E0			loc_267:					;  xref 9672:14F3
9672:14E0  8A 04				mov	al,[si]
9672:14E2  88 46 00				mov	[bp],al
9672:14E5  45					inc	bp
9672:14E6  8A 84 2000				mov	al,ds:data_100e[si]	; (9672:2000=0)
9672:14EA  88 46 00				mov	[bp],al
9672:14ED  45					inc	bp
9672:14EE  83 C6 50				add	si,50h
9672:14F1  FE CE				dec	dh
9672:14F3  75 EB				jnz	loc_267			; Jump if not zero
9672:14F5  EB 17				jmp	short loc_270		; (150E)
9672:14F7  90					db	90h
9672:14F8			loc_268:					;  xref 9672:14DC
9672:14F8  D1 E6				shl	si,1			; Shift w/zeros fill
9672:14FA  B6 04				mov	dh,4
9672:14FC			loc_269:					;  xref 9672:150C
           l1rom.lst       LDP	REV 1.0 10/30/85	Sourcer	v7.00   12-Apr-24  12:34 am   Page 59

9672:14FC  E8 0088				call	sub_50			; (1587)
9672:14FF �81 C6 2000				add	si,data_100e		; (9672:2000=0)
9672:1503  E8 0081				call	sub_50			; (1587)
9672:1506  81 EE 1FB0				sub	si,1FB0h
9672:150A  FE CE				dec	dh
9672:150C  75 EE				jnz	loc_269			; Jump if not zero
9672:150E			loc_270:					;  xref 9672:14F5
9672:150E �BF 16D9				mov	di,data_103e		; (C000:16D9=18h)
9672:1511  0E					push	cs
9672:1512  07					pop	es
9672:1513  83 ED 08				sub	bp,8
9672:1516  8B F5				mov	si,bp
9672:1518  FC					cld				; Clear direction
9672:1519  B0 00				mov	al,0
9672:151B			loc_271:					;  xref 9672:1547
9672:151B �16					push	ss
9672:151C  1F					pop	ds
9672:151D  BA 0080				mov	dx,80h
9672:1520			loc_272:					;  xref 9672:1531
9672:1520  56					push	si
9672:1521  57					push	di
9672:1522  B9 0008				mov	cx,8
9672:1525  F3/ A6				repe	cmpsb			; Rep zf=1+cx >0 Cmp [si] to es:[di]
9672:1527  5F					pop	di
9672:1528  5E					pop	si
9672:1529  74 1E				jz	loc_273			; Jump if zero
9672:152B  FE C0				inc	al
9672:152D  83 C7 08				add	di,8
9672:1530  4A					dec	dx
9672:1531  75 ED				jnz	loc_272			; Jump if not zero
9672:1533  3C 00				cmp	al,0
9672:1535  74 12				je	loc_273			; Jump if equal
9672:1537  2B C0				sub	ax,ax
9672:1539  8E D8				mov	ds,ax
9672:153B  C4 3E 007C				les	di,dword ptr ds:data_35e	; (0000:007C=1333h) Load seg:offset pt
9672:153F  8C C0				mov	ax,es
9672:1541  0B C7				or	ax,di
9672:1543  74 04				jz	loc_273			; Jump if zero
9672:1545  B0 80				mov	al,80h
9672:1547  EB D2				jmp	short loc_271		; (151B)
9672:1549			loc_273:					;  xref 9672:1529, 1535, 1543
9672:1549  83 C4 08				add	sp,8
9672:154C  E9 FB53				jmp	INT10_exit			; (10A2)

				;��������������������������������������������������������������������������
				;                              SUBROUTINE
				;
				;         Called from:   9672:147B
				;��������������������������������������������������������������������������

9672:154F			sub_48		proc	near
9672:154F  80 E3 03				and	bl,3
9672:1552  8A C3				mov	al,bl
9672:1554  51					push	cx
9672:1555  B9 0003				mov	cx,3

9672:1558			locloop_274:					;  xref 9672:155E
           l1rom.lst       LDP	REV 1.0 10/30/85	Sourcer	v7.00   12-Apr-24  12:34 am   Page 60

9672:1558  D0 E0				shl	al,1			; Shift w/zeros fill
9672:155A  D0 E0				shl	al,1			; Shift w/zeros fill
9672:155C  0A D8				or	bl,al
9672:155E  E2 F8				loop	locloop_274		; Loop if cx > 0

9672:1560  8A FB				mov	bh,bl
9672:1562  59					pop	cx
9672:1563  C3					retn
				sub_48		endp


				;��������������������������������������������������������������������������
				;                              SUBROUTINE
				;
				;         Called from:   9672:1483, 149C
				;��������������������������������������������������������������������������

9672:1564			sub_49		proc	near
9672:1564  52					push	dx
9672:1565  51					push	cx
9672:1566  53					push	bx
9672:1567  BA 0000				mov	dx,0
9672:156A  B9 0001				mov	cx,1
9672:156D			loc_275:					;  xref 9672:157F
9672:156D  8B D8				mov	bx,ax
9672:156F  23 D9				and	bx,cx
9672:1571  0B D3				or	dx,bx
9672:1573  D1 E0				shl	ax,1			; Shift w/zeros fill
9672:1575  D1 E1				shl	cx,1			; Shift w/zeros fill
9672:1577  8B D8				mov	bx,ax
9672:1579  23 D9				and	bx,cx
9672:157B  0B D1				or	dx,cx
9672:157D  D1 E1				shl	cx,1			; Shift w/zeros fill
9672:157F  73 EC				jnc	loc_275			; Jump if carry=0
9672:1581  8B C2				mov	ax,dx
9672:1583  5B					pop	bx
9672:1584  59					pop	cx
9672:1585  5A					pop	dx
9672:1586  C3					retn
				sub_49		endp


				;��������������������������������������������������������������������������
				;                              SUBROUTINE
				;
				;         Called from:   9672:14FC, 1503
				;��������������������������������������������������������������������������

9672:1587			sub_50		proc	near
9672:1587  8A 24				mov	ah,[si]
9672:1589  8A 44 01				mov	al,[si+1]
9672:158C  B9 C000				mov	cx,0C000h
9672:158F  B2 00				mov	dl,0
9672:1591			loc_276:					;  xref 9672:159D
9672:1591  85 C1				test	ax,cx
9672:1593  F8					clc				; Clear carry flag
9672:1594  74 01				jz	loc_277			; Jump if zero
           l1rom.lst       LDP	REV 1.0 10/30/85	Sourcer	v7.00   12-Apr-24  12:34 am   Page 61

9672:1596  F9					stc				; Set carry flag
9672:1597			loc_277:					;  xref 9672:1594
9672:1597  D0 D2				rcl	dl,1			; Rotate thru carry
9672:1599  D1 E9				shr	cx,1			; Shift w/zeros fill
9672:159B  D1 E9				shr	cx,1			; Shift w/zeros fill
9672:159D  73 F2				jnc	loc_276			; Jump if carry=0
9672:159F  88 56 00				mov	[bp],dl
9672:15A2  45					inc	bp
9672:15A3  C3					retn
				sub_50		endp


				;��������������������������������������������������������������������������
				;                              SUBROUTINE
				;
				;         Called from:   9672:141C, 14CB
				;��������������������������������������������������������������������������

9672:15A4			sub_51		proc	near
9672:15A4  A1 0050				mov	ax,word ptr ds:[50h]	; (9672:0050=4D6h)

				;���� External Entry into Subroutine ��������������������������������������
				;
				;         Called from:   9672:133A, 1394

9672:15A7			sub_52:
9672:15A7  53					push	bx
9672:15A8  8B D8				mov	bx,ax
9672:15AA  8A C4				mov	al,ah
9672:15AC  F6 26 004A				mul	byte ptr ds:[4Ah]	; (9672:004A=0E3h) ax = data * al
9672:15B0  D1 E0				shl	ax,1			; Shift w/zeros fill
9672:15B2  D1 E0				shl	ax,1			; Shift w/zeros fill
9672:15B4  2A FF				sub	bh,bh
9672:15B6  03 C3				add	ax,bx
9672:15B8  5B					pop	bx
9672:15B9  C3					retn
				sub_51		endp


				;����� Indexed Entry Point ������������������������������������������������

9672:15BA			INT10_wrttty:					;  xref 9672:0F59, 0F87
9672:15BA  50					push	ax
9672:15BB  50					push	ax
9672:15BC  B4 03				mov	ah,3
9672:15BE  CD 10				int	10h			; Video display   ah=functn 03h
										;  get cursor loc in dx, mode cx
9672:15C0  58					pop	ax
9672:15C1  3C 08				cmp	al,8
9672:15C3  74 59				je	loc_286			; Jump if equal
9672:15C5  3C 0D				cmp	al,0Dh
9672:15C7  74 5E				je	loc_287			; Jump if equal
9672:15C9  3C 0A				cmp	al,0Ah
9672:15CB  74 5E				je	loc_288			; Jump if equal
9672:15CD  3C 07				cmp	al,7
9672:15CF  74 61				je	loc_289			; Jump if equal
9672:15D1  8A 3E 0062				mov	bh,ds:video_page	; (0040:0062=0)
           l1rom.lst       LDP	REV 1.0 10/30/85	Sourcer	v7.00   12-Apr-24  12:34 am   Page 62

9672:15D5  B4 0A				mov	ah,0Ah
9672:15D7  B9 0001				mov	cx,1
9672:15DA  CD 10				int	10h			; Video display   ah=functn 0Ah
										;  set char al at present curs
										;   cx=# of chars to replicate
9672:15DC  FE C2				inc	dl
9672:15DE  3A 16 004A				cmp	dl,ds:video_columns	; (0040:004A=50h)
9672:15E2  75 36				jne	loc_285			; Jump if not equal
9672:15E4  B2 00				mov	dl,0
9672:15E6  80 FE 18				cmp	dh,18h
9672:15E9  75 2D				jne	loc_284			; Jump if not equal
9672:15EB			loc_279:					;  xref 9672:1630
9672:15EB �B4 02				mov	ah,2
9672:15ED  B7 00				mov	bh,0
9672:15EF  CD 10				int	10h			; Video display   ah=functn 02h
										;  set cursor location in dx
9672:15F1  A0 0049				mov	al,ds:video_mode	; (0040:0049=3)
9672:15F4  3C 04				cmp	al,4
9672:15F6  72 06				jb	loc_280			; Jump if below
9672:15F8  3C 07				cmp	al,7
9672:15FA  B7 00				mov	bh,0
9672:15FC  75 06				jnz	loc_281			; Jump if not zero
9672:15FE			loc_280:					;  xref 9672:15F6
9672:15FE  B4 08				mov	ah,8
9672:1600  CD 10				int	10h			; Video display   ah=functn 08h
										;  get char al & attrib ah @curs
9672:1602  8A FC				mov	bh,ah
9672:1604			loc_281:					;  xref 9672:15FC
9672:1604  B8 0601				mov	ax,601h
9672:1607  B9 0000				mov	cx,0
9672:160A  B6 18				mov	dh,18h
9672:160C  8A 16 004A				mov	dl,ds:video_columns	; (0040:004A=50h)
9672:1610  FE CA				dec	dl
9672:1612			loc_282:					;  xref 9672:161C
9672:1612 �CD 10				int	10h			; Video display   ah=functn 02h
										;  set cursor location in dx
9672:1614			loc_283:					;  xref 9672:1637
9672:1614 �58					pop	ax
9672:1615  E9 FA8A				jmp	INT10_exit			; (10A2)
9672:1618			loc_284:					;  xref 9672:15E9, 162E
9672:1618  FE C6				inc	dh
9672:161A			loc_285:					;  xref 9672:15E2, 1621, 1625, 1629
9672:161A �B4 02				mov	ah,2
9672:161C  EB F4				jmp	short loc_282		; (1612)
9672:161E			loc_286:					;  xref 9672:15C3
9672:161E  80 FA 00				cmp	dl,0
9672:1621  74 F7				je	loc_285			; Jump if equal
9672:1623  FE CA				dec	dl
9672:1625  EB F3				jmp	short loc_285		; (161A)
9672:1627			loc_287:					;  xref 9672:15C7
9672:1627  B2 00				mov	dl,0
9672:1629  EB EF				jmp	short loc_285		; (161A)
9672:162B			loc_288:					;  xref 9672:15CB
9672:162B  80 FE 18				cmp	dh,18h
9672:162E  75 E8				jne	loc_284			; Jump if not equal
9672:1630  EB B9				jmp	short loc_279		; (15EB)
9672:1632			loc_289:					;  xref 9672:15CF
           l1rom.lst       LDP	REV 1.0 10/30/85	Sourcer	v7.00   12-Apr-24  12:34 am   Page 63

9672:1632  B3 02				mov	bl,2
9672:1634  E8 EF1D				call	sub_12			; (0554)
9672:1637  EB DB				jmp	short loc_283		; (1614)
9672:1639  03			data_89		db	3			; Data table (indexed access)
										;  xref 9672:1670
9672:163A  03 05 05 03 03 03			db	3, 5, 5, 3, 3, 3
9672:1640  04					db	4

				;����� Indexed Entry Point ������������������������������������������������

9672:1641			INT10_readpen:					;  xref 9672:0F45, 0F87
9672:1641  B4 00				mov	ah,0
9672:1643  8B 16 0063				mov	dx,ds:video_port	; (0040:0063=3D4h)
9672:1647  83 C2 06				add	dx,6
9672:164A  EC					in	al,dx			; port 3DAh, CGA/EGA vid status
9672:164B  A8 04				test	al,4
9672:164D  75 78				jnz	loc_295			; Jump if not zero
9672:164F  A8 02				test	al,2
9672:1651  74 7E				jz	loc_296			; Jump if zero
9672:1653  B4 10				mov	ah,10h
9672:1655  8B 16 0063				mov	dx,ds:video_port	; (0040:0063=3D4h)
9672:1659  8A C4				mov	al,ah
9672:165B  EE					out	dx,al			; port 3D4h, CGA/EGA reg index
										;  al = 10h, light pen high
9672:165C  42					inc	dx
9672:165D  EC					in	al,dx			; port 3D5h, CGA/EGA indxd data
9672:165E  8A E8				mov	ch,al
9672:1660  4A					dec	dx
9672:1661  FE C4				inc	ah
9672:1663  8A C4				mov	al,ah
9672:1665  EE					out	dx,al			; port 3D4h, CGA/EGA reg index
										;  al = 11h, light pen low
9672:1666  42					inc	dx
9672:1667  EC					in	al,dx			; port 3D5h, CGA/EGA indxd data
9672:1668  8A E5				mov	ah,ch
9672:166A  8A 1E 0049				mov	bl,ds:video_mode	; (0040:0049=3)
9672:166E  2A FF				sub	bh,bh
9672:1670  2E: 8A 9F 1639			mov	bl,cs:data_89[bx]	; (9672:1639=3)
9672:1675  2B C3				sub	ax,bx
9672:1677  2B 06 004E				sub	ax,ds:video_segment	; (0040:004E=0)
9672:167B  79 03				jns	loc_291			; Jump if not sign
9672:167D  B8 0000				mov	ax,0
9672:1680			loc_291:					;  xref 9672:167B
9672:1680  B1 03				mov	cl,3
9672:1682  80 3E 0049 04			cmp	byte ptr ds:video_mode,4	; (0040:0049=3)
9672:1687  72 2A				jb	loc_293			; Jump if below
9672:1689  80 3E 0049 07			cmp	byte ptr ds:video_mode,7	; (0040:0049=3)
9672:168E  74 23				je	loc_293			; Jump if equal
9672:1690  B2 28				mov	dl,28h			; '('
9672:1692  F6 F2				div	dl			; al, ah rem = ax/reg
9672:1694  8A E8				mov	ch,al
9672:1696  02 ED				add	ch,ch
9672:1698  8A DC				mov	bl,ah
9672:169A  2A FF				sub	bh,bh
9672:169C  80 3E 0049 06			cmp	byte ptr ds:video_mode,6	; (0040:0049=3)
9672:16A1  75 04				jne	loc_292			; Jump if not equal
9672:16A3  B1 04				mov	cl,4
           l1rom.lst       LDP	REV 1.0 10/30/85	Sourcer	v7.00   12-Apr-24  12:34 am   Page 64

9672:16A5  D0 E4				shl	ah,1			; Shift w/zeros fill
9672:16A7			loc_292:					;  xref 9672:16A1
9672:16A7  D3 E3				shl	bx,cl			; Shift w/zeros fill
9672:16A9  8A D4				mov	dl,ah
9672:16AB  8A F0				mov	dh,al
9672:16AD  D0 EE				shr	dh,1			; Shift w/zeros fill
9672:16AF  D0 EE				shr	dh,1			; Shift w/zeros fill
9672:16B1  EB 12				jmp	short loc_294		; (16C5)
9672:16B3			loc_293:					;  xref 9672:1687, 168E
9672:16B3  F6 36 004A				div	byte ptr ds:video_columns	; (0040:004A=50h) al,ah rem = ax/data
9672:16B7  8A F0				mov	dh,al
9672:16B9  8A D4				mov	dl,ah
9672:16BB  D2 E0				shl	al,cl			; Shift w/zeros fill
9672:16BD  8A E8				mov	ch,al
9672:16BF  8A DC				mov	bl,ah
9672:16C1  32 FF				xor	bh,bh			; Zero register
9672:16C3  D3 E3				shl	bx,cl			; Shift w/zeros fill
9672:16C5			loc_294:					;  xref 9672:16B1
9672:16C5  B4 01				mov	ah,1
9672:16C7			loc_295:					;  xref 9672:164D
9672:16C7  52					push	dx
9672:16C8  8B 16 0063				mov	dx,ds:video_port	; (0040:0063=3D4h)
9672:16CC  83 C2 07				add	dx,7
9672:16CF  EE					out	dx,al			; port 3DBh, CGA light pen clr
9672:16D0  5A					pop	dx
9672:16D1			loc_296:					;  xref 9672:1651
9672:16D1  5F					pop	di
9672:16D2  5E					pop	si
9672:16D3  1F					pop	ds
9672:16D4  1F					pop	ds
9672:16D5  1F					pop	ds
9672:16D6  1F					pop	ds
9672:16D7  07					pop	es
9672:16D8  CF					iret				; Interrupt return
9672:16D9  0008[00]				db	8 dup (0)
9672:16E1  73 81 A5 81 BD 99			db	 73h, 81h,0A5h, 81h,0BDh, 99h
9672:16E7  81 73 73 FF DB FF			db	 81h, 73h, 73h,0FFh,0DBh,0FFh
9672:16ED  C3 E7 FF 7E 6C FE			db	0C3h,0E7h,0FFh, 7Eh, 6Ch,0FEh
9672:16F3  FE FE 7C 38 10 00			db	0FEh,0FEh, 7Ch, 38h, 10h, 00h
9672:16F9  10 38 7C FE 7C 38			db	 10h, 38h, 7Ch,0FEh, 7Ch, 38h
9672:16FF  10 08 38 7C 38 FE			db	 10h, 08h, 38h, 7Ch, 38h,0FEh
9672:1705  FE 7C 38 7C 10 10			db	0FEh, 7Ch, 38h, 7Ch, 10h, 10h
9672:170B  38					db	38h
9672:170C			loc_297:					;  xref 9672:170C
9672:170C  7C FE				jl	loc_297			; Jump if <
9672:170E  7C 38				jl	$+3Ah			; Jump if <
9672:1710  7C 00				jl	$+2			; delay for I/O
9672:1712  00 18				add	[bx+si],bl
9672:1714  3C 3C				cmp	al,3Ch			; '<'
9672:1716  18 00				sbb	[bx+si],al
9672:1718  00 FF				add	bh,bh
9672:171A  FF E7				jmp	di			;*
							                        ;* No entry point to code
9672:171C  C3					retn
							                        ;* No entry point to code
9672:171D  C3					retn
							                        ;* No entry point to code
           l1rom.lst       LDP	REV 1.0 10/30/85	Sourcer	v7.00   12-Apr-24  12:34 am   Page 65

9672:171E  E7 FF				out	0FFh,ax			; port 0FFh ??I/O Non-standard
9672:1720  FF 00				inc	word ptr [bx+si]
9672:1722  3C 66				cmp	al,66h			; 'f'
9672:1724  42					inc	dx
9672:1725  42					inc	dx
9672:1726  66 3C 00 FF C3 99			db	 66h, 3Ch, 00h,0FFh,0C3h, 99h
9672:172C  BD B0 99 C3 FF 0F			db	0BDh,0B0h, 99h,0C3h,0FFh, 0Fh
9672:1732  07 0F 7D CC CC CC			db	 07h, 0Fh, 7Dh,0CCh,0CCh,0CCh
9672:1738  78 3C 66 66 66 3C			db	 78h, 3Ch, 66h, 66h, 66h, 3Ch
9672:173E  18 7E 18 3F 3F 3F			db	 18h, 7Eh, 18h, 3Fh, 3Fh, 3Fh
9672:1744  30 30 70 F0 E0 7F			db	 30h, 30h, 70h,0F0h,0E0h, 7Fh
9672:174A  63 7F 63 63 67 E6			db	 63h, 7Fh, 63h, 63h, 67h,0E6h
9672:1750  C0 99 5A 3C E7 E7			db	0C0h, 99h, 5Ah, 3Ch,0E7h,0E7h
9672:1756  3C 5A 99 80 E0 F8			db	 3Ch, 5Ah, 99h, 80h,0E0h,0F8h
9672:175C  FE F8 E0 80 00 02			db	0FEh,0F8h,0E0h, 80h, 00h, 02h
9672:1762  0E 3E FE 3E 0E 02			db	 0Eh, 3Eh,0FEh, 3Eh, 0Eh, 02h
9672:1768  00 18 3C 7E 18 18			db	 00h, 18h, 3Ch, 7Eh, 18h, 18h
9672:176E  7E 3C 18 66 66 66			db	 7Eh, 3Ch, 18h, 66h, 66h, 66h
9672:1774  66 66 00 66 00 7F			db	 66h, 66h, 00h, 66h, 00h, 7Fh
9672:177A  DB DB 7B 1B 1B 1B			db	0DBh,0DBh, 7Bh, 1Bh, 1Bh, 1Bh
9672:1780  00 3E 63 38 6C 6C			db	 00h, 3Eh, 63h, 38h, 6Ch, 6Ch
9672:1786  38 CC 78 00 00 00			db	 38h,0CCh, 78h, 00h, 00h, 00h
9672:178C  00 7E 7E 7E 00 18			db	 00h, 7Eh, 7Eh, 7Eh, 00h, 18h
9672:1792  3C 7E 18 7E 3C 18			db	 3Ch, 7Eh, 18h, 7Eh, 3Ch, 18h
9672:1798  FF 18 3C 7E 18 18			db	0FFh, 18h, 3Ch, 7Eh, 18h, 18h
9672:179E  18 18 00 18 18 18			db	 18h, 18h, 00h, 18h, 18h, 18h
9672:17A4  18 73 3C 18 00 00			db	 18h, 73h, 3Ch, 18h, 00h, 00h
9672:17AA  18 0C FE 0C 18 00			db	 18h, 0Ch,0FEh, 0Ch, 18h, 00h
9672:17B0  00 00 30 60 FE 60			db	 00h, 00h, 30h, 60h,0FEh, 60h
9672:17B6  30 00 00 00 00 C0			db	 30h, 00h, 00h, 00h, 00h,0C0h
9672:17BC  C0 C0 FE 00 00 00			db	0C0h,0C0h,0FEh, 00h, 00h, 00h
9672:17C2  24 66 FF 66 24 00			db	 24h, 66h,0FFh, 66h, 24h, 00h
9672:17C8  00 00 18 3C 7E FF			db	 00h, 00h, 18h, 3Ch, 7Eh,0FFh
9672:17CE  FF 00 00 00 FF FF			db	0FFh, 00h, 00h, 00h,0FFh,0FFh
9672:17D4  7E 3C 18 00				db	 7Eh, 3Ch, 18h, 00h
9672:17D8  0009[00]				db	9 dup (0)
9672:17E1  30 78 78 30 30 00			db	 30h, 78h, 78h, 30h, 30h, 00h
9672:17E7  30 00 6C 6C 6C 00			db	 30h, 00h, 6Ch, 6Ch, 6Ch, 00h
9672:17ED  00 00 00 00 6C 6C			db	 00h, 00h, 00h, 00h, 6Ch, 6Ch
9672:17F3  FE 6C FE 6C 6C 00			db	0FEh, 6Ch,0FEh, 6Ch, 6Ch, 00h
9672:17F9  30 7C C0 78 0C F8			db	 30h, 7Ch,0C0h, 78h, 0Ch,0F8h
9672:17FF  30 00 00 C6 CC 18			db	 30h, 00h, 00h,0C6h,0CCh, 18h
9672:1805  30 66 C6 00 38 6C			db	 30h, 66h,0C6h, 00h, 38h, 6Ch
9672:180B  38 76 DC CC 76 00			db	 38h, 76h,0DCh,0CCh, 76h, 00h
9672:1811  60 60 C0 00 00 00			db	 60h, 60h,0C0h, 00h, 00h, 00h
9672:1817  00 00 18 30 60 60			db	 00h, 00h, 18h, 30h, 60h, 60h
9672:181D  60 30 18 00 60 30			db	 60h, 30h, 18h, 00h, 60h, 30h
9672:1823  18 18 18 30 60 00			db	 18h, 18h, 18h, 30h, 60h, 00h
9672:1829  00 66 3C FF 3C 66			db	 00h, 66h, 3Ch,0FFh, 3Ch, 66h
9672:182F  00 00 00 30 30 FC			db	 00h, 00h, 00h, 30h, 30h,0FCh
9672:1835  30 30				db	 30h, 30h
9672:1837  0007[00]				db	7 dup (0)
9672:183E  30 30 60 00 00 00			db	 30h, 30h, 60h, 00h, 00h, 00h
9672:1844  FC					db	0FCh
9672:1845  0009[00]				db	9 dup (0)
9672:184E  30 30 00 06 0C 18			db	 30h, 30h, 00h, 06h, 0Ch, 18h
9672:1854  30 60 C0 80 00 7C			db	 30h, 60h,0C0h, 80h, 00h, 7Ch
           l1rom.lst       LDP	REV 1.0 10/30/85	Sourcer	v7.00   12-Apr-24  12:34 am   Page 66

9672:185A  C6 CE DE F6 E6 7C			db	0C6h,0CEh,0DEh,0F6h,0E6h, 7Ch
9672:1860  00 30 70 30 30 30			db	 00h, 30h, 70h, 30h, 30h, 30h
9672:1866  30 FC 00 78 CC 0C			db	 30h,0FCh, 00h, 78h,0CCh, 0Ch
9672:186C  38 60 CC				db	 38h, 60h,0CCh
9672:186F			loc_298:					;  xref 9672:18A1
9672:186F  FC					cld				; Clear direction
9672:1870  00 78 CC				add	[bx+si-34h],bh
9672:1873  0C 38				or	al,38h			; '8'
9672:1875  0C CC				or	al,0CCh
9672:1877  78 00				js	$+2			; delay for I/O
9672:1879  1C 3C				sbb	al,3Ch			; '<'
9672:187B  6C CC FE 0C 1E 00			db	 6Ch,0CCh,0FEh, 0Ch, 1Eh, 00h
9672:1881  FC C0 F8 0C 0C CC			db	0FCh,0C0h,0F8h, 0Ch, 0Ch,0CCh
9672:1887  78 00 38 60 C0 F8			db	 78h, 00h, 38h, 60h,0C0h,0F8h
9672:188D  CC CC 78 00 FC CC			db	0CCh,0CCh, 78h, 00h,0FCh,0CCh
9672:1893  0C 18 30 30 30 00			db	 0Ch, 18h, 30h, 30h, 30h, 00h
9672:1899  78 CC CC 78 CC CC			db	 78h,0CCh,0CCh, 78h,0CCh,0CCh
9672:189F  78 00				db	 78h, 00h
9672:18A1			loc_299:
9672:18A1  78 CC				js	loc_298			; Jump if sign=1
9672:18A3  CC					int	3			; Debug breakpoint
9672:18A4  7C 0C				jl	$+0Eh			; Jump if <
9672:18A6  18 70 00		;*		sbb	[bx+si+0],dh
9672:18A6  18 70 00				db	 18h, 70h, 00h
9672:18A9  00 30 30 00 00 30			db	 00h, 30h, 30h, 00h, 00h, 30h
9672:18AF  30 00 00 30 30 00			db	 30h, 00h, 00h, 30h, 30h, 00h
9672:18B5  00 30 30 60 18 30			db	 00h, 30h, 30h, 60h, 18h, 30h
9672:18BB  60 C0 60 30 18 00			db	 60h,0C0h, 60h, 30h, 18h, 00h
9672:18C1  00 00 FC 00 00 FC			db	 00h, 00h,0FCh, 00h, 00h,0FCh
9672:18C7  00 00 60 30 18 0C			db	 00h, 00h, 60h, 30h, 18h, 0Ch
9672:18CD  18 30 60 00 78 CC			db	 18h, 30h, 60h, 00h, 78h,0CCh
9672:18D3  0C 18 30 00 30 00			db	 0Ch, 18h, 30h, 00h, 30h, 00h
9672:18D9  7C C6 DE DE DE C0			db	 7Ch,0C6h,0DEh,0DEh,0DEh,0C0h
9672:18DF  78 00 30 78 CC CC			db	 78h, 00h, 30h, 78h,0CCh,0CCh
9672:18E5  FC CC CC 00 FC 66			db	0FCh,0CCh,0CCh, 00h,0FCh, 66h
9672:18EB  66 7C 66 66 FC 00			db	 66h, 7Ch, 66h, 66h,0FCh, 00h
9672:18F1  3C 66 C0 C0 C0 66			db	 3Ch, 66h,0C0h,0C0h,0C0h, 66h
9672:18F7  3C 00 F8 6C 66 66			db	 3Ch, 00h,0F8h, 6Ch, 66h, 66h
9672:18FD  66 6C F8 00 FE 62			db	 66h, 6Ch,0F8h, 00h,0FEh, 62h
9672:1903  68 78 68 62 FE 00			db	 68h, 78h, 68h, 62h,0FEh, 00h
9672:1909  FE 62 68 78 68 60			db	0FEh, 62h, 68h, 78h, 68h, 60h
9672:190F  F0 00 3C 66 C0 C0			db	0F0h, 00h, 3Ch, 66h,0C0h,0C0h
9672:1915  CE 66 3E 00 CC CC			db	0CEh, 66h, 3Eh, 00h,0CCh,0CCh
9672:191B  CC FC CC CC CC 00			db	0CCh,0FCh,0CCh,0CCh,0CCh, 00h
9672:1921  78 30 30 30 30 30			db	 78h, 30h, 30h, 30h, 30h, 30h
9672:1927  78 00 1E 0C 0C 0C			db	 78h, 00h, 1Eh, 0Ch, 0Ch, 0Ch
9672:192D  CC CC 78 00 E6 66			db	0CCh,0CCh, 78h, 00h,0E6h, 66h
9672:1933  6C 78 6C 66 E6 00			db	 6Ch, 78h, 6Ch, 66h,0E6h, 00h
9672:1939  F0 60 60 60 62 66			db	0F0h, 60h, 60h, 60h, 62h, 66h
9672:193F  FE 00 C6 EE FE FE			db	0FEh, 00h,0C6h,0EEh,0FEh,0FEh
9672:1945  D6 C6 C6 00 C6 E6			db	0D6h,0C6h,0C6h, 00h,0C6h,0E6h
9672:194B  F6 DE CE C6 C6 00			db	0F6h,0DEh,0CEh,0C6h,0C6h, 00h
9672:1951  38 6C C6 C6 C6 6C			db	 38h, 6Ch,0C6h,0C6h,0C6h, 6Ch
9672:1957  38 00 FC 66 66 7C			db	 38h, 00h,0FCh, 66h, 66h, 7Ch
9672:195D  60 60 F0 00 78 CC			db	 60h, 60h,0F0h, 00h, 78h,0CCh
9672:1963  CC CC DC 78 1C 00			db	0CCh,0CCh,0DCh, 78h, 1Ch, 00h
9672:1969  FC 66 66 7C 6C 66			db	0FCh, 66h, 66h, 7Ch, 6Ch, 66h
           l1rom.lst       LDP	REV 1.0 10/30/85	Sourcer	v7.00   12-Apr-24  12:34 am   Page 67

9672:196F  E6 00 78 CC E0 70			db	0E6h, 00h, 78h,0CCh,0E0h, 70h
9672:1975  1C CC 78 00 FC B4			db	 1Ch,0CCh, 78h, 00h,0FCh,0B4h
9672:197B  30 30 30 30 78 00			db	 30h, 30h, 30h, 30h, 78h, 00h
9672:1981  CC CC CC CC CC CC			db	0CCh,0CCh,0CCh,0CCh,0CCh,0CCh
9672:1987  FC 00 CC CC CC CC			db	0FCh, 00h,0CCh,0CCh,0CCh,0CCh
9672:198D  CC 78 C0 00 C6 C6			db	0CCh, 78h,0C0h, 00h,0C6h,0C6h
9672:1993  C6 D6 FE EE C6 00			db	0C6h,0D6h,0FEh,0EEh,0C6h, 00h
9672:1999  C6 C6 6C 38 38 6C			db	0C6h,0C6h, 6Ch, 38h, 38h, 6Ch
9672:199F  C6 00 CC CC CC 78			db	0C6h, 00h,0CCh,0CCh,0CCh, 78h
9672:19A5  30 30 78 00 FE C6			db	 30h, 30h, 78h, 00h,0FEh,0C6h
9672:19AB  8C 18 32 66 FE 00			db	 8Ch, 18h, 32h, 66h,0FEh, 00h
9672:19B1  78 60 60 60 60 60			db	 78h, 60h, 60h, 60h, 60h, 60h
9672:19B7  78 00 C0 60 30 18			db	 78h, 00h,0C0h, 60h, 30h, 18h
9672:19BD  0C 06 02 00 78 18			db	 0Ch, 06h, 02h, 00h, 78h, 18h
9672:19C3  18 18 18 18 78 00			db	 18h, 18h, 18h, 18h, 78h, 00h
9672:19C9  10 38 6C C6 00 00			db	 10h, 38h, 6Ch,0C6h, 00h, 00h
9672:19CF  0009[00]				db	9 dup (0)
9672:19D8  FF 30 30 18				db	0FFh, 30h, 30h, 18h
9672:19DC  0007[00]				db	7 dup (0)
9672:19E3  78 0C 7C CC 76 00			db	 78h, 0Ch, 7Ch,0CCh, 76h, 00h
9672:19E9  E0 60 60 7C 66 66			db	0E0h, 60h, 60h, 7Ch, 66h, 66h
9672:19EF  DC 00 00 00 78 CC			db	0DCh, 00h, 00h, 00h, 78h,0CCh
9672:19F5  C0 CC 78 00 1C 0C			db	0C0h,0CCh, 78h, 00h, 1Ch, 0Ch
9672:19FB  0C 7C CC CC 76 00			db	 0Ch, 7Ch,0CCh,0CCh, 76h, 00h
9672:1A01  00 00 78 CC FC C0			db	 00h, 00h, 78h,0CCh,0FCh,0C0h
9672:1A07  78 00 38 6C 60 F0			db	 78h, 00h, 38h, 6Ch, 60h,0F0h
9672:1A0D  60 60 F0 00 00 00			db	 60h, 60h,0F0h, 00h, 00h, 00h
9672:1A13  76 CC CC 7C 0C F8			db	 76h,0CCh,0CCh, 7Ch, 0Ch,0F8h
9672:1A19  E0 60 6C 76 66 66			db	0E0h, 60h, 6Ch, 76h, 66h, 66h
9672:1A1F  E6 00 30 00 70 30			db	0E6h, 00h, 30h, 00h, 70h, 30h
9672:1A25  30 30 78 00 0C 00			db	 30h, 30h, 78h, 00h, 0Ch, 00h
9672:1A2B  0C 0C 0C CC CC 78			db	 0Ch, 0Ch, 0Ch,0CCh,0CCh, 78h
9672:1A31  E0 60 66 6C 78 6C			db	0E0h, 60h, 66h, 6Ch, 78h, 6Ch
9672:1A37  E6 00 70 30 30 30			db	0E6h, 00h, 70h, 30h, 30h, 30h
9672:1A3D  30 30 78 00 00 00			db	 30h, 30h, 78h, 00h, 00h, 00h
9672:1A43  CC FE FE D6 C6 00			db	0CCh,0FEh,0FEh,0D6h,0C6h, 00h
9672:1A49  00 00 F8 CC CC CC			db	 00h, 00h,0F8h,0CCh,0CCh,0CCh
9672:1A4F  CC 00 00 00 78 CC			db	0CCh, 00h, 00h, 00h, 78h,0CCh
9672:1A55  CC CC 78 00 00 00			db	0CCh,0CCh, 78h, 00h, 00h, 00h
9672:1A5B  DC 66 66 7C 60 F0			db	0DCh, 66h, 66h, 7Ch, 60h,0F0h
9672:1A61  00 00 76 CC CC 7C			db	 00h, 00h, 76h,0CCh,0CCh, 7Ch
9672:1A67  0C 1E 00 00 DC 76			db	 0Ch, 1Eh, 00h, 00h,0DCh, 76h
9672:1A6D  66 60 F0 00 00 00			db	 66h, 60h,0F0h, 00h, 00h, 00h
9672:1A73  7C C0 78 0C F8 00			db	 7Ch,0C0h, 78h, 0Ch,0F8h, 00h
9672:1A79  10 30 7C 30 30 34			db	 10h, 30h, 7Ch, 30h, 30h, 34h
9672:1A7F  18 00 00 00 CC CC			db	 18h, 00h, 00h, 00h,0CCh,0CCh
9672:1A85  CC CC 76 00 00 00			db	0CCh,0CCh, 76h, 00h, 00h, 00h
9672:1A8B  CC CC CC 78 30 00			db	0CCh,0CCh,0CCh, 78h, 30h, 00h
9672:1A91  00 00 C6 D6 FE FE			db	 00h, 00h,0C6h,0D6h,0FEh,0FEh
9672:1A97  6C 00 00 00 C6 6C			db	 6Ch, 00h, 00h, 00h,0C6h, 6Ch
9672:1A9D  38 6C C6 00 00 00			db	 38h, 6Ch,0C6h, 00h, 00h, 00h
9672:1AA3  CC CC CC 7C 0C F8			db	0CCh,0CCh,0CCh, 7Ch, 0Ch,0F8h
9672:1AA9  00 00 FC 98 30 64			db	 00h, 00h,0FCh, 98h, 30h, 64h
9672:1AAF  FC 00 1C 30 30 E0			db	0FCh, 00h, 1Ch, 30h, 30h,0E0h
9672:1AB5  30 30 1C 00 18 18			db	 30h, 30h, 1Ch, 00h, 18h, 18h
9672:1ABB  18 00 18 18 18 00			db	 18h, 00h, 18h, 18h, 18h, 00h
9672:1AC1  E0 30 30 1C 30 30			db	0E0h, 30h, 30h, 1Ch, 30h, 30h
9672:1AC7  E0 00 76 DC				db	0E0h, 00h, 76h,0DCh
9672:1ACB  0007[00]				db	7 dup (0)
9672:1AD2  10 38 6C C6 C6 FE			db	 10h, 38h, 6Ch,0C6h,0C6h,0FEh
9672:1AD8  0518[00]				db	1304 dup (0)

					; Reboot vector @ FE00:0017
						JMP	FE00:0017
;9672:1FF0  EA 17 00 00 FE			db	0EAh, 17h, 00h, 00h,0FEh
9672:1FF5  000A[00]				db	10 dup (0)
9672:1FFF  14			data_99		db	14h			; Data table (indexed access)
										;  xref 9672:1457, 1470

				seg_a		ends



						end	start
           l1rom.lst       LDP	REV 1.0 10/30/85	Sourcer	v7.00   12-Apr-24  12:34 am   Page 69


				�������������������� CROSS REFERENCE - KEY ENTRY POINTS �������������������

				    seg:off    type	   label
				   ---- ----   ----   --------------------------------
				   9672:0000   far    start

				 ������������������ Interrupt Usage Synopsis ������������������

				        Interrupt 10h : Video display	ah=functn xxh
				        Interrupt 10h :  ah=00h	 set display mode in al
				        Interrupt 10h :  ah=02h	 set cursor location in dx
				        Interrupt 10h :  ah=03h	 get cursor loc in dx, mode cx
				        Interrupt 10h :  ah=08h	 get char al & attrib ah @curs
				        Interrupt 10h :  ah=0Ah	 set char al at present curs
				        Interrupt 10h :  ah=0Eh	 write char al, teletype mode
				        Interrupt 13h : Disk  dl=drive #  ah=func xxh
				        Interrupt 13h :  ah=00h	 reset disk, al=return status
				        Interrupt 13h :  ah=02h	 read sectors to memory es:bx
				        Interrupt 17h : Printer	 dx=prn#, ah=func xxh
				        Interrupt 17h :  ah=01h	 initialize, ah=return status
				        Interrupt 1Bh : Keyboard break (cntrl-break)

				 ������������������ I/O Port Usage Synopsis  ������������������

				        Port 0     : DMA-1 bas&add ch 0
				        Port 1     : DMA-1 bas&cnt ch 0
				        Port 2     : DMA-1 bas&add ch 1
				        Port 40h   : 8253 timer	0 clock
				        Port 42h   : 8253 timer	2 spkr
				        Port 43h   : 8253 timer	control
				        Port 60h   : keybd scan	or sw1
				        Port 61h   : 8255 port B, read
				        Port 61h   : 8255 B - spkr, etc
				        Port 61h   :  al = 0, speaker off
				        Port 62h   : 8255 C - sw2, etc.
				        Port 63h   : 8255 mode reg
				        Port 81h   : DMA page reg ch 2
				        Port 89h   : DMA page reg ch 6
				        Port 8Ah   : DMA page reg ch 7
				        Port 8Bh   : DMA page reg ch 5
				        Port 3D4h  : CGA/EGA reg index
				        Port 3D4h  :  al = 0, horiz char total
				        Port 3D4h  :  al = 0Ah,	cursor start, mode
				        Port 3D4h  :  al = 0Bh,	cursor end
				        Port 3D4h  :  al = 10h,	light pen high
				        Port 3D4h  :  al = 11h,	light pen low
				        Port 3D5h  : CGA/EGA indxd data
				        Port 3D8h  : CGA video control
				        Port 3D9h  : CGA color control
				        Port 3DAh  : CGA/EGA vid status
				        Port 3DBh  : CGA light pen clr
				           44 Ocurrences of non-standard I/O ports used (search for ??).

